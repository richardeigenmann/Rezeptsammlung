<!DOCTYPE HTML>
<html>

<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Blumenkohl-Auflauf</title>
  <link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
  <meta name="RCP-Speise-Kategorie" content="Gratins">
  <meta name="RCP-Speise-Kategorie" content="Aufl&auml;ufe">
  <meta name="RCP-Speise-Kategorie" content="Aus dem Ofen">
  <meta name="RCP-Speise-Kategorie" content="Vegetarisch">
  <meta name="RCP-Speise-Kategorie" content="Beilagen">
  <meta name="RCP-Zutat" content="Blumenkohl">
  <meta name="RCP-Zutat" content="Mehl">
  <meta name="RCP-Zutat" content="Butter">
  <meta name="RCP-Zutat" content="Milch">
  <meta name="RCP-Zutat" content="Eier">
  <meta name="RCP-Bewertung" content="3 Sterne">
  <meta name="RCP-Quelle" content="Herbert Eigenmann">
</head>

<body>
  <h1>Blumenkohl-Auflauf</h1>
  <img src="Rcp027.jpg" alt="Blumenkohl-Auflauf" width="400" height="267">

  <table>
    <tbody>
      <tr>
        <td colspan="2">
          <strong>Zutaten f&uuml;r 4 Personen:</strong>
        </td>
      </tr>
      <tr>
        <td class="td-qty">750 g</td>
        <td><strong>Blumenkohl</strong></td>
      </tr>
      <tr>
        <td class="td-qty">20 g</td>
        <td><strong>Mehl</strong></td>
      </tr>
      <tr>
        <td class="td-qty">30 g</td>
        <td><strong>Butter</strong> oder <strong>Margarine</strong></td>
      </tr>
      <tr>
        <td class="td-qty">1 dl</td>
        <td><strong>Milch</strong></td>
      </tr>
      <tr>
        <td class="td-qty">3</td>
        <td><strong>Eier</strong></td>
      </tr>
      <tr>
        <td class="td-qty"></td>
        <td><strong>Salz, Muskat</strong></td>
      </tr>
    </tbody>
  </table>

  <h2>Zubereitung:</h2>
  <p>Auflaufform 2 l</p>
  <p>Ofen auf Mittelhitze (180&deg;C) vorheizen.</p>
  <p>Blumenkohl r&uuml;sten, waschen und in kleine R&ouml;schen aufteilen.</p>
  <p>In kochendem Salzwasser knapp garkochen, etwa 10 Minuten.</p>
  <p>Das Wasser abgiessen, 2 dl aufbewahren.</p>
  <p>Das Mehl in der Butter d&auml;mpfen, mit der Milch und dem Blumenkohl-Kochwasser abl&ouml;schen, glatt r&uuml;hren
    und w&uuml;rzen. Von der Hitze nehmen.</p>
  <p>Eier teilen. Eigelb und Blumenkohl mit der Sauce mischen und abk&uuml;hlen lassen.</p>
  <p>Eiweiss zu Schnee schlagen. Sorgf&auml;ltig unter die Masse ziehen und die Auflaufform einf&uuml;llen.</p>
  <p>W&auml;hrend 50 - 60 Minuten backen. Sofort servieren.</p>

  <h2>Quelle:</h2>
  <p>Herbert Eigenmann, Code: KOA</p>

  <h2>Bewertung:</h2>
  <p>Getestet am 12.3.96 von RE: Akzeptabel. Eventuell ein Versuch mit richtiger B&eacute;chamel Sauce machen. Getestet
    mit Brokkoli da Blumenkohl nicht erh&auml;ltlich war.</p>
  <p>Das kommt eher wie ein Blumenkohl-Soufflee daher. Essbar, schmeckt aber stark nach Blumenkohl. Ist wohl schon
    richtig so aber da das nicht so mein Lieblingsgem&uuml;se ist gibt es 3 Sterne. RE 20.2.2010</p>

<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<script async src="https://www.googletagmanager.com/gtag/js?id=G-XWT8EWS5BN"></script>
<script>
  // Function to request a wake lock
  async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

  // Function to release the wake lock
  function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

  // Initialize wake lock on page load
  async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
          await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
  }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
    requestWakeLock();
      } else {
    releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
    releaseWakeLock(); // Automatically release wake lock when page is hidden
  wakeLockToggle.checked = false; // Update checkbox state
      }
    });

  // Enable wake lock by default when the page loads
  window.addEventListener('load', initializeWakeLock);
</script>
</body>

</html>