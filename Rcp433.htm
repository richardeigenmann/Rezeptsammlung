<!DOCTYPE HTML>
<html>

<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>H&auml;hnchengericht</title>
  <link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
  <meta name="RCP-Speise-Kategorie" content="Aus dem Ofen">
  <meta name="RCP-Speise-Kategorie" content="Fleischgerichte">
  <meta name="RCP-Speise-Kategorie" content="Hauptgerichte">
  <meta name="RCP-Zutat" content="Poulet, ganz">
  <meta name="RCP-Zutat" content="Peperoni">
  <meta name="RCP-Zutat" content="Silberzwiebeln">
  <meta name="RCP-Zutat" content="Speck">
  <meta name="RCP-Zutat" content="Champignons">
  <meta name="RCP-Zutat" content="Bouillon">
  <meta name="RCP-Zutat" content="Maizena">
  <meta name="RCP-Zutat" content="Sauerrahm">
  <meta name="RCP-Bewertung" content="4 Sterne">
  <meta name="RCP-Quelle" content="Werbebrosch&uuml;re">
<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-XWT8EWS5BN"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-XWT8EWS5BN');
</script>
<body>
  <h1>H&auml;hnchengericht</h1>
  <img src="Rcp433.jpg" alt="H&auml;hnchengericht" width="400" height="378">

  <table>
    <tbody>
      <tr>
        <td colspan="2"><strong>Zutaten f&uuml;r 4 Portionen</strong></td>
      </tr>
      <tr>
        <td class="td-qty">1</td>
        <td>k&uuml;chenfertiges fleischiges <strong>H&auml;hnchen</strong> (etwa 1.2 kg)</td>
      </tr>
      <tr>
        <td class="td-qty"></td>
        <td><strong>Salz, Pfeffer</strong></td>
      </tr>
      <tr>
        <td class="td-qty">2</td>
        <td>kleine rote <strong>Paprikaschoten</strong></td>
      </tr>
      <tr>
        <td class="td-qty">200 g</td>
        <td><strong>Perlzwiebeln</strong></td>
      </tr>
      <tr>
        <td class="td-qty">100 g</td>
        <td>durchwachsener <strong>Speck</strong>, in Streifen</td>
      </tr>
      <tr>
        <td class="td-qty">2 El</td>
        <td><strong>&Ouml;l</strong></td>
      </tr>
      <tr>
        <td class="td-qty">220 g</td>
        <td>kleine frische <strong>Champignons</strong></td>
      </tr>
      <tr>
        <td class="td-qty">6 dl</td>
        <td><strong>H&uuml;hnerbr&uuml;he</strong></td>
      </tr>
      <tr>
        <td class="td-qty">2 Tl</td>
        <td><strong>Speisest&auml;rke</strong></td>
      </tr>
      <tr>
        <td class="td-qty">200 g</td>
        <td><strong>saure Sahne</strong></td>
      </tr>
    </tbody>
  </table>


  <h2>Zubereitung:</h2>
  <p>Zubereiten: 25 Minuten<br>Garen: 1 Stunde</p>
  <p>Ofen auf 220&deg;C vorheizen.</p>
  <p>H&auml;hnchen waschen, trocken tupfen und in 6-8 Portionen teilen. Salzen, pfeffern und in einen grossen
    Br&auml;ter legen. Ein Br&auml;ter ist wohl eine grosser Gusseisentopf.</p>
  <p>Paprikaschoten putzen, waschen und in etwa 1 cm breite Streifen schneiden und zu den H&uuml;hnerst&uuml;cken geben.
  </p>
  <p>Wasser aufkochen. Zwiebeln in einer Sch&uuml;ssel mit dem kochendem Wasser &uuml;bergiessen und 5 Minuten ziehen
    lassen. Das Wasser abgiessen, die Zwiebeln pellen und in den Br&auml;ter geben.</p>
  <p>Die Speckstreifen ebenfalls in den Br&auml;ter geben.</p>
  <p>Oel &uuml;ber alle Zutaten tr&auml;ufeln und das Gericht 20 Minuten im Backofen (Gas 4; Umluft 200&deg;C) garen.
  </p>
  <p>Pilze putzen und in den Br&auml;ter geben. Alles nochmals 20 Minuten garen.</p>
  <p>Bouillon zubereiten.</p>
  <p>Br&auml;ter aus dem Ofen nehmen und auf den Herd stellen. Br&uuml;he angiessen und alles 10 Minuten k&ouml;cheln
    lassen.</p>
  <p>St&auml;rke mit Wasser anr&uuml;hren. Zum Gericht giessen und dieses unter r&uuml;hren andicken.</p>
  <p>Saure Sahne untermischen und alles kurz erhitzen. Mit Salz und Pfeffer abschmecken. Schnittlauch dar&uuml;ber
    streuen und servieren.</p>

  <h2>Hinweis</h2>
  <p>Die Gem&uuml;seauswahl variiert mit der Jahreszeit. So kann man Kartoffeln und in St&uuml;cke geschnittene
    M&ouml;hren oder Petersilienwurzeln mitgaren. Auch Lauch und Knollensellerie eignen sich f&uuml;r dieses Gericht.
  </p>

  <h2>Quelle:</h2>
  <p>Werbung f&uuml;r eine Rezeptkartensammlung</p>

  <h2>Bewertung:</h2>
  <p>RE, 4.2.2006 wegen der Sauce wird das ein sehr reichhaltiges Essen. Schmeckt super. Ich hatte Lauch verwendet statt
    Perlzwiebeln. Paprikaschoten habe ich interpretiert als Peperoni. Kam gut. Mit Chilis k&ouml;nnte es recht
    interessant sein. Ich verwendete eine Gratinform was den Nachteil hat, dass herausragende St&uuml;cke verbrennen
    k&ouml;nnen.</p>
  <p>Hat am 8.4.2010 sehr fein geschmeckt. RE</p>

<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-PHL53P" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

<script>
  // Function to request a wake lock
  async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

  // Function to release the wake lock
  function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

  // Initialize wake lock on page load
  async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
          await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
  }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
    requestWakeLock();
      } else {
    releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
    releaseWakeLock(); // Automatically release wake lock when page is hidden
  wakeLockToggle.checked = false; // Update checkbox state
      }
    });

  // Enable wake lock by default when the page loads
  window.addEventListener('load', initializeWakeLock);
</script></body>

</html>