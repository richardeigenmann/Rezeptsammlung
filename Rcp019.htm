<!DOCTYPE HTML>
<html>

<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Thon-Gratin</title>
    <link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
    <meta name="RCP-Speise-Kategorie" content="Gratins">
    <meta name="RCP-Speise-Kategorie" content="Beilagen">
    <meta name="RCP-Speise-Kategorie" content="Aus dem Ofen">
    <meta name="RCP-Zutat" content="H&ouml;rnli">
    <meta name="RCP-Zutat" content="Thunfisch">
    <meta name="RCP-Zutat" content="Rahm">
    <meta name="RCP-Zutat" content="Reibk&auml;se">
    <meta name="RCP-Bewertung" content="3 Sterne">
    <meta name="RCP-Quelle" content="Unbekannt">
</head>

<body>
    <h1>Thon-Gratin</h1>
    <img src="Rcp019.jpg" alt="Thon-Gratin" width="451" height="278">

    <table>
        <tbody>
            <tr>
                <td colspan="2"><strong>Zutaten f&uuml;r 4 Personen:</strong></td>
            </tr>
            <tr>
                <td class="td-qty">500 g</td>
                <td><strong>H&ouml;rnli</strong></td>
            </tr>
            <tr>
                <td class="td-qty">2</td>
                <td><strong>B&uuml;chsen Thon</strong></td>
            </tr>
            <tr>
                <td class="td-qty">3 dl</td>
                <td><strong>Rahm</strong></td>
            </tr>
            <tr>
                <td class="td-qty">1</td>
                <td><strong>Ei</strong></td>
            </tr>
            <tr>
                <td class="td-qty">100 g</td>
                <td><strong>Parmesan</strong></td>
            </tr>
            <tr>
                <td class="td-qty">1 El</td>
                <td><strong>Maizena</strong></td>
            </tr>
            <tr>
                <td class="td-qty">1,5 dl</td>
                <td><strong>Weisswein</strong></td>
            </tr>
            <tr>
                <td class="td-qty"></td>
                <td><strong>Salz</strong></td>
            </tr>
            <tr>
                <td class="td-qty"></td>
                <td><strong>Pfeffer</strong></td>
            </tr>
        </tbody>
    </table>

    <h2>Zubereitung:</h2>
    <p>Die H&ouml;rnli in Salzwasser kochen.</p>
    <p>Den Thon zerzupfen, in den Rahm geben, den Rahm erhitzen und w&uuml;rzen.</p>
    <p>Den Backofen auf 220&deg;C vorheizen</p>
    <p>Im Wein wird das Maizena aufgel&ouml;st und in die Rahm-Thon-Sauce ger&uuml;hrt.</p>
    <p>Die Gratinform bebuttern.</p>
    <p>Sauce noch einmal kurz aufkochen, vom Herd nehmen und das Ei dazu r&uuml;hren. </p>
    <p>Die H&ouml;rnli in eine feuerfeste Form geben und die Sauce dar&uuml;ber giessen.
        Mit Parmesan &uuml;berstreuen und kurz (20 Minuten, 220&deg;C) gratinieren.</p>

    <h2>Bewertung:</h2>
    <p>Von RE getestet vor 14.5.95. Schmeckt ganz gut. Die 500 g H&ouml;rnli sind deutlich zu viel. Auszuprobieren:</p>
    <p>F&uuml;r 1 Person: 100g H&ouml;rnli, 1 B&uuml;chse Thon, 1.5 dl Rahm, 1 Ei, 50g Parmesan, 1/2 El Maizena, 1 dl
        Weisswein, Salz, Pfeffer.</p>
    <p>F&uuml;r 4 Personen: 300g H&ouml;rnli, 2 B&uuml;chsen Thon, 3dl Rahm, 1 Ei, 100g Parmesan, 1 El Maizena, 1.5dl
        Weisswein, Salz, Pfeffer.</p>
    <p>Am 13.12.2004 gekocht. F&uuml;r 4 Personen 250g H&ouml;rnli, 2 B&uuml;chsen Thon.</p>

<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<script async src="https://www.googletagmanager.com/gtag/js?id=G-XWT8EWS5BN"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-XWT8EWS5BN');
  // Function to request a wake lock
  async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

  // Function to release the wake lock
  function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

  // Initialize wake lock on page load
  async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
          await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
  }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
    requestWakeLock();
      } else {
    releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
    releaseWakeLock(); // Automatically release wake lock when page is hidden
  wakeLockToggle.checked = false; // Update checkbox state
      }
    });

  // Enable wake lock by default when the page loads
  window.addEventListener('load', initializeWakeLock);
</script>
</body>

</html>