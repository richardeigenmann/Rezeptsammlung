<!DOCTYPE HTML>
<html>

<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Kastaniencr&egrave;me</title>
    <link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
    <meta name="RCP-Speise-Kategorie" content="Desserts">
    <meta name="RCP-Speise-Kategorie" content="Vegetarisch">
    <meta name="RCP-Zutat" content="Marronipur&eacute;e">
    <meta name="RCP-Zutat" content="Halbrahm">
    <meta name="RCP-Zutat" content="Kirsch">
    <meta name="RCP-Zutat" content="Rum">
    <meta name="RCP-Zutat" content="Cocktail Kirschen">
    <meta name="RCP-Bewertung" content="4 Sterne">
    <meta name="RCP-Quelle" content="Herbert Eigenmann">
</head>

<body>
    <h1>Kastaniencr&egrave;me</h1>
    <img src="Rcp230.jpg" alt="Kastaniencr&egrave;me" width="400" height="317">

    <table>
        <tbody>
            <tr>
                <td colspan="2"><strong>Zutaten f&uuml;r 4 Personen:</strong></td>
            </tr>
            <tr>
                <td class="td-qty">440 g</td>
                <td><strong>Vermicelles</strong></td>
            </tr>
            <tr>
                <td class="td-qty">2 dl</td>
                <td><strong>Halbrahm</strong></td>
            </tr>
            <tr>
                <td class="td-qty">2 TL</td>
                <td><strong>Kirsch</strong></td>
            </tr>
            <tr>
                <td class="td-qty">1 TL</td>
                <td><strong>Rum</strong></td>
            </tr>
            <tr>
                <td class="td-qty">4</td>
                <td><strong>Cocktail Kirschen</strong></td>
            </tr>
        </tbody>
    </table>

    <h2>Zubereitung:</h2>
    <p>Vermicelles ca. 2 Stunden auftauen lassen.</p>
    <p>Rahm steif schlagen; mit den Vermicelles und dem Kirsch vermischen.</p>
    <p>Cr&egrave;me in 4 Portionensch&auml;lchen anrichten und 30 Minuten k&uuml;hl stellen. Mit Cocktailkirschen
        garniert servieren.</p>

    <h2>Quelle:</h2>
    <p>Herbert Eigenmann, Code: KNC</p>

    <h2>Bewertung:</h2>
    <p>Schmeckte am 22.7.2009 sehr gut. RE</p>


<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<script async src="https://www.googletagmanager.com/gtag/js?id=G-XWT8EWS5BN"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-XWT8EWS5BN');
  // Function to request a wake lock
  async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

  // Function to release the wake lock
  function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

  // Initialize wake lock on page load
  async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
          await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
  }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
    requestWakeLock();
      } else {
    releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
    releaseWakeLock(); // Automatically release wake lock when page is hidden
  wakeLockToggle.checked = false; // Update checkbox state
      }
    });

  // Enable wake lock by default when the page loads
  window.addEventListener('load', initializeWakeLock);
</script></body>

</html>