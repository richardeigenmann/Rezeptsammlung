<!DOCTYPE HTML>
<html>

<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title>Nougat-Kaffee-Cake</title>
	<link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
	<meta name="RCP-Speise-Kategorie" content="Cakes">
	<meta name="RCP-Speise-Kategorie" content="Aus dem Ofen">
	<meta name="RCP-Speise-Kategorie" content="Vegetarisch">
	<meta name="RCP-Zutat" content="Zucker">
	<meta name="RCP-Zutat" content="Haseln&uuml;sse">
	<meta name="RCP-Zutat" content="Halbrahm">
	<meta name="RCP-Zutat" content="Kaffeepulver">
	<meta name="RCP-Zutat" content="Butter">
	<meta name="RCP-Zutat" content="Eier">
	<meta name="RCP-Zutat" content="Baumn&uuml;sse">
	<meta name="RCP-Zutat" content="Mehl">
	<meta name="RCP-Zutat" content="Backpulver">
	<meta name="RCP-Bewertung" content="4 Sterne">
	<meta name="RCP-Quelle" content="Betty Bossi">
<!-- Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
  new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
  j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
  'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
  })(window,document,'script','dataLayer','GTM-PHL53P');</script>
<!-- End Google Tag Manager -->
</head>
<body>
	<h1>Nougat-Kaffee-Cake</h1>
	<img src="Rcp481.jpg" alt="Nougat-Kaffee-Cake" width="400" height="178">

	<table>
		<tbody>
			<tr>
				<td colspan="2"><strong>Zutaten:</strong></td>
			</tr>
			<tr>
				<td class="td-qty">200g + 150g</td>
				<td><strong>Zucker</strong></td>
			</tr>
			<tr>
				<td class="td-qty">100g</td>
				<td><strong>Haseln&uuml;sse</strong>, grob gehackt</td>
			</tr>
			<tr>
				<td class="td-qty">2dl</td>
				<td><strong>Halbrahm</strong></td>
			</tr>
			<tr>
				<td class="td-qty">5 Tl</td>
				<td>sofort l&ouml;sliches <strong>Kaffeepulver</strong></td>
			</tr>
			<tr>
				<td class="td-qty">200g</td>
				<td><strong>Butter</strong></td>
			</tr>
			<tr>
				<td class="td-qty">4</td>
				<td><strong>Eigelbe</strong></td>
			</tr>
			<tr>
				<td class="td-qty">100g</td>
				<td><strong>Baumn&uuml;sse</strong>, grob gehackt</td>
			</tr>
			<tr>
				<td class="td-qty">4</td>
				<td><strong>Eiweisse</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 Prise</td>
				<td><strong>Salz</strong></td>
			</tr>
			<tr>
				<td class="td-qty">250 g</td>
				<td><strong>Mehl</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 Tl</td>
				<td><strong>Backpulver</strong></td>
			</tr>
			<tr>
				<td class="td-qty"></td>
				<td>beiseite gestellter <strong>Nougat</strong></td>
			</tr>
		</tbody>
	</table>

	<h2>Zubereitung:</h2>
	<p>Vor- und zubereiten: ca. 30 Minuten Caramelisieren / Backen: ca. 80 Minuten f&uuml;r eine Cakeform von ca. 30 cm
		gefettet.</p>
	<p>200g Zucker und Haseln&uuml;sse mischen, auf ein mit Backpapier belegtes Blech streuen.</p>
	<p><strong>Caramelisieren:</strong> ca. 10 Minuten in der unteren H&auml;lfte des auf 220&deg;C vorgeheizten Ofens,
		bis die Mischung hellbraun ist. Herausnehmen, Backpapier auf ein Gitter ziehen, ausk&uuml;hlen, grob hacken, 3
		El f&uuml;r die Verzierung, Rest f&uuml;r den Teig beiseite stellen. Hitze auf 180&deg;C reduzieren.</p>
	<p><Strong>R&uuml;hrteig:</Strong></p>
	<p>Rahm warm werden lassen, Kaffeepulver beigeben, aufl&ouml;sen, abk&uuml;hlen.</p>
	<p>Butter in einer Sch&uuml;ssel weich r&uuml;hren.</p>
	<p>150g Zucker und Eigelbe beigeben, weiter r&uuml;hren, bis die Masse hell ist. Nougat, Baumn&uuml;sse und
		abgek&uuml;hlten Rahm darunter mischen.</p>
	<p>Eiweisse mit dem Salz steif schlagen. Mehl und Backpulver mischen, lagenweise mit dem Eiweiss auf die Masse
		geben, mit dem Gummischaber sorgf&auml;ltig darunter ziehen. In die vorbereitete Form f&uuml;llen, beiseite
		gestellten Nougat dar&uuml;ber streuen.</p>
	<p><strong>Backen:</strong> ca. 70 Minuten in der unteren H&auml;lfte des auf 180&deg;C vorgeheizten Ofens.
		Herausnehmen, abk&uuml;hlen, aus der Form nehmen, auf einem Gitter ausk&uuml;hlen.</p>

	<h2>Quelle:</h2>
	<p>Werbung f&uuml;r das Betty Bossi Kochbuch Cake-Festival in der Betty Bossi Zeitung.</p>

	<h2>Kalorien:</h2>
	<p>1 St&uuml;ck von ca. 1.5 cm Breite: 18g Fett, 4g Eiweiss, 28g Kohlenhydrate, 1230 kJ, 294 kcal.</p>

	<h2>Bewertung:</h2>
	<p>Das Caramelisieren ist mir nicht richtig gelungen. Die Schicht muss wohl genau gleich dick sein damit es
		&uuml;berall gleichzeitig schmilzt. Vielleicht ist mein Backofen bei 220&deg;C auch heisser als er sein sollte.
		Hat ein paar verbrannte Ecken gegeben. Schmeckt dennoch sehr fein, RE 11.10.2007</p>

<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-PHL53P" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

<script>
  // Function to request a wake lock
  async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

  // Function to release the wake lock
  function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

  // Initialize wake lock on page load
  async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
          await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
  }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
    requestWakeLock();
      } else {
    releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
    releaseWakeLock(); // Automatically release wake lock when page is hidden
  wakeLockToggle.checked = false; // Update checkbox state
      }
    });

  // Enable wake lock by default when the page loads
  window.addEventListener('load', initializeWakeLock);
</script>
</body>

</html>