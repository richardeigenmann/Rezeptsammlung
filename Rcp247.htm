<!DOCTYPE HTML>
<html>

<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title>Husarentopf</title>
	<link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
	<meta name="RCP-Speise-Kategorie" content="Hauptgerichte">
	<meta name="RCP-Speise-Kategorie" content="Fleischgerichte">
	<meta name="RCP-Speise-Kategorie" content="Reisgerichte">
	<meta name="RCP-Speise-Kategorie" content="Eint&ouml;pfe">
	<meta name="RCP-Zutat" content="Pouletfleisch">
	<meta name="RCP-Zutat" content="Paprika">
	<meta name="RCP-Zutat" content="Speckw&uuml;rfel">
	<meta name="RCP-Zutat" content="Peperoni">
	<meta name="RCP-Zutat" content="Zwiebeln">
	<meta name="RCP-Zutat" content="Knoblauch">
	<meta name="RCP-Zutat" content="Risotto-Reis">
	<meta name="RCP-Zutat" content="Rahm">
	<meta name="RCP-Zutat" content="Bouillon">
	<meta name="RCP-Bewertung" content="4 Sterne">
	<meta name="RCP-Quelle" content="Betty Bossi">
	<meta name="RCP-Region" content="Ungarisch">
</head>

<body>
	<h1>Husarentopf</h1>
	<img src="Rcp247.jpg" alt="Husarentopf" width="450" height="341">

	<table>
		<tbody>
			<tr>
				<td colspan="2"><strong>Zutaten f&uuml;r 4-6 Personen:</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 kg</td>
				<td><strong>Pouletst&uuml;cke</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 EL</td>
				<td><strong>Paprika</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1/2 TL</td>
				<td><strong>Salz</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 TL</td>
				<td><strong>Streuw&uuml;rze</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 EL</td>
				<td><strong>Bratfett</strong></td>
			</tr>
			<tr>
				<td class="td-qty">100g</td>
				<td><strong>Speckw&uuml;rfeli</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1</td>
				<td><strong>Peperoni</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1</td>
				<td><strong>Zwiebel</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1</td>
				<td><strong>Knoblauchzehe</strong></td>
			</tr>
			<tr>
				<td class="td-qty">200g</td>
				<td><strong>Risotto-Reis</strong></td>
			</tr>
			<tr>
				<td class="td-qty">5-6dl</td>
				<td><strong>Fleischbr&uuml;he</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1dl</td>
				<td><strong>Rahm</strong></td>
			</tr>
		</tbody>
	</table>

	<h2>Zubereitung ca. 40 Minuten:</h2>
	<p>Paprika, Salz und Streuw&uuml;rze in einen Beutel geben. Eventuell Curry oder
	Safran zugeben und vielleicht Cyenne Pfeffer f&uuml;r die Sch&auml;rfe. Mischen.</p>
	<p>Die Pouletst&uuml;cke in den Sack geben und gut sch&uuml;tteln, bis alle
	St&uuml;cke gleichm&auml;ssig gew&uuml;rzt sind.</p>
	<p>Das Bratfett im Topf erhitzen und die Pouletst&uuml;cke langsam, w&auml;hrend 
	20 Minuten, goldig braten.</p>
	<p>Die Speckw&uuml;rfeli beif&uuml;gen und knusprig braten.</p>
	<p>Den Peperoni in grosse oder kleine W&uuml;rfel schneiden.</p>
	<p>Zwiebel in kleine W&uuml;rfel schneiden und den Knoblauch hacken.</p>
	<p>Peperoni, Zwiebel und Knoblauch beigeben und bei schwacher Hitze mitd&auml;mpfen.</p>
	<p>Den Risotto-Reis bef&uuml;gen und glasig d&auml;mpfen.</p>
	<p>Mit Fleischbr&uuml;he abl&ouml;schen. Zugedeckt bei schwacher Hitze 15 Minuten schmoren.</p>
	<p>Rahm zugeben und je nach Reissorte bis zu 5 Minuten weiterk&ouml;cheln.</p>

	<h2>Quelle:</h2>
	<p>Betty Bossi, Alltagsrezepte mit Pfiff, Seite 96</p>

	<h2>Bewertung:</h2>
	<p>Beliebtes Familien- und G&auml;sterezept von Sandra's Mutter. Wurde &ouml;fters mit Erfolg and Anerkennung
	gekocht. Gelang auch am 21 Jan 2023 hervorragend.</p>

<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-47341387-3', 'auto');
  ga('send', 'pageview');

    let wakeLock = null; // Variable to hold the wake lock instance
    const statusText = document.getElementById('status');
    const wakeLockToggle = document.getElementById('wakeLockToggle');

    // Function to request a wake lock
    async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
          //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
          wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

    // Function to release the wake lock
    function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

    // Initialize wake lock on page load
    async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
        await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
    }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
        requestWakeLock();
      } else {
        releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
        releaseWakeLock(); // Automatically release wake lock when page is hidden
        wakeLockToggle.checked = false; // Update checkbox state
      }
    });

    // Enable wake lock by default when the page loads
    window.addEventListener('load', initializeWakeLock);
</script>
</body>

</html>