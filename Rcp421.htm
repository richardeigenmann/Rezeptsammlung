<!DOCTYPE HTML>
<html>

<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Getr&auml;nkter Zitronenkuchen</title>
  <link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
  <meta name="RCP-Speise-Kategorie" content="Cakes">
  <meta name="RCP-Speise-Kategorie" content="Vegetarisch">
  <meta name="RCP-Speise-Kategorie" content="All time favorite">
  <meta name="RCP-Region" content="Schweizerisch">
  <meta name="RCP-Zutat" content="Margarine">
  <meta name="RCP-Zutat" content="Zucker">
  <meta name="RCP-Zutat" content="Eier">
  <meta name="RCP-Zutat" content="Zitronen">
  <meta name="RCP-Zutat" content="Mehl">
  <meta name="RCP-Zutat" content="Backpulver">
  <meta name="RCP-Zutat" content="Puderzucker">
  <meta name="RCP-Bewertung" content="4 Sterne">
  <meta name="RCP-Quelle" content="Betty Bossi">
</head>

<body>
  <h1>Getr&auml;nkter Zitronenkuchen</h1>
  <img src="Rcp421.jpg" alt="Getr&auml;nkter Zitronenkuchen" width="450" height="285">

  <table>
    <tbody>
      <tr>
        <td colspan="2"><strong>Zutaten:</strong></td>
      </tr>
      <tr>
        <td class="td-qty">250 g</td>
        <td><strong>Margarine</strong></td>
      </tr>
      <tr>
        <td class="td-qty">250 g</td>
        <td><strong>Zucker</strong></td>
      </tr>
      <tr>
        <td class="td-qty">5</td>
        <td><strong>Eier</strong></td>
      </tr>
      <tr>
        <td class="td-qty">4</td>
        <td><strong>Zitronen</strong> (f&uuml;r 1dl Saft)</td>
      </tr>
      <tr>
        <td class="td-qty">250 g</td>
        <td><strong>Mehl</strong></td>
      </tr>
      <tr>
        <td class="td-qty">2 Teel&ouml;ffel</td>
        <td><strong>Backpulver</strong></td>
      </tr>
      <tr>
        <td class="td-qty">1 Prise</td>
        <td><strong>Salz</strong></td>
      </tr>
      <tr>
        <td class="td-qty">100 g</td>
        <td><strong>Puderzucker</strong></td>
      </tr>
    </tbody>
  </table>



  <h2>Mise en place:</h2>
  <p>Zutaten bereitstellen</p>
  <p>Schale von 2 Zitronen abreiben</p>
  <p>Alle Zitronen auspressen muss 1dl Saft ergeben</p>
  <p>Ofen auf 180&deg; Vorheizen</p>
  <p>Guss Zubereiten: 1 dl Zitronensaft (3-4 Zitronen) mit 100 g Puderzucker gut vermischen</p>
  <p>Cakeform fetten.</p>

  <h2>Zubereitung:</h2>
  <p>Margarine und Zucker schaumig r&uuml;hren. (Mit der Knetmaschine)</p>
  <p>Eier und Zitronenschale zugeben.</p>
  <p>Mehl, Backpulver, Salz unter Masse mischen und in gut eingefettete Cakeform (28 - 30 cm) f&uuml;llen</p>
  <p>In Mittelhitze (180&deg;C) 60-65 Minuten backen.</p>
  <p>In der Form etwas ausk&uuml;hlen lassen</p>
  <p>Mit einer Stricknadel o.&auml;. mehrmals einstechen und mit dem Guss tr&auml;nken (sorgf&auml;ltig
    &uuml;bergiessen)</p>

  <h2>Quelle:</h2>
  <p>Aus dem vergriffenen: <A href="http://www.bettybossi.ch/de/shop/shop_prod_deta.asp?aid=21457">Betty Bossi
      Backbuch</A>, angeblich Seite 23: <A
      href="http://www.bettybossi.ch/shop/pdf_prod/rezept_12832_pdflink.pdf">Rezept</A></p>


  <h2>Bewertung:</h2>
  <p>Schmeckte am 9.3.2004 Hervorragend!</p>
  <p>Da es im Dezember 2006 sehr viel Sauce gab und ich meinte das Rezept richtig abgeschrieben zu haben von der
    mittlerweile eingegangenen URL http://www.mar-c.ch/s3e musste ich etwas Research anstellen. Das auf der Betty Bossi
    Homepage angegebene Buch habe ich tats&auml;chlich nicht. Quervergleiche legen allerdings nahe, dass Betty Bossi das
    Rezept abgewandelt haben von 5 auf 4 Eier (vielleicht weil man heute gr&ouml;ssere Eier kauft?) und von 2 auf 1 TL
    Backpulver. In S&uuml;dafrika braucht man nicht 4 Zitronen f&uuml;r 1 dl. Es reicht vielleicht sogar eine einzelne.
  </p>
  <p>Warum Puderzucker? Wird doch aufgel&ouml;st? RE 30 Nov 2021</p>


<p CLASS='linkback'>
    <a href='https:\/\/richardeigenmann.github.io\/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    <script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-47341387-3', 'auto');
  ga('send', 'pageview');

    let wakeLock = null; // Variable to hold the wake lock instance
    const statusText = document.getElementById('status');
    const wakeLockToggle = document.getElementById('wakeLockToggle');

    // Function to request a wake lock
    async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
          //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
          wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

    // Function to release the wake lock
    function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

    // Initialize wake lock on page load
    async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
        await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
    }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
        requestWakeLock();
      } else {
        releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
        releaseWakeLock(); // Automatically release wake lock when page is hidden
        wakeLockToggle.checked = false; // Update checkbox state
      }
    });

    // Enable wake lock by default when the page loads
    window.addEventListener('load', initializeWakeLock);
</script>
</body>

</html>