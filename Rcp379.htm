<!DOCTYPE HTML>
<html>

<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Glasierte Kastanien nach Betty Bossi</title>
    <link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
    <meta name="RCP-Speise-Kategorie" content="Vegetarisch">
    <meta name="RCP-Speise-Kategorie" content="Beilagen">
    <meta name="RCP-Speise-Kategorie" content="Wildgerichte">
    <meta name="RCP-Zutat" content="Kastanien">
    <meta name="RCP-Zutat" content="Bouillon">
    <meta name="RCP-Zutat" content="Zucker">
    <meta name="RCP-Zutat" content="Butter">
    <meta name="RCP-Bewertung" content="3 Sterne">
    <meta name="RCP-Quelle" content="Betty Bossi">
</head>

<body>
    <h1>Glasierte Kastanien nach Betty Bossi</h1>
    <img src="Rcp379.jpg" alt="Glasierte Kastanien nach Betty Bossi" width="400" height="267">

    <table>
        <tbody>
            <tr>
                <td COLSPAN="2"><strong>Zutaten als Beilage f&uuml;r 4 Personen:</strong></td>
            </tr>
            <tr>
                <td class="td-qty">600g</td>
                <td>tiefgek&uuml;hlte <strong>Kastanien</strong> angetaut</td>
            </tr>
            <tr>
                <td class="td-qty">3dl</td>
                <td>heisse<strong> Gem&uuml;sebouillon</strong></td>
            </tr>
            <tr>
                <td>4 EL</td>
                <td><strong>Zucker</strong></td>
            </tr>
            <tr>
                <td>1 EL</td>
                <td><strong>Wasser</strong></td>
            </tr>
            <tr>
                <td class="td-qty">1 EL</td>
                <td><strong>Butter </strong>oder<strong> Margarine</strong></td>
            </tr>
        </tbody>
    </table>

    <h2>Zubereitung:</h2>
    <p>Bouillon aufkochen.</p>
    <p>Zucker und Wasser in einer weiten Chromstahlpfanne ohne R&uuml;hren aufkochen. Hitze reduzieren, unter
        gelegentlichem Hin- und Herr&uuml;hren der Pfanne k&ouml;cheln, bis ein hellbrauner Caramel entsteht.</p>
    <p>Pfanne von der Platte ziehen, Kastanien beigeben. Pfanne wieder auf die Platte stellen, Kastanien ca. 1 Minute
        caramelisieren.</p>
    <p>Bouillon dazugiessen und Kastanien zugedeckt ca. 20 Minuten knapp weich k&ouml;cheln.</p>
    <p>Dann offen weiter kochen, bis die Fl&uuml;ssigkeit vollst&auml;ndig eingekocht ist.</p>
    <p>Butter oder Margarine beigeben. Pfanne hin- und herbewegen, bis die Kastanien gl&auml;nzen.</p>
    <p>Eventuell mit Salz und Pfeffer w&uuml;rzen.</p>

    <h2>Quelle:</h2>
    <p>Betty Bossi Zeitung, Oktober 2000, Seite 2</p>
    <p>Siehe auch <a href="Rcp417.htm">Glasierte Kastanien nach d'Chuchi</a></p>

    <h2>Bewertung:</h2>
    <p>War gut. Allerdings muss man h&ouml;llisch aufpassen dass man den Caramel nicht zu stark erhitzt und verbrennt
        denn sonst schmeckt es halt verbrennt. <i>Richard Eigenmann, 28.10.2000</i></p>

<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-47341387-3', 'auto');
  ga('send', 'pageview');

    let wakeLock = null; // Variable to hold the wake lock instance
    const statusText = document.getElementById('status');
    const wakeLockToggle = document.getElementById('wakeLockToggle');

    // Function to request a wake lock
    async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
          //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
          wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

    // Function to release the wake lock
    function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

    // Initialize wake lock on page load
    async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
        await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
    }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
        requestWakeLock();
      } else {
        releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
        releaseWakeLock(); // Automatically release wake lock when page is hidden
        wakeLockToggle.checked = false; // Update checkbox state
      }
    });

    // Enable wake lock by default when the page loads
    window.addEventListener('load', initializeWakeLock);
</script></body>

</html>
