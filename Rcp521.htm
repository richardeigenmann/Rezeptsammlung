<!DOCTYPE html>
<html lang="de">

<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title>Cantaloupe Cream Soup</title>
	<link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
	<meta name="RCP-Speise-Kategorie" content="Suppen">
	<meta name="RCP-Zutat" content="Melonen">
	<meta name="RCP-Zutat" content="Lauch">
	<meta name="RCP-Zutat" content="Zwiebeln">
	<meta name="RCP-Zutat" content="Kartoffeln">
	<meta name="RCP-Zutat" content="Butter">
	<meta name="RCP-Bewertung" content="Unbewertet">
	<meta name="RCP-Quelle" content="Martha Stegemann">
</head>

<body>
	<h1>Cantaloupe Cream Soup</h1>
	<img src="RcpTemplate.jpg" alt="Cantaloupe Cream Soup" width="450" height="369">

	<table>
		<tbody>
			<tr>
				<td colspan="2"><strong>Zutaten:</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1</td>
				<td><strong>white cantaloupe (reserve part to make small cubes)</strong></td>
			</tr>
			<tr>
				<td class="td-qty">2</td>
				<td><strong>leek stalks</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1/2</td>
				<td><strong>medium onion</strong></td>
			</tr>
			<tr>
				<td class="td-qty">3</td>
				<td><strong>medium potatoes</strong></td>
			</tr>
			<tr>
				<td class="td-qty">4 cups</td>
				<td><strong>of chicken broth</strong></td>
			</tr>
			<tr>
				<td class="td-qty"></td>
				<td><strong>Unsalted butter</strong></td>
			</tr>
			<tr>
				<td class="td-qty"></td>
				<td><strong>Salt to taste</strong></td>
			</tr>
		</tbody>
	</table>

    <h2>Zubereitung:</h2>
    <p>Make julienne strips with the onion and rings with the leeks, 
        and fry them in butter. When the onion is crystallized, add 
        the peeled potatoes cut into pieces and stir them in the pan,
        together with the onion and leeks.</p>
    <p>Add 4 cups of chicken broth and cook until the potatoes are 
        tender.</p>
    <p>Add cantaloupe cubes (size 1 sq inch approx) and wait until 
        tender.</p>
    <p>Remove from the heat and wait until it cools down a bit. 
        Put it in a blender to make a cream and then pass it through
        a strainer.</p>
    <p>Add salt to taste.</p>
    <p>Refrigerate and serve cold, topped with the remaining small
        cantaloupe cubes.</p>
    
    <h2>Quelle:</h2>
	<p>Martha Stegemann</p>

	<h2>Bewertung:</h2>
	<p>Unbewertet</p>

<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<script async src="https://www.googletagmanager.com/gtag/js?id=G-XWT8EWS5BN"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-XWT8EWS5BN');
  // Function to request a wake lock
  async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

  // Function to release the wake lock
  function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

  // Initialize wake lock on page load
  async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
          await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
  }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
    requestWakeLock();
      } else {
    releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
    releaseWakeLock(); // Automatically release wake lock when page is hidden
  wakeLockToggle.checked = false; // Update checkbox state
      }
    });

  // Enable wake lock by default when the page loads
  window.addEventListener('load', initializeWakeLock);
</script>
</body>

</html>