<!DOCTYPE HTML>
<html>

<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Artischockenherzen au Gratin</title>
  <link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
  <meta name="RCP-Speise-Kategorie" content="Gratins">
  <meta name="RCP-Speise-Kategorie" content="Aus dem Ofen">
  <meta name="RCP-Speise-Kategorie" content="Vegetarisch">
  <meta name="RCP-Zutat" content="Artischockenherzen">
  <meta name="RCP-Zutat" content="Butter">
  <meta name="RCP-Zutat" content="Mehl">
  <meta name="RCP-Zutat" content="Rahm">
  <meta name="RCP-Zutat" content="Reibk&auml;se">
  <meta name="RCP-Bewertung" content="4 Sterne">
  <meta name="RCP-Quelle" content="Herbert Eigenmann">
</head>

<body>
  <h1>Artischockenherzen au Gratin</h1>
  <img src="Rcp020.jpg" alt="Artischockenherzen au Gratin" width="400" height="242">

  <table>
    <tbody>
      <tr>
        <td colspan="3"><strong>Zutaten:</strong></td>
      </tr>
      <tr>
        <td><strong>1 Pers</strong></td>
        <td><strong>2 Pers</strong></td>
        <td></td>
      </tr>
      <tr>
        <td class="td-qty">3 Dosen</td>
        <td class="td-qty">1 Dose</td>
        <td><strong>Artischockenherzen</strong> Abtropfgewicht 240g</td>
      </tr>
      <tr>
        <td class="td-qty">3 dl</td>
        <td class="td-qty">1 dl</td>
        <td><strong>Einlegefl&uuml;ssigkeit</strong></td>
      </tr>
      <tr>
        <td class="td-qty">40 g</td>
        <td class="td-qty">10 g/1 EL</td>
        <td><strong>Butter</strong></td>
      </tr>
      <tr>
        <td class="td-qty">40 g</td>
        <td class="td-qty">10 g/1 EL</td>
        <td><strong>Mehl</strong></td>
      </tr>
      <tr>
        <td class="td-qty">1 dl</td>
        <td class="td-qty">keine</td>
        <td><strong>Bouillon</strong></td>
      </tr>
      <tr>
        <td class="td-qty">2 dl</td>
        <td class="td-qty">1/2 dl</td>
        <td><strong>Rahm</strong></td>
      </tr>
      <tr>
        <td></td>
        <td></td>
        <td><strong>Muskat</strong></td>
      </tr>
      <tr>
        <td></td>
        <td></td>
        <td><strong>Salz</strong></td>
      </tr>
      <tr>
        <td></td>
        <td></td>
        <td><strong>Thymianpulver</strong></td>
      </tr>
      <tr>
        <td class="td-qty">50 g</td>
        <td class="td-qty">20 g</td>
        <td><strong>Greyerzerk&auml;se, gerieben</strong></td>
      </tr>
      <tr>
        <td></td>
        <td></td>
        <td><strong>Butterflocken</strong></td>
      </tr>
    </tbody>
  </table>

  <h2>Zubereitung:</h2>
  <p>Bouillon zubereiten. Die Gratinform bebuttern. Die Dose &ouml;ffnen und die Artischockenherzen sorgf&auml;ltig
    absch&uuml;tten.
    Gut abtropfen lassen. Die Einlegefl&uuml;ssigkeit beiseite stellen. Die Artischockenherzen in die bebutterte
    Gratinform legen,
    so dass sie dicht nebeneinander stehen.</p>

  <p>F&uuml;r die Sauce die Butter erhitzen, das Mehl darin anschwitzen. Bouillon und Artischockenwasser mischen.
    Die Pfanne beiseite ziehen und mit dem Artischockenwasser abl&ouml;schen. Gut umr&uuml;hren, aufkochen und mit
    Rahm verfeinern. Nachw&uuml;rzen, zwei Drittel vom K&auml;se unter die Sauce ziehen. </p>
  <p>Die Artischockenherzen mit der Sauce &uuml;berziehen. Den restlichen K&auml;se dar&uuml;ber streuen und mit
    Butterflocken abschliessen.
    Auf mittlerer H&ouml;he in den vorgeheizten Backofen schieben und goldgelb &uuml;berbacken (20 Minuten, 220&#176;C).
  </p>

  <h2>Quelle:</h2>
  <p>Herbert Eigenmann, Code: ARG</p>

  <h2>Bewertung:</h2>
  <p>Getestet 14.5.95 von RE. Ganz hervorragend!</p>
  <p>F&uuml;r das Bild bekam ich keine Herzen, bloss B&ouml;den. War auch gut.</p>

<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<!-- Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
  new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
  j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
  'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
  })(window,document,'script','dataLayer','GTM-PHL53P');</script>
  <!-- End Google Tag Manager -->
<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-PHL53P" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

<script>
  // Function to request a wake lock
  async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

  // Function to release the wake lock
  function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

  // Initialize wake lock on page load
  async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
          await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
  }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
    requestWakeLock();
      } else {
    releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
    releaseWakeLock(); // Automatically release wake lock when page is hidden
  wakeLockToggle.checked = false; // Update checkbox state
      }
    });

  // Enable wake lock by default when the page loads
  window.addEventListener('load', initializeWakeLock);
</script>
</body>

</html>