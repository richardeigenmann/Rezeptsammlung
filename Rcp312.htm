<!DOCTYPE HTML>
<html>

<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title>Birnen-Schokoladentorte</title>
	<link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
	<meta name="RCP-Speise-Kategorie" content="Cakes">
	<meta name="RCP-Speise-Kategorie" content="Vegetarisch">
	<meta name="RCP-Zutat" content="Eier">
	<meta name="RCP-Zutat" content="Zucker">
	<meta name="RCP-Zutat" content="Ingwerpulver">
	<meta name="RCP-Zutat" content="Halbrahm sauer">
	<meta name="RCP-Zutat" content="Mehl">
	<meta name="RCP-Zutat" content="Butter">
	<meta name="RCP-Zutat" content="Spalierbiernen">
	<meta name="RCP-Zutat" content="Honig">
	<meta name="RCP-Zutat" content="Williams">
	<meta name="RCP-Zutat" content="Schokolade">
	<meta name="RCP-Bewertung" content="3 Sterne">
	<meta name="RCP-Quelle" content="Herbert Eigenmann">
</head>

<body>
	<h1>Birnen-Schokoladentorte</h1>
	<img src="Rcp312.jpg" alt="Birnen-Schokoladentorte" width="400" height="284">

	<table>
		<tbody>
			<tr>
				<td colspan="2"><strong>Zutaten f&uuml;r 4 Personen:</strong></td>
			</tr>
			<tr>
				<td class="td-qty">3</td>
				<td><strong>Eier</strong></td>
			</tr>
			<tr>
				<td class="td-qty">120 g</td>
				<td><strong>Zucker</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1/2 TL</td>
				<td><strong>Ingwerpulver</strong></td>
			</tr>
			<tr>
				<td class="td-qty">2 EL</td>
				<td><strong>Halbrahm sauer</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 Prise</td>
				<td><strong>Salz</strong></td>
			</tr>
			<tr>
				<td class="td-qty">70 g</td>
				<td><strong>Mehl</strong></td>
			</tr>
			<tr>
				<td class="td-qty">50 g</td>
				<td><strong>Butter</strong></td>
			</tr>
			<tr>
				<td colspan=2><strong>F&uuml;llung:</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 Dose</td>
				<td><strong>Spalierbiernen</strong></td>
			</tr>
			<tr>
				<td class="td-qty">2 EL</td>
				<td><strong>Honig</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 EL</td>
				<td><strong>Williams</strong></td>
			</tr>
			<tr>
				<td colspan=2><strong>Glasur:</strong></td>
			</tr>
			<tr>
				<td class="td-qty">150 g</td>
				<td><strong>Schokolade</strong></td>
			</tr>
			<tr>
				<td class="td-qty">10 g</td>
				<td><strong>Butter</strong></td>
			</tr>
			<tr>
				<td class="td-qty">2 EL</td>
				<td><strong>Williams</strong></td>
			</tr>
		</tbody>
	</table>

	<h2>Zubereitung:</h2>
	<p>F&uuml;r eine Form von ca. 20 cm &Oslash;: (ca. 8 Portionen)</p>
	<p>Zubereitungszeit: 30 Minuten
		<br>Backzeit: 40-50 Minuten</p>
	<p>Eier und Zucker zu einer s&auml;migen Cr&egrave;me schlagen.</p>
	<p>Sauren Halbrahm, gesiebtes Mehl, Salz und Ingwer zugeben. Zu einem glatten Teig r&uuml;hren.</p>
	<p>Butter schmelzen und zuf&uuml;gen. In die bebutterte Form einf&uuml;llen und 40 - 50 Minuten bei 180&deg;C
		backen.</p>
	<p>4 Birnenh&auml;lften beiseite legen.</p>
	<p>Restliche Birnen in feine Scheiben schneiden. Mit Honig und Williams mischen.</p>
	<p>Den erkalteten Kuchen quer halbieren und mit dieser Mischung f&uuml;llen.</p>
	<p>Die Schokolade in St&uuml;cke brechen, im Wasserbad mit Williams schmelzen lassen. Butter darunter r&uuml;hren.
	</p>
	<p>Die Glasur &uuml;ber den Kuchen verteilen, die Birnen darauf anordnen. Mit wenig geriebener Schokolade garnieren.
	</p>

	<h2>Kalorien:</h2>
	<p>Pro St&uuml;ck: 383 Kalorien, 1603 Joule</p>

	<h2>Quelle:</h2>
	<p>Herbert Eigenmann, Code: BIC</p>

	<h2>Bewertung:</h2>
	<p>Am 12.6.2009 zubereitet. Meine Form ist mit 22 cm Durchmesser etwas gr&ouml;sser als vorgegeben weshalb die
		Glasur dann etwas d&uuml;nner ausf&auml;llt. Ich fand den Aufwand betr&auml;chtlich. Der Kuchen schmeckt aber
		ganz ordentlich.</p>



<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<script async src="https://www.googletagmanager.com/gtag/js?id=G-XWT8EWS5BN"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-XWT8EWS5BN');
  // Function to request a wake lock
  async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

  // Function to release the wake lock
  function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

  // Initialize wake lock on page load
  async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
          await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
  }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
    requestWakeLock();
      } else {
    releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
    releaseWakeLock(); // Automatically release wake lock when page is hidden
  wakeLockToggle.checked = false; // Update checkbox state
      }
    });

  // Enable wake lock by default when the page loads
  window.addEventListener('load', initializeWakeLock);
</script>
</body>

</html>