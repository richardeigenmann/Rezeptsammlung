<!DOCTYPE HTML>
<html>

<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title>Apfelkuchen</title>
	<link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
	<meta name="RCP-Speise-Kategorie" content="Cakes">
	<meta name="RCP-Speise-Kategorie" content="Vegetarisch">
	<meta name="RCP-Speise-Kategorie" content="Aus dem Ofen">
	<meta name="RCP-Zutat" content="Zucker">
	<meta name="RCP-Zutat" content="Zitronen">
	<meta name="RCP-Zutat" content="Zimtstangen">
	<meta name="RCP-Zutat" content="&Auml;pfel">
	<meta name="RCP-Zutat" content="Butter">
	<meta name="RCP-Zutat" content="Eier">
	<meta name="RCP-Zutat" content="Mehl">
	<meta name="RCP-Zutat" content="Paniermehl">
	<meta name="RCP-Zutat" content="Puderzucker">
	<meta name="RCP-Bewertung" content="3 Sterne">
	<meta name="RCP-Quelle" content="Werbebrosch&uuml;re">
</head>

<body>
	<h1>Apfelkuchen</h1>
	<img src="Rcp289.jpg" alt="Apfelkuchen" width="400" height="276">

	<table>
		<tbody>
			<tr>
				<td colspan="2"><strong>Zutaten f&uuml;r 12 St&uuml;ck:</strong></td>
			</tr>
			<tr>
				<td colspan=2><strong>F&uuml;llung:</strong></td>
			</tr>
			<tr>
				<td class="td-qty">75g</td>
				<td><strong>Zucker</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 El</td>
				<td><strong>abgeriebene Zitronenschale</strong></td>
			</tr>
			<tr>
				<td class="td-qty">3 El</td>
				<td><strong>Zitronensaft</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1</td>
				<td><strong>Zimtstange</strong></td>
			</tr>
			<tr>
				<td class="td-qty">500 g</td>
				<td><strong>s&auml;uerliche &Auml;pfel</strong></td>
			</tr>
			<tr>
				<td colspan=2><strong>Teig:</strong></td>
			</tr>
			<tr>
				<td class="td-qty">200 g</td>
				<td><strong>weiche Butter</strong></td>
			</tr>
			<tr>
				<td class="td-qty">150 g</td>
				<td><strong>Zucker</strong></td>
			</tr>
			<tr>
				<td class="td-qty">4</td>
				<td><strong>Eier</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 El</td>
				<td><strong>abgeriebene Zitronenschale</strong></td>
			</tr>
			<tr>
				<td class="td-qty">200 g</td>
				<td><strong>Mehl</strong></td>
			</tr>
			<tr>
				<td colspan=2><strong>Ausserdem:</strong></td>
			</tr>
			<tr>
				<td class="td-qty"></td>
				<td><strong>Butterpapier</strong> um die Form zu fetten</td>
			</tr>
			<tr>
				<td class="td-qty">2 El</td>
				<td><strong>Semmelbr&ouml;sel f&uuml;r die Form</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1-2 El</td>
				<td><strong>Puderzucker zum best&auml;uben</strong></td>
			</tr>
		</tbody>
	</table>

	<h2>Zubereitung:</h2>
	<p>Bei diesem Apfelkuchen wird schnell zubereiteter R&uuml;hrteig mit ged&uuml;nsteten &Auml;pfeln eingeschichtet
		und bei sanfter Hitze gebacken. Dadurch ger&auml;t er wunderbar saftig.</p>
	<p>Vorbereitungszeit: 30 Minuten, Backzeit: 40 Minuten</p>
	<p>1. F&uuml;r die F&uuml;llung 200 ml Wasser mit dem Zucker, Zitronenschale, Zitronensaft und der Zimtstange
		aufkochen, den Herd ausschalten.</p>
	<p>2. Die &Auml;pfel sch&auml;len, entkernen, in Spalten schneiden und sofort in den Zitronensud geben. Wieder
		aufkochen, die &Auml;pfel zugedeckt etwa 2 Minuten k&ouml;cheln lassen. Ausk&uuml;hlen lassen.</p>
	<p>3. F&uuml;r den Teig die Butter und den Zucker schaumig r&uuml;hren. Eier und Zitronenschale, zuletzt das Mehl
		unterr&uuml;hren.</p>
	<p>4. Den Backofen auf 175&deg;C vorheizen. Eine 24cm grosse Springform fetten und mit Semmelbr&ouml;seln
		ausstreuen.</p>
	<p>5. Die H&auml;lfte des Teiges in der Form glatt streichen. Die &Auml;pfel gut abtropfen lassen, ohne die
		Zimtstange auf dem Teig verteilen, den restlichen Teig dar&uuml;ber streichen.</p>
	<p>6.Den Kuchen auf der untersten Schiene im Ofen etwa 40 Minuten backen. Zum Servieren mit Puderzucker bestreuen.
	</p>

	<h2>Kalorien:</h2>
	<p>Pro St&uuml;ck etwa 330 kcal.</p>

	<h2>Quelle:</h2>
	<p>Musterrezept aus Backen und Geniessen.</p>

	<h2>Bewertung:</h2>
	<p>Sehr einfach herzustellen und ganz passabel. Ich habe meinen in einer 24cm Springform zubereitet. Ich denke man
		kann die Apfelst&uuml;cke durchaus mehr mit dem Teig vermischen und das "mehrlagiger" machen. RE 15.3.2009</p>

<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<script async src="https://www.googletagmanager.com/gtag/js?id=G-XWT8EWS5BN"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-XWT8EWS5BN');
  // Function to request a wake lock
  async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

  // Function to release the wake lock
  function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

  // Initialize wake lock on page load
  async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
          await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
  }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
    requestWakeLock();
      } else {
    releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
    releaseWakeLock(); // Automatically release wake lock when page is hidden
  wakeLockToggle.checked = false; // Update checkbox state
      }
    });

  // Enable wake lock by default when the page loads
  window.addEventListener('load', initializeWakeLock);
</script>
</body>

</html>