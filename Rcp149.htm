<!DOCTYPE HTML>
<html>

<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title>Patissons mit Pilzen</title>
	<link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
	<meta name="RCP-Speise-Kategorie" content="Vegetarisch">
	<meta name="RCP-Zutat" content="Patissons">
	<meta name="RCP-Zutat" content="Champignons">
	<meta name="RCP-Zutat" content="Eierschw&auml;mme">
	<meta name="RCP-Zutat" content="Zwiebeln">
	<meta name="RCP-Zutat" content="Butter">
	<meta name="RCP-Zutat" content="Wein">
	<meta name="RCP-Zutat" content="Zitronen">
	<meta name="RCP-Zutat" content="Rahm">
	<meta name="RCP-Zutat" content="Gehackte Kr&auml;uter ">
	<meta name="RCP-Bewertung" content="2 Sterne">
	<meta name="RCP-Quelle" content="Beobachter">
</head>

<body>
	<h1>Patissons mit Pilzen</h1>
	<img src="Rcp149.jpg" alt="Patissons mit Pilzen" width="400" height="329">

	<table>
		<tbody>
			<tr>
				<td colspan="2"><strong>Zutaten f&uuml;r 2 Personen:</strong></td>
			</tr>
			<tr>
				<td class="td-qty">2</td>
				<td>kleine <strong>Patissons</strong></td>
			</tr>
			<tr>
				<td class="td-qty">100 g</td>
				<td><strong>Champignons</strong></td>
			</tr>
			<tr>
				<td class="td-qty">100 g</td>
				<td><strong>Eierschw&auml;mmli</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1</td>
				<td><strong>Zwiebel gehackt</strong></td>
			</tr>
			<tr>
				<td class="td-qty">20 g</td>
				<td><strong>Butter</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 dl</td>
				<td><strong>Wein</strong></td>
			</tr>
			<tr>
				<td class="td-qty"></td>
				<td><strong>Zitronensaft</strong></td>
			</tr>
			<tr>
				<td class="td-qty">2 dl</td>
				<td><strong>Rahm</strong></td>
			</tr>
			<tr>
				<td class="td-qty"></td>
				<td><strong>gehackte Kr&auml;uter</strong></td>
			</tr>
			<tr>
				<td class="td-qty"></td>
				<td><strong>Salz</strong></td>
			</tr>
			<tr>
				<td class="td-qty"></td>
				<td><strong>Pfeffer</strong></td>
			</tr>
		</tbody>
	</table>

	<h2>Zubereitung:</h2>
	<p>Patissons in Salzwasser 5 Minuten kochen.</p>
	<p>Deckel wegschneiden. Kerne und weiches Inneres entfernen. Das restliche Fruchtfleisch vorsichtig aush&ouml;hlen
		und kleinschneiden.</p>
	<p>Zwiebel in Butter d&uuml;nsten, die geputzten und geschnittenen Pilze und das Patissonfleisch zugeben und gut
		durchd&uuml;nsten.</p>
	<p>Mit Wein und Zitronensaft abl&ouml;schen. W&uuml;rzen und den Rahm dazugeben, etwas einkochen lassen.</p>
	<p>Die gehackten Kr&auml;uter zugeben und in die warmen Patissons einf&uuml;llen.</p>

	<h2>Quelle:</h2>
	<p>Beobachter, 20/89</p>

	<h2>Bewertung:</h2>
	<p>Das Rezept hat Potential. Bei mir war aber der Geschmack nicht wirklich harmonisch. Es dominierte der Geschmack
		vom Rotwein, von den Zwiebeln und dem Zitronensaft. Dabei ging der Geschmack der Eierschw&auml;mme und
		Champignons unter. Wenn man die F&uuml;llung besser ausbalanciert hin bek&auml;me, dann k&ouml;nnte das ein sehr
		tolles Rezept sein. (Das Rote sind meine Balkonchilis die ich mir erlaubt habe da rein zu schmuggeln.) RE
		30.9.2009</p>

<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-47341387-3', 'auto');
  ga('send', 'pageview');

    let wakeLock = null; // Variable to hold the wake lock instance
    const statusText = document.getElementById('status');
    const wakeLockToggle = document.getElementById('wakeLockToggle');

    // Function to request a wake lock
    async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
          //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
          wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

    // Function to release the wake lock
    function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

    // Initialize wake lock on page load
    async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
        await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
    }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
        requestWakeLock();
      } else {
        releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
        releaseWakeLock(); // Automatically release wake lock when page is hidden
        wakeLockToggle.checked = false; // Update checkbox state
      }
    });

    // Enable wake lock by default when the page loads
    window.addEventListener('load', initializeWakeLock);
</script></body>

</html>