<!DOCTYPE HTML>
<html>

<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title>Chana Dhaal mit Spinat</title>
	<link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
	<meta name="RCP-Speise-Kategorie" content="Vegetarisch">
	<meta name="RCP-Speise-Kategorie" content="Beilagen">
	<meta name="RCP-Speise-Kategorie" content="Hauptgerichte">
	<meta name="RCP-Region" content="Indisch">
	<meta name="RCP-Zutat" content="Linsen">
	<meta name="RCP-Zutat" content="Senfsamen">
	<meta name="RCP-Zutat" content="Schwarzk&uuml;mmel">
	<meta name="RCP-Zutat" content="Chili">
	<meta name="RCP-Zutat" content="Rahmspinat">
	<meta name="RCP-Zutat" content="Ingwer">
	<meta name="RCP-Zutat" content="Korianderpulver">
	<meta name="RCP-Zutat" content="Kreuzk&uuml;mmelpulver">
	<meta name="RCP-Zutat" content="Zitronensaft">
	<meta name="RCP-Bewertung" content="4 Sterne">
	<meta name="RCP-Quelle" content="Kochkurs Patricia Krummenacher">
<!-- Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
  new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
  j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
  'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
  })(window,document,'script','dataLayer','GTM-PHL53P');</script>
<!-- End Google Tag Manager -->
</head>
<body>
	<h1>Chana Dhaal mit Spinat</h1>
	<img src="Rcp483.jpg" alt="Chana  Dhaal  mit  Spinat" width="400" height="279">

	<table>
		<tbody>
			<tr>
				<td colspan="2"><strong>Zutaten f&uuml;r 2-4 Personen:</strong></td>
			</tr>
			<tr>
				<td class="td-qty">4 EL</td>
				<td><strong>Chana Linsen</strong></td>
			</tr>
			<tr>
				<td class="td-qty">2 EL</td>
				<td><strong>Sonnenblumen&ouml;l</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 KL</td>
				<td><strong>Senfsamen</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1KL</td>
				<td><strong>Schwarzk&uuml;mmel, ganz</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 KL</td>
				<td><strong>getrocknete Chili</strong> (gemahlen)</td>
			</tr>
			<tr>
				<td class="td-qty">450 g</td>
				<td><strong>Rahmspinat</strong>, tiefgek&uuml;hlt, aufgetaut</td>
			</tr>
			<tr>
				<td class="td-qty">1 KL</td>
				<td><strong>Ingwer</strong>, frisch gerieben</td>
			</tr>
			<tr>
				<td class="td-qty">1 KL</td>
				<td><strong>Korianderpulver</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 KL</td>
				<td><strong>Kreuzk&uuml;mmelpulver</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 KL</td>
				<td><strong>Salz</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1/2 KL</td>
				<td><strong>Chilipulver</strong></td>
			</tr>
			<tr>
				<td class="td-qty">2 EL</td>
				<td><strong>Zitronensaft</strong></td>
			</tr>
			<tr>
				<td class="td-qty">5</td>
				<td><strong>getrocknete Chilischoten</strong> (Garnitur)</td>
			</tr>
		</tbody>
	</table>

	<h2>Zubereitung:</h2>
	<p>Chana Linsen 3 Stunden oder &uuml;ber Nacht in warmes Wasser einweichen. (Oder im Dampfkochtopf 8-10 Minuten auf
		dem 1. Ring kochen.)</p>
	<p>Das Wasser abgiessen, dann die Linsen in eine Pfanne geben, mit frischem Wasser bedecken, zum Kochen bringen und
		30 Minuten bei schwacher Hitze k&ouml;cheln lassen.</p>
	<p>Sonnenblumen&ouml;l in Wok oder Bratpfanne erhitzen, die Gew&uuml;rze (Senfsamen, Schwarzk&uuml;mmel,
		Chilipulver) unter st&auml;ndigem R&uuml;hren anbraten, bis sich die Senfsamen dunkel verf&auml;rben.</p>
	<p>Rahmspinat zugeben, unter die Gew&uuml;rze mischen. Auf kleine Stufe zur&uuml;ck schalten.</p>
	<p>Restliche Gew&uuml;rze (Ingwer, Korianderpulver, Kreuzk&uuml;mmelpulver, Salz, Chilipulver, Zitronensaft)
		zugeben, gut mischen, leicht k&ouml;cheln.</p>
	<p>Die gekochten Chana Linsen zum Spinat geben, darunter mischen, abschmecken.</p>
	<p>Die getrockneten Chilischoten als Garnitur auf das Gericht legen und servieren.</p>

	<h2>Quelle:</h2>
	<p>Patricia Krummenacher, Indischer Kochkurs, 2006</p>

	<h2>Bewertung:</h2>
	<p>Hat am 9.3.2008 hervorragend geschmeckt!</p>
	<p>Kann mit Asiatischen Nudeln oder Basmati Reis als Hauptspeise serviert werden. RE 11 Jan 2011</p>
	<p>Kam auch im M&auml;rz 2013 gut an. RE</p>

<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-PHL53P" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

<script>
  // Function to request a wake lock
  async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

  // Function to release the wake lock
  function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

  // Initialize wake lock on page load
  async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
          await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
  }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
    requestWakeLock();
      } else {
    releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
    releaseWakeLock(); // Automatically release wake lock when page is hidden
  wakeLockToggle.checked = false; // Update checkbox state
      }
    });

  // Enable wake lock by default when the page loads
  window.addEventListener('load', initializeWakeLock);
</script>
</body>

</html>