<!DOCTYPE HTML>
<html>

<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title>Zwiebel-Quarkw&auml;he nach Els&auml;sser Art</title>
	<link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
	<meta name="RCP-Speise-Kategorie" content="W&auml;hen">
	<meta name="RCP-Speise-Kategorie" content="Aus dem Ofen">
	<meta name="RCP-Speise-Kategorie" content="Hauptgerichte">
	<meta name="RCP-Zutat" content="Zwiebeln">
	<meta name="RCP-Zutat" content="Speckw&uuml;rfel">
	<meta name="RCP-Zutat" content="&Ouml;l">
	<meta name="RCP-Zutat" content="Kuchenteig">
	<meta name="RCP-Zutat" content="Eier">
	<meta name="RCP-Zutat" content="Speisequark">
	<meta name="RCP-Zutat" content="Saurer Halbrahm">
	<meta name="RCP-Zutat" content="K&uuml;mmel">
	<meta name="RCP-Bewertung" content="3 Sterne">
	<meta name="RCP-Kochwerkzeug" content="W&auml;henblech">
	<meta name="RCP-Quelle" content="Herbert Eigenmann">
</head>

<body>
	<h1>Zwiebel-Quarkw&auml;he nach Els&auml;sser Art</h1>
	<img src="Rcp040.jpg" alt="Zwiebel-Quarkw&auml;he nach Els&auml;sser Art" width="400" height="256">

	<table>
		<tbody>
			<tr>
				<td colspan="2">
					<strong>Zutaten f&uuml;r 4 Personen:</strong>
				</td>
			</tr>
			<tr>
				<td class="td-qty">750 g</td>
				<td><strong>Zwiebel</strong></td>
			</tr>
			<tr>
				<td class="td-qty">100 g</td>
				<td><strong>Speckw&uuml;rfel</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 EL</td>
				<td><strong>Erdnuss&ouml;l</strong></td>
			</tr>
			<tr>
				<td class="td-qty">250 g</td>
				<td><strong>Kuchenteig</strong></td>
			</tr>
			<tr>
				<td class="td-qty">3</td>
				<td><strong>Eier</strong></td>
			</tr>
			<tr>
				<td class="td-qty">250 g</td>
				<td><strong>Speisequark</strong></td>
			</tr>
			<tr>
				<td class="td-qty">150 g</td>
				<td><strong>Halbrahm sauer</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1.5 TL</td>
				<td><strong>Salz</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 TL</td>
				<td><strong>K&uuml;mmel</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 Prise</td>
				<td><strong>Pfeffer</strong></td>
			</tr>
		</tbody>
	</table>

	<h2>Zubereitung:</h2>
	<p>W&auml;henblech 28 cm cm &Oslash;</p>
	<p>Zwiebel in d&uuml;nne Streifen schneiden.</p>
	<p>Speck im &Ouml;l ca. 5 Minuten glasig braten.</p>
	<p>Zwiebel dazugeben und ca. 15 Minuten gar d&auml;mpfen.</p>
	<p>Ofen auf gute Mittelhitze (200&deg;C) vorheizen.</p>
	<p>Blech befetten. Teig auswallen. Blech damit belegen. Teigboden mit einer Gabel einige Male gut einstechen.</p>
	<p>Eier, Quark, Halbrahm und Gew&uuml;rze miteinander verr&uuml;hren. Masse mit den Zwiebelstreifen mischen. Auf den
		Teigboden geben.</p>
	<p>W&auml;he 25 - 35 Minuten backen.</p>

	<h2>Quelle:</h2>
	<p>Herbert Eigenmann, Code: ZLQ</p>

	<h2>Bewertung:</h2>
	<p>Ergibt eine sch&ouml;ne W&auml;he. Erst hatte ich Bedenken wie denn der Berg Zwiebeln in die Form passen sollte
		aber schlussendlich ging es genau auf. Geschmacklich fand ich das Resultat eher langweilig. Erinnert mich an die
		Flamkuchen die ich schon gegessen habe. Aber auch die verm&ouml;gen mich nicht zu &uuml;berzeugen. Also nur 3
		Sterne. RE 18.1.2009</p>


<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<script async src="https://www.googletagmanager.com/gtag/js?id=G-XWT8EWS5BN"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-XWT8EWS5BN');
  // Function to request a wake lock
  async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

  // Function to release the wake lock
  function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

  // Initialize wake lock on page load
  async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
          await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
  }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
    requestWakeLock();
      } else {
    releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
    releaseWakeLock(); // Automatically release wake lock when page is hidden
  wakeLockToggle.checked = false; // Update checkbox state
      }
    });

  // Enable wake lock by default when the page loads
  window.addEventListener('load', initializeWakeLock);
</script>
</body>

</html>