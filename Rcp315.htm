<!DOCTYPE HTML>
<html>

<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title>Spaghetti mit Ricotta</title>
	<link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
	<meta name="RCP-Speise-Kategorie" content="Vegetarisch">
	<meta name="RCP-Speise-Kategorie" content="Pasta">
	<meta name="RCP-Speise-Kategorie" content="Hauptgerichte">
	<meta name="RCP-Kochwerkzeug" content="M&ouml;rser">
	<meta name="RCP-Region" content="Italienisch">
	<meta name="RCP-Zutat" content="Spaghetti">
	<meta name="RCP-Zutat" content="Zwiebeln">
	<meta name="RCP-Zutat" content="Knoblauch">
	<meta name="RCP-Zutat" content="Pelati">
	<meta name="RCP-Zutat" content="Balsamico">
	<meta name="RCP-Zutat" content="Zucker">
	<meta name="RCP-Zutat" content="Basilikum">
	<meta name="RCP-Zutat" content="Reibk&auml;se">
	<meta name="RCP-Zutat" content="Ricotta">
	<meta name="RCP-Zutat" content="Oliven&ouml;l">
	<meta name="RCP-Zutat" content="Oregano">
	<meta name="RCP-Zutat" content="Chili">
	<meta name="RCP-Bewertung" content="4 Sterne">
	<meta name="RCP-Quelle" content="Patrick R&uuml;egg">
</head>

<body>
	<h1>Spaghetti mit Ricotta</h1>
	<img src="Rcp315.jpg" alt="Spaghetti mit Ricotta" width="400" height="309">

	<table>
		<tbody>
			<tr>
				<td colspan="2"><strong>Zutaten f&uuml;r 4 Personen:</strong></td>
			</tr>
			<tr>
				<td class="td-qty">500g</td>
				<td><strong>Spaghetti</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1</td>
				<td><strong>Zwiebel</strong></td>
			</tr>
			<tr>
				<td class="td-qty">2</td>
				<td><strong>Knoblauchzehen</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 Dose &#224; 800g</td>
				<td>ganze <strong>Pelati</strong></td>
			</tr>
			<tr>
				<td class="td-qty">3 El</td>
				<td><strong>roter Balsamico</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1/2 Tl</td>
				<td><strong>Zucker</strong></td>
			</tr>
			<tr>
				<td class="td-qty"></td>
				<td>frischer <strong>Basilikum</strong></td>
			</tr>
			<tr>
				<td class="td-qty"></td>
				<td>geriebener <strong>Parmesan</strong></td>
			</tr>
			<tr>
				<td class="td-qty">450g</td>
				<td><strong>Ricotta</strong></td>
			</tr>
			<tr>
				<td class="td-qty"></td>
				<td><strong>Oliven&ouml;l</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 Tl</td>
				<td>getrockneter <strong>Oregano</strong></td>
			</tr>
			<tr>
				<td class="td-qty">2</td>
				<td>frische <strong>Chilis</strong></td>
			</tr>
			<tr>
				<td class="td-qty"></td>
				<td><strong>Meersalz</strong></td>
			</tr>
			<tr>
				<td class="td-qty"></td>
				<td><strong>Pfeffer</strong> aus der M&uuml;hle</td>
			</tr>
		</tbody>
	</table>

	<h2>Zubereitung:</h2>
	<p>F&uuml;r den Ricotta den Ofen auf 200&deg;C vorheizen.</p>
	<p>Die Chilis entkernen, zerhacken und mit Oregano, Salz, Pfeffer und Oliven&ouml;l im M&ouml;rser zerstossen.</p>
	<p>Den Ricotta in eine kleine Gratinform legen, mit der Paste einreiben und in den Ofen schieben bis der Rest fertig
		ist.</p>
	<br>
	<p>F&uuml;r die Spaghetti die Zwiebeln und den Knoblauch hacken und and&auml;mpfen. Mit den Pelati 15 Minuten
		k&ouml;cheln lassen.</p>
	<p>Derweil die Spaghetti im Salzwasser kochen.</p>
	<p>Danach die Tomaten mit einem L&ouml;ffel zerdr&uuml;cken, Balsamico und Zucker beigeben und umr&uuml;hren bis
		sich das ganze zu einer sch&ouml;nen Sauce verbunden hat.</p>
	<p>Die Sauce mit den Spaghetti vermischen, mit Salz und Pfeffer abschmecken und Basilikum und Parmesan nach belieben
		darunter mischen.</p>
	<p>Den Ricotta und die Spaghetti getrennt anrichten und beim Servieren einen L&ouml;ffel voll Ricotta auf die
		Spaghetti packen.</p>


	<h2>Quelle:</h2>
	<p>Im Juli 2008 von Patrick R&uuml;egg erhalten. Angeblich stammt das Rezept von Jamie Oliver.</p>

	<h2>Bewertung:</h2>
	<p>Gelang am 17.2.2008 sehr gut. Der Ricotta wird so richtig s&auml;mig. RE</p>

<p CLASS='linkback'>
    <a href='https:\/\/richardeigenmann.github.io\/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    <script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-47341387-3', 'auto');
  ga('send', 'pageview');

    let wakeLock = null; // Variable to hold the wake lock instance
    const statusText = document.getElementById('status');
    const wakeLockToggle = document.getElementById('wakeLockToggle');

    // Function to request a wake lock
    async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
          //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
          wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

    // Function to release the wake lock
    function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

    // Initialize wake lock on page load
    async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
        await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
    }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
        requestWakeLock();
      } else {
        releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
        releaseWakeLock(); // Automatically release wake lock when page is hidden
        wakeLockToggle.checked = false; // Update checkbox state
      }
    });

    // Enable wake lock by default when the page loads
    window.addEventListener('load', initializeWakeLock);
</script>
</body>

</html>