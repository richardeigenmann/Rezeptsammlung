<!DOCTYPE HTML>
<html>

<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title>Franz&ouml;sischer Orangencake</title>
	<link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
	<meta name="RCP-Speise-Kategorie" content="Cakes">
	<meta name="RCP-Speise-Kategorie" content="Aus dem Ofen">
	<meta name="RCP-Speise-Kategorie" content="Vegetarisch">
	<meta name="RCP-Zutat" content="Butter">
	<meta name="RCP-Zutat" content="Zucker">
	<meta name="RCP-Zutat" content="Eier">
	<meta name="RCP-Zutat" content="Gemahlene Mandeln">
	<meta name="RCP-Zutat" content="Orangen">
	<meta name="RCP-Zutat" content="Mehl">
	<meta name="RCP-Zutat" content="Backpulver">
	<meta name="RCP-Kochwerkzeug" content="Cakeform 28cm">
	<meta name="RCP-Bewertung" content="3 Sterne">
	<meta name="RCP-Quelle" content="Betty Bossi">
</head>

<body>
	<h1>Franz&ouml;sischer Orangencake</h1>
	<img src="Rcp154.jpg" alt="Franz&ouml;sischer Orangencake" width="400" height="266">

	<table>
		<tbody>
			<tr>
				<td colspan="2"><strong>Zutaten:</strong></td>
			</tr>
			<tr>
				<td class="td-qty">200 g</td>
				<td><strong>Margarine</strong> oder <strong>Butter</strong></td>
			</tr>
			<tr>
				<td class="td-qty">200 g</td>
				<td><strong>Zucker</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 Prise</td>
				<td><strong>Salz</strong></td>
			</tr>
			<tr>
				<td class="td-qty">4</td>
				<td><strong>Eier</strong></td>
			</tr>
			<tr>
				<td class="td-qty">150 g</td>
				<td>gemahlene <strong>Mandeln</strong></td>
			</tr>
			<tr>
				<td class="td-qty">2</td>
				<td><strong>Orangen</strong></td>
			</tr>
			<tr>
				<td class="td-qty">5 El</td>
				<td><strong>Cointreau</strong></td>
			</tr>
			<tr>
				<td class="td-qty">200 g</td>
				<td><strong>Mehl</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 Tl</td>
				<td><strong>Backpulver</strong></td>
			</tr>
			<tr>
				<td class="td-qty">150 g</td>
				<td><strong>Puderzucker</strong></td>
			</tr>
			<tr>
				<td class="td-qty">Handvoll</td>
				<td><strong>Mandelscheiben</strong> oder <strong>Mandelstifte</strong></td>
			</tr>
			<tr>
				<td class="td-qty">wenige</td>
				<td><strong>kandierte Orangenscheiben</strong></td>
			</tr>
		</tbody>
	</table>

	<h2>Zubereitung:</h2>
	<p>Die Butter weich r&uuml;hren.</p>
	<p>Zucker und Salz darunter r&uuml;hren.</p>
	<p>Ein Ei nach dem anderen darunter r&uuml;hren und weiter r&uuml;hren, bis die Masse hell ist.</p>
	<p>Die gemahlenen Mandeln zugeben.</p>
	<p>Die Schale von den 2 Orangen abreiben und zugeben.</p>
	<p>Die Orangen auspressen und den Saft (ca. 2dl) dazugiessen.</p>
	<p>2 Essl&ouml;ffel Cointreau darunter mischen.</p>
	<p>Mehl und Backpulver dazugeben und gut r&uuml;hren.</p>
	<p>Die 28-30 cm lange Cakeform mit Backtrennpapier auskleiden.</p>
	<p>Die Masse einf&uuml;llen.</p>
	<p>Den Ofen vorheizen und 50 Minuten bei 180&deg;C backen.</p>
	<p>Nach dem Erkalten mit Glasur beziehen. Dazu 150g Puderzucker mit Cointreau knapp fl&uuml;ssig anr&uuml;hren.</p>
	<p>Mit Mandelsplittern oder Mandelstiften bestreuen.</p>
	<p>Wenn vorhanden, mit kandierten Orangenscheiben garnieren.</p>

	<h2>Tipp:</h2>
	<p>H&auml;lt in Folie Eingepackt im K&uuml;hlschrank 4-5 Tage.</p>

	<h2>Quelle:</h2>
	<p>Betty Bossi - Kuchen, Cakes und Torten, Seite 60</p>

	<h2>Bewertung:</h2>
	<p>Sieht toll aus, h&auml;lt aber nicht ganz so viel im Geschmack. Gelingt gut. Er schmeckt zart nach Orange und
		erinnert ein bisschen an R&uuml;eblitorte. Der Guss mit dem Cointreau ist fein. Die kandierten Orangen hat
		Sandra selber gemacht in einem recht aufwendigen Osmose-Austausch-Verfahren. RE 5.5.2013</p>


<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-47341387-3', 'auto');
  ga('send', 'pageview');

    let wakeLock = null; // Variable to hold the wake lock instance
    const statusText = document.getElementById('status');
    const wakeLockToggle = document.getElementById('wakeLockToggle');

    // Function to request a wake lock
    async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
          //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
          wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

    // Function to release the wake lock
    function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

    // Initialize wake lock on page load
    async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
        await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
    }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
        requestWakeLock();
      } else {
        releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
        releaseWakeLock(); // Automatically release wake lock when page is hidden
        wakeLockToggle.checked = false; // Update checkbox state
      }
    });

    // Enable wake lock by default when the page loads
    window.addEventListener('load', initializeWakeLock);
</script>
</body>

</html>