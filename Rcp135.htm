<!DOCTYPE HTML>
<html>

<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title>Gef&uuml;lltes Pouletbr&uuml;stchen</title>
	<link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
	<meta name="RCP-Speise-Kategorie" content="Fleischgerichte">
	<meta name="RCP-Zutat" content="Pouletbrust">
	<meta name="RCP-Zutat" content="Lauch">
	<meta name="RCP-Zutat" content="Rahm">
	<meta name="RCP-Zutat" content="Rotwein">
	<meta name="RCP-Zutat" content="Bouillon">
	<meta name="RCP-Zutat" content="Butter">
	<meta name="RCP-Bewertung" content="4 Sterne">
	<meta name="RCP-Quelle" content="Zeitung">
</head>

<body>
	<h1>Gef&uuml;lltes Pouletbr&uuml;stchen</h1>
	<img src="Rcp135.jpg" alt="Gef&uuml;lltes Pouletbr&uuml;stchen" width="400" height="315">

	<table>
		<tbody>
			<tr>
				<td colspan="2"><strong>Zutaten f&uuml;r 4 Personen:</strong></td>
			</tr>
			<tr>
				<td class="td-qty">4</td>
				<td><strong>Frische Pouletbr&uuml;stchen</strong></td>
			</tr>
			<tr>
				<td class="td-qty">&#189;</td>
				<td><strong>Lauchstengel</strong></td>
			</tr>
			<tr>
				<td class="td-qty"></td>
				<td><strong>Rahm</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 dl</td>
				<td><strong>Rotwein</strong></td>
			</tr>
			<tr>
				<td class="td-qty">2 dl</td>
				<td><strong>Bouillon</strong></td>
			</tr>
			<tr>
				<td class="td-qty">20 g</td>
				<td><strong>Butter</strong></td>
			</tr>
		</tbody>
	</table>

	<h2>Zubereitung:</h2>
	<p>4 frische Pouletbr&uuml;stchen, aufschneiden und weich klopfen. &#189; Lauchstengel, fein schneiden, w&uuml;rzen
		and&uuml;nsten und mit Rahm weichkochen.</p>
	<p>F&uuml;llung auf Pouletbr&uuml;stchen verteilen, einrollen und mit Zahnstocher fixieren.</p>
	<p>W&uuml;rzen, mit &Ouml;l bepinseln und auf dem Grill anbraten. Nach dem Anbraten Hitze reduzieren, etwa 12
		Minuten beidseitig braun grillieren. Mit Rotweinjus servieren.</p>
	<p>(1dl schwerer Rotwein auf 1/3 reduzieren, 2dl Bouillon dazugeben, etwas einkochen, abschmecken, mit 20g Butter in
		St&uuml;ckchen verfeinern).</p>

	<h2>Quelle:</h2>
	<p>Z&uuml;ri Woche Sommer 1996 Grill Tipps.</p>

	<h2>Bewertung:</h2>
	<p>Hat am 29.3.2008 ausgezeichnet geschmeckt. Ich habe den Rotweinjus kaputt gemacht indem ich mit der Butter das zu
		lange kochen liess und es sich getrennt hat. Geschmeckt hat die Sauce noch gut aber so toll sah das nicht mehr
		aus. Die Butter also erst ganz am Schluss zugeben. RE</p>

<p CLASS='linkback'>
    <a href='https:\/\/richardeigenmann.github.io\/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    <script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-47341387-3', 'auto');
  ga('send', 'pageview');

    let wakeLock = null; // Variable to hold the wake lock instance
    const statusText = document.getElementById('status');
    const wakeLockToggle = document.getElementById('wakeLockToggle');

    // Function to request a wake lock
    async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
          //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
          wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

    // Function to release the wake lock
    function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

    // Initialize wake lock on page load
    async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
        await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
    }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
        requestWakeLock();
      } else {
        releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
        releaseWakeLock(); // Automatically release wake lock when page is hidden
        wakeLockToggle.checked = false; // Update checkbox state
      }
    });

    // Enable wake lock by default when the page loads
    window.addEventListener('load', initializeWakeLock);
</script>
</body>

</html>