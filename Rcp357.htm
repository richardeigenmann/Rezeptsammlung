<!DOCTYPE HTML>
<html>

<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title>K&uuml;rbisgratin mit Peterli und Mascarpone</title>
	<link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
	<meta name="RCP-Speise-Kategorie" content="Aus dem Ofen">
	<meta name="RCP-Speise-Kategorie" content="Gratins">
	<meta name="RCP-Speise-Kategorie" content="Vegetarisch">
	<meta name="RCP-Speise-Kategorie" content="Beilagen">
	<meta name="RCP-Zutat" content="K&uuml;rbis">
	<meta name="RCP-Zutat" content="Bouillon">
	<meta name="RCP-Zutat" content="Mascarpone">
	<meta name="RCP-Zutat" content="Eier">
	<meta name="RCP-Zutat" content="Milch">
	<meta name="RCP-Zutat" content="Cayennepfeffer">
	<meta name="RCP-Zutat" content="Schinkentranchen">
	<meta name="RCP-Zutat" content="Petersilie">
	<meta name="RCP-Zutat" content="K&uuml;rbiskerne">
	<meta name="RCP-Bewertung" content="4 Sterne">
	<meta name="RCP-Quelle" content="Kochkurs Patricia Krummenacher">
</head>

<body>
	<h1>K&uuml;rbisgratin mit Peterli und Mascarpone</h1>
	<img src="Rcp357.jpg" alt="K&uuml;rbisgratin mit Peterli und Mascarpone" width="400" height="282">

	<table>
		<tbody>
			<tr>
				<td colspan="2"><strong>Zutaten f&uuml;r 4 Personen:</strong></td>
			</tr>
			<tr>
				<td class="td-qty">500 g</td>
				<td><strong>K&uuml;rbisfleisch<strong> (Butternuss)</td>
			</tr>
			<tr>
				<td class="td-qty">1 KL</td>
				<td><strong>Gem&uuml;sebouillon<strong></td>
			</tr>
			<tr>
				<td class="td-qty">250 g</td>
				<td><strong>Mascarpone<strong></td>
			</tr>
			<tr>
				<td class="td-qty">4</td>
				<td><strong>Eier<strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 dl</td>
				<td><strong>Milch<strong></td>
			</tr>
			<tr>
				<td class="td-qty"></td>
				<td><strong>Cayennepfeffer<strong></td>
			</tr>
			<tr>
				<td class="td-qty">wenig</td>
				<td><strong>Salz<strong></td>
			</tr>
			<tr>
				<td class="td-qty">100 g</td>
				<td><strong>Schinkentranchen<strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 Bund</td>
				<td><strong>Petersilie<strong></td>
			</tr>
			<tr>
				<td class="td-qty">1-2 EL</td>
				<td><strong>K&uuml;rbiskerne<strong></td>
			</tr>
		</tbody>
	</table>

	<h2>Zubereitung:</h2>
	<p>K&uuml;rbis entkernen, sch&auml;len und in W&uuml;rfel schneiden.</p>
	<p>Den K&uuml;rbis mit 1.5 dl Wasser und 1 KL Gem&uuml;sebouillon in einer Pfanne mit geschlossenem Deckel weich
		d&auml;mpfen. (Ca. 10-20 Minuten je nach K&uuml;rbis.)</p>
	<p>Eine Gratinform einfetten und den K&uuml;rbis hineingeben.</p>
	<p>Mascarpone, Eier, 0.5-1 dl Milch, Cayennepfeffer und wenig Salz zu einer giessbaren Masse verr&uuml;hren. Die
		Masse gleichm&auml;ssig &uuml;ber die K&uuml;rbisw&uuml;rfel giessen.</p>
	<p>Den Schinken in kleine W&uuml;rfel schneiden und auf dem Guss verteilen.</p>
	<p>Peterli fein hacken und darauf verteilen.</p>
	<p>1-2 EL K&uuml;rbiskerne dar&uuml;ber streuen.</p>
	<p>Bei 200&deg;C in der Ofenmitte 40 Minuten backen. Das Ei muss die Masse stocken. Eventuell in den letzten 10
		Minuten mit Alufolie zudecken.</p>


	<h2>Quelle:</h2>
	<p>K&uuml;rbiskochkurs, Herbst 2009 bei Patricia Krummenacher.</p>

	<h2>Bewertung:</h2>
	<p>Schmeckte hervorragend. RE 25.1.2010</p>
	<p>Im Nov 2013 gab es ein bisschen viel Guss im Verh&auml;ltnis zu wenig K&uuml;rbis. Aufpassen beim Einkaufen: beim
		ganzen K&uuml;rbis schneidet man recht viel Gewicht weg!</p>
	<p>Die vielen Eier machen das etwas Omlettartig und der Mascarpone verliert. Teuren Mascarpone vielleicht durch
		einen dl Rahm ersetzen und vielleicht ein Ei weglassen. RE 6 Nov 2017</p>

<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<!-- Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
  new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
  j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
  'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
  })(window,document,'script','dataLayer','GTM-PHL53P');</script>
  <!-- End Google Tag Manager -->
<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-PHL53P" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

<script>
  // Function to request a wake lock
  async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

  // Function to release the wake lock
  function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

  // Initialize wake lock on page load
  async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
          await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
  }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
    requestWakeLock();
      } else {
    releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
    releaseWakeLock(); // Automatically release wake lock when page is hidden
  wakeLockToggle.checked = false; // Update checkbox state
      }
    });

  // Enable wake lock by default when the page loads
  window.addEventListener('load', initializeWakeLock);
</script></body>

</html>