<!DOCTYPE HTML>
<html>

<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title>Panierte Goldbuttfilets</title>
	<link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
	<meta name="RCP-Speise-Kategorie" content="Fischgerichte">
	<meta name="RCP-Zutat" content="Goldbuttfilets">
	<meta name="RCP-Zutat" content="Milch">
	<meta name="RCP-Zutat" content="Mehl">
	<meta name="RCP-Zutat" content="Butter">
	<meta name="RCP-Zutat" content="Eier">
	<meta name="RCP-Zutat" content="Paniermehl">
	<meta name="RCP-Zutat" content="Zitronen">
	<meta name="RCP-Bewertung" content="4 Sterne">
	<meta name="RCP-Quelle" content="Werbebrosch&uuml;re">
</head>

<body>
	<h1>Panierte Goldbuttfilets</h1>
	<img src="Rcp069.jpg" alt="Panierte Goldbuttfilets" width="400" height="266">

	<table>
		<tbody>
			<tr>
				<td colspan="2">
					<strong>Zutaten f&uuml;r 4 Personen:</strong>
				</td>
			</tr>
			<tr>
				<td class="td-qty">800 g</td>
				<td><strong>Goldbuttfilets</strong></td>
			</tr>
			<tr>
				<td class="td-qty">2 dl</td>
				<td><strong>Milch</strong></td>
			</tr>
			<tr>
				<td class="td-qty"></td>
				<td><strong>Salz</strong></td>
			</tr>
			<tr>
				<td class="td-qty"></td>
				<td><strong>Pfeffer</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1-2 El</td>
				<td><strong>Mehl</strong></td>
			</tr>
			<tr>
				<td class="td-qty">60 g</td>
				<td><strong>Butter</strong></td>
			</tr>
			<tr>
				<td class="td-qty">2</td>
				<td><strong>Eier</strong></td>
			</tr>
			<tr>
				<td class="td-qty"></td>
				<td><strong>Paniermehl</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1</td>
				<td><strong>Zitrone in Scheiben</strong></td>
			</tr>
		</tbody>
	</table>

	<h2>Zubereitung:</h2>
	<p>Die Filets in rohe Milch legen, Salz und Pfeffer dazugeben.</p>
	<p>Die Eier verklopfen.</p>
	<p>Die Filets in Mehl wenden, durch die Eimasse ziehen und nachher im Paniermehl gut panieren.</p>
	<p>In Butter beidseitig goldbraun braten und mit Zitronenscheiben garnieren.</p>

	<h2>Quelle:</h2>
	<p>Migros Fischrezept</p>

	<h2>Bewertung:</h2>
	<p>Am 7.5.2007 zubereitet. Schmeckte hervorragend.</p>
	<p>Immer noch sehr einfach. Hatte etwas Pech mit dem Auftauen der Goldbuttfilets in der Mikrowelle da die etwas warm
		wurden und der Fisch dann auseinander fiel. Ansonsten doch ein sehr einfaches Rezept das aber dank dem guten
		Fisch sehr schmeckt. RE 17.11.2009</p>

<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<script async src="https://www.googletagmanager.com/gtag/js?id=G-XWT8EWS5BN"></script>
<script>
  // Function to request a wake lock
  async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

  // Function to release the wake lock
  function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

  // Initialize wake lock on page load
  async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
          await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
  }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
    requestWakeLock();
      } else {
    releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
    releaseWakeLock(); // Automatically release wake lock when page is hidden
  wakeLockToggle.checked = false; // Update checkbox state
      }
    });

  // Enable wake lock by default when the page loads
  window.addEventListener('load', initializeWakeLock);
</script>
</body>

</html>