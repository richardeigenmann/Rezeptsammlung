<!DOCTYPE HTML>
<html>

<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Flundernfilets mit Avocado</title>
  <link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
  <meta name="RCP-Speise-Kategorie" content="Fischgerichte">
  <meta name="RCP-Speise-Kategorie" content="Vorspeisen">
  <meta name="RCP-Zutat" content="Flundernfilets">
  <meta name="RCP-Zutat" content="Zwiebeln">
  <meta name="RCP-Zutat" content="Zitronensaft">
  <meta name="RCP-Zutat" content="Senf">
  <meta name="RCP-Zutat" content="Weisswein">
  <meta name="RCP-Zutat" content="Avocados">
  <meta name="RCP-Zutat" content="Mayonnaise">
  <meta name="RCP-Zutat" content="Kapern">
  <meta name="RCP-Bewertung" content="4 Sterne">
  <meta name="RCP-Quelle" content="Herbert Eigenmann">
</head>

<body>
  <h1>Flundernfilets mit Avocado</h1>
  <img src="Rcp083.jpg" alt="Flundernfilets mit Avocado" width="400" height="447">

  <table>
    <tbody>
      <tr>
        <td><strong>Zutaten:</strong></td>
      </tr>
      <tr>
        <td class="td-qty">400 g</td>
        <td><strong>Flundernfilets</strong></td>
      </tr>
      <tr>
        <td class="td-qty">1</td>
        <td><strong>Zwiebel</strong></td>
      </tr>
      <tr>
        <td class="td-qty">2 El</td>
        <td><strong>Zitronensaft</strong></td>
      </tr>
      <tr>
        <td class="td-qty">2 Tl</td>
        <td><strong>Senf</strong></td>
      </tr>
      <tr>
        <td class="td-qty"></td>
        <td><strong>Salz</strong></td>
      </tr>
      <tr>
        <td class="td-qty"></td>
        <td><strong>Pfeffer</strong></td>
      </tr>
      <tr>
        <td class="td-qty">3 El</td>
        <td><strong>Weisswein</strong></td>
      </tr>
      <tr>
        <td class="td-qty">3 El</td>
        <td><strong>Wasser</strong></td>
      </tr>
      <tr>
        <td class="td-qty">1</td>
        <td><strong>Avocado</strong></td>
      </tr>
      <tr>
        <td class="td-qty">1 El</td>
        <td><strong>Mayonnaise</strong></td>
      </tr>
      <tr>
        <td class="td-qty">24</td>
        <td><strong>Kapern</strong></td>
      </tr>
    </tbody>
  </table>


  <h2>Mise en place:</h2>
  <p>Fischfilets auftauen.</p>
  <p>Ofen auf Mittelhitze (180&deg;C) vorheizen.</p>

  <h2>Zubereitung:</h2>
  <p>Die aufgetauten Filets der L&auml;nge nach halbieren oder dritteln und gut trocken tupfen.</p>
  <p>Zwiebel sch&auml;len und in d&uuml;nne Ringe schneiden. Zwiebeln in eine Gratinform legen.</p>
  <p>Filets mit 1 EL Zitronensaft, Senf, Salz und Pfeffer w&uuml;rzen. Filets rollen und eng nebeneinander in die
    Gratinform legen.</p>
  <p>Mit Wein und Wasser &uuml;bergiessen.</p>
  <p>Zudecken und im Ofen 20 - 25 Minuten garen.</p>
  <p>In der Form erkalten lassen.</p>
  <p>Avocado waschen, halbieren, Fruchtfleisch herausl&ouml;sen und mit einer Gabel fein zerdr&uuml;cken.</p>
  <p>Avocadop&uuml;r&eacute;e mit 1 EL Zitronensaft, Mayonnaise, Salz und Pfeffer gut mischen. Avocadop&uuml;r&eacute;e
    in die Fischr&ouml;llchen f&uuml;llen.</p>

  <h2>Tipp:</h2>
  <p>Mit Kapern garnieren. (Ergibt ca. 24 R&ouml;llchen, die als Vorspeise serviert, f&uuml;r ca. 4 Personen reichen).
  </p>

  <h2>Quelle:</h2>
  <p>Herbert Eigenmann, Code: AVF</p>

  <h2>Bewertung:</h2>
  <p>Gelang am 21.4.2001 recht gut. Schien mir verh&auml;ltnism&auml;ssig Aufwendig. Das Problem ist das Rollen der
    Fischfilets. Ich habe das so interpretiert, dass man quasi einen Zylinder machen soll wo nachher das Guacamole
    reinkommt. Das ist halt handwerklich etwas anspruchsvoll. Mit der Mayo muss man etwas aufpassen; ich hatte eine Idee
    zu viel. Ansonsten super gut und wenn das mit der Fingerfertigkeit hinkommt dann sieht es vielleicht sogar noch gut
    aus. Richard Eigenmann</p>
  <p>Hat auch am 12.7.2009 toll geschmeckt. Mit 200g zu zweit &uuml;berisst man sich also nicht am Fisch... RE</p>
  <p>Erneut am 12.4.2012 zubereitet. Schmeckt fein! RE.</p>


<p CLASS='linkback'>
    <a href='https:\/\/richardeigenmann.github.io\/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    <script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-47341387-3', 'auto');
  ga('send', 'pageview');

    let wakeLock = null; // Variable to hold the wake lock instance
    const statusText = document.getElementById('status');
    const wakeLockToggle = document.getElementById('wakeLockToggle');

    // Function to request a wake lock
    async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
          //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
          wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

    // Function to release the wake lock
    function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

    // Initialize wake lock on page load
    async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
        await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
    }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
        requestWakeLock();
      } else {
        releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
        releaseWakeLock(); // Automatically release wake lock when page is hidden
        wakeLockToggle.checked = false; // Update checkbox state
      }
    });

    // Enable wake lock by default when the page loads
    window.addEventListener('load', initializeWakeLock);
</script>
</body>

</html>