<!DOCTYPE HTML>
<html>

<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title>Apfelauflauf</title>
	<link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
	<meta name="RCP-Speise-Kategorie" content="Aus dem Ofen">
	<meta name="RCP-Speise-Kategorie" content="Vegetarisch">
	<meta name="RCP-Speise-Kategorie" content="Desserts">
	<meta name="RCP-Zutat" content="&Auml;pfel">
	<meta name="RCP-Zutat" content="Butter">
	<meta name="RCP-Zutat" content="Zucker">
	<meta name="RCP-Zutat" content="Zitronensaft">
	<meta name="RCP-Zutat" content="Konfit&uuml;re">
	<meta name="RCP-Zutat" content="Milch">
	<meta name="RCP-Zutat" content="Vanillestengel">
	<meta name="RCP-Zutat" content="Eier">
	<meta name="RCP-Bewertung" content="3 Sterne">
	<meta name="RCP-Quelle" content="Herbert Eigenmann">
</head>

<body>
	<h1>Apfelauflauf</h1>
	<img src="Rcp248.jpg" alt="Apfelauflauf" width="400" height="243">

	<table>
		<tbody>
			<tr>
				<td colspan="2"><strong>Zutaten f&uuml;r 4 Personen:</strong></td>
			</tr>
			<tr>
				<td class="td-qty">6</td>
				<td><strong>mittelgrosse &Auml;pfel</strong></td>
			</tr>
			<tr>
				<td class="td-qty"></td>
				<td><strong>Butter</strong></td>
			</tr>
			<tr>
				<td class="td-qty"></td>
				<td><strong>brauner Zucker</strong></td>
			</tr>
			<tr>
				<td class="td-qty"></td>
				<td><strong>Zitronensaft</strong></td>
			</tr>
			<tr>
				<td class="td-qty"></td>
				<td><strong>rote Konfit&uuml;re</strong></td>
			</tr>
			<tr>
				<td class="td-qty">5 dl</td>
				<td><strong>Milch</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1/2</td>
				<td><strong>Vanillestengel</strong></td>
			</tr>
			<tr>
				<td class="td-qty">3</td>
				<td><strong>Eier</strong></td>
			</tr>
		</tbody>
	</table>

	<h2>Zubereitung:</h2>
	<p>&Auml;pfel sch&auml;len und das Kerngeh&auml;use ausstechen. Die &Auml;pfel in eine Auflauf-Form verteilen.
		<p>In jede H&ouml;hlung ein St&uuml;ck Butter mit braunem Zucker vermischt geben.</p>
		<p>Auf den Grund der Form 1/2 dl Wasser mit dem Saft einer halben Zitrone giessen und die &Auml;pfel im Backofen
			w&auml;hrend etwa 15 Minuten bei m&auml;ssiger Hitze backen.</p>
		<p>Inzwischen 5 dl Milch mit einem halben, aufgeschnittenen Vanillestengel aufkochen, 1 EL Maispuder mit etwas
			kalter Milch glatt r&uuml;hren und unter st&auml;ndigem Schwingen in die kochende Milch giessen.
			W&auml;hrend einigen Minuten auf kleiner Hitze, unter st&auml;ndigem Schwingen kochen lassen.</p>
		<p>Vom Herd nehmen und 60 g Zucker sowie 3 Eigelb dazu mischen, alles gut verr&uuml;hren und die Creme neben die
			&Auml;pfel giessen. Vorher den Wasser-Saft weggiessen!</p>
		<p>Die 3 Eiweiss mit 1 EL Zucker steif schlagen, mit der Spritzd&uuml;se auf die Oberfl&auml;che verteilen, die
			Oberfl&auml;che der &Auml;pfel soll frei bleiben. Bei schwacher Hitze im Backofen goldbraun &uuml;berbacken.
		</p>
		<p>Die H&ouml;hlungen der &Auml;pfel mit roter Konfit&uuml;re f&uuml;llen.</p>

		<h2>Quelle:</h2>
		<p>Herbert Eigenmann</p>

		<h2>Bewertung:</h2>
		<p>Hat eigentlich ganz gut geschmeckt. Sandra war nicht &uuml;berw&auml;ltigt und liess mir in den folgenden
			Tagen das Restenaufessen. RE, 29.5.2008</p>

<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<script async src="https://www.googletagmanager.com/gtag/js?id=G-XWT8EWS5BN"></script>
<script>
  // Function to request a wake lock
  async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

  // Function to release the wake lock
  function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

  // Initialize wake lock on page load
  async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
          await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
  }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
    requestWakeLock();
      } else {
    releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
    releaseWakeLock(); // Automatically release wake lock when page is hidden
  wakeLockToggle.checked = false; // Update checkbox state
      }
    });

  // Enable wake lock by default when the page loads
  window.addEventListener('load', initializeWakeLock);
</script>
</body>

</html>