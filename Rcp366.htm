<!DOCTYPE HTML>
<html>

<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title>Cheesecake von Kirsty</title>
	<link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
	<meta name="RCP-Speise-Kategorie" content="Cakes">
	<meta name="RCP-Speise-Kategorie" content="Vegetarisch">
	<meta name="RCP-Kochwerkzeug" content="Springform">
	<meta name="RCP-Zutat" content="Petit Beurre">
	<meta name="RCP-Zutat" content="Butter">
	<meta name="RCP-Zutat" content="Halbfettquark">
	<meta name="RCP-Zutat" content="Zucker">
	<meta name="RCP-Zutat" content="Mehl">
	<meta name="RCP-Zutat" content="Eier">
	<meta name="RCP-Zutat" content="Zitronensaft">
	<meta name="RCP-Zutat" content="Vanillezucker">
	<meta name="RCP-Zutat" content="Sauermilch">
	<meta name="RCP-Zutat" content="Blaubeeren">
	<meta name="RCP-Bewertung" content="4 Sterne">
	<meta name="RCP-Quelle" content="Sandra Keller">
<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-XWT8EWS5BN"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-XWT8EWS5BN');
</script>
<body>
	<h1>Cheesecake von Kirsty</h1>
	<img src="Rcp366.jpg" alt="Cheesecake von Kirsty" width="400" height="294">

	<table>
		<tbody>
			<tr>
				<td colspan="2"><strong>Zutaten:</strong></td>
			</tr>
			<tr>
				<td class="td-qty">250 g</td>
				<td><strong>Petit Beurre</strong></td>
			</tr>
			<tr>
				<td class="td-qty">125 g</td>
				<td><strong>Butter</strong></td>
			</tr>
			<tr>
				<td class="td-qty">375 g</td>
				<td><strong>Halbfettquark</strong></td>
			</tr>
			<tr>
				<td class="td-qty">200 g</td>
				<td><strong>Zucker</strong></td>
			</tr>
			<tr>
				<td class="td-qty">3</td>
				<td><strong>Eier</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 El</td>
				<td><strong>Zitronensaft</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 Pack</td>
				<td><strong>Vanillezucker</strong></td>
			</tr>
			<tr>
				<td class="td-qty">2 dl</td>
				<td><strong>M-Dessert Sauermilch</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 El</td>
				<td><strong>Mehl</strong></td>
			</tr>
			</tr>
			<tr>
				<td class="td-qty">1 Prise</td>
				<td><strong>Salz</strong></td>
			</tr>
			<tr>
				<td class="td-qty">Handvoll</td>
				<td><strong>Blaubeeren</strong></td>
			</tr>
		</tbody>
	</table>

	<h2>Zubereitung:</h2>
	<p>Die Springform gut ausbuttern.</p>
	<p>In einer Sch&uuml;ssel die Petit Beurre zerbr&ouml;seln. Die Butter schmelzen und dar&uuml;ber giessen. Die
		Br&ouml;sel zusammendr&uuml;cken und in der Springform einen Boden formen. Anschliessend die Springform in den
		Tiefk&uuml;hler legen bis die F&uuml;llung rein kommt.</p>
	<p>Den Halbfettquark und den Zucker in eine Sch&uuml;ssel geben.</p>
	<p>2 Eier trennen, dabei das Eigelb zum Quark/Zucker geben und die Eiweiss in einen Becher zum steif schlagen.</p>
	<p>Das dritte Ei zum Quark geben sowie den Zitronensaft, den Vanillezucker, den Essl&ouml;ffel Mehl und eine Prise
		Salz</p>
	<p>2 dl M-Dessert Sauermilch zugeben und mischen.</p>
	<p>Die Eiweiss steif schlagen und einen Essl&ouml;ffel Zucker zugeben.</p>
	<p>Das Eiweiss unterheben.</p>
	<p>Baubeeren dazu mischen, in die Springform giessen.</p>
	<p>Bei 180&deg;C 1 - 1.25 Stunden backen.</p>

	<h2>Quelle:</h2>
	<p>Kirsty (Australia) via Sandra Keller, 16.8.1999</p>

	<h2>Bewertung:</h2>
	<p>Schmeckt vorz&uuml;glich. Ich habe gefrorene Blaubeeren aufgetaut und beigegeben. Das f&uuml;hrte zu einer
		violettf&auml;rbung der Masse. Falls das st&ouml;rt k&ouml;nnte man vielleicht die Beeren auf den Teigboden
		geben und die Masse dar&uuml;ber. Mit frischen Beeren passiert das vermutlich sowieso weniger. RE 16.12.2009</p>

<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-PHL53P" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

<script>
  // Function to request a wake lock
  async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

  // Function to release the wake lock
  function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

  // Initialize wake lock on page load
  async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
          await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
  }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
    requestWakeLock();
      } else {
    releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
    releaseWakeLock(); // Automatically release wake lock when page is hidden
  wakeLockToggle.checked = false; // Update checkbox state
      }
    });

  // Enable wake lock by default when the page loads
  window.addEventListener('load', initializeWakeLock);
</script>
</body>

</html>