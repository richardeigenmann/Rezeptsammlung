<!DOCTYPE HTML>
<html>

<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title>Getr&auml;nkter Orangencake</title>
	<link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
	<meta name="RCP-Speise-Kategorie" content="Cakes">
	<meta name="RCP-Speise-Kategorie" content="Vegetarisch">
	<meta name="RCP-Speise-Kategorie" content="Aus dem Ofen">
	<meta name="RCP-Zutat" content="Butter">
	<meta name="RCP-Zutat" content="Rohzucker">
	<meta name="RCP-Zutat" content="Zucker">
	<meta name="RCP-Zutat" content="Eier">
	<meta name="RCP-Zutat" content="Halbrahm">
	<meta name="RCP-Zutat" content="Orangen">
	<meta name="RCP-Zutat" content="Schokolade">
	<meta name="RCP-Zutat" content="Pinienkerne">
	<meta name="RCP-Zutat" content="Mehl">
	<meta name="RCP-Zutat" content="Backpulver">
	<meta name="RCP-Bewertung" content="3 Sterne">
	<meta name="RCP-Quelle" content="Herbert Eigenmann">
<!-- Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
  new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
  j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
  'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
  })(window,document,'script','dataLayer','GTM-PHL53P');</script>
<!-- End Google Tag Manager -->
</head>
<body>
	<h1>Getr&auml;nkter Orangencake</h1>
	<img src="Rcp283.jpg" alt="Getr&auml;nkter Orangencake" width="400" height="270">

	<table>
		<tbody>
			<tr>
				<td colspan="2"><strong>Zutaten f&uuml;r eine 24 cm Cakeform:</strong></td>
			</tr>
			<tr>
				<td class="td-qty">50 g</td>
				<td><strong>Butter</strong></td>
			</tr>
			<tr>
				<td class="td-qty">175 g</td>
				<td><strong>Rohzucker</strong> (f&uuml;r den Teig)</td>
			</tr>
			<tr>
				<td class="td-qty">75 g</td>
				<td><strong>Zucker</strong> (f&uuml;r den Guss)</td>
			</tr>
			<tr>
				<td class="td-qty">2</td>
				<td><strong>Eier</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 dl</td>
				<td><strong>Halbrahm</strong></td>
			</tr>
			<tr>
				<td class="td-qty">2</td>
				<td><strong>Orangen</strong></td>
			</tr>
			<tr>
				<td class="td-qty">50 g</td>
				<td><strong>Schokolade</strong></td>
			</tr>
			<tr>
				<td class="td-qty">25 g</td>
				<td><strong>Pinienkerne</strong></td>
			</tr>
			<tr>
				<td class="td-qty">250 g</td>
				<td><strong>Mehl</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 TL</td>
				<td><strong>Backpulver</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 Prise</td>
				<td><strong>Salz</strong></td>
			</tr>
		</tbody>
	</table>

	<h2>Zubereitung:</h2>
	<p>Butter schaumig r&uuml;hren.</p>
	<p>Rohzucker, Zucker, Eier, Salz zugeben und zu einer luftigen Masse weiter r&uuml;hren.</p>
	<p>Abgeriebene Schale und Saft einer Orange sowie Pinienkerne und die grob gehackte Schokolade werden nun darunter
		ger&uuml;hrt.</p>
	<p>Abwechslungsweise werden Rahm und das Mehl mit dem Backpulver untergezogen.</p>
	<p>Die Masse in eine ausgebutterte Cakeform von 24 cm L&auml;nge f&uuml;llen und bei guter Mittelhitze ca. 45
		Minuten backen.</p>
	<p>In der Zwischenzeit den Kristallzucker mit dem Saft einer Orange so gut r&uuml;hren, bis er sich aufgel&ouml;st
		hat.</p>
	<p>Den noch heissen Cake nach dem Backen einige Male einstechen, dann den Guss dar&uuml;ber leeren und in der Form
		ausk&uuml;hlen lassen.</p>

	<h2>Quelle:</h2>
	<p>Herbert Eigenmann, Code: ORC</p>

	<h2>Bewertung:</h2>
	<p>Bewertung: Kam sehr gut. Die Schokolade ist nicht zu aufdringlich. RE, 20.4.2002<br>
		Am 6.8.2007 wurde es ein bisschen ein Desaster. Ich habe die kleine Cakeform verwendet und da wollte der Kuchen
		nicht raus. Der Trick w&auml;re mit Backtrennpapier dazwischen zu gehen. Auch geht der Rohrzucker in den Teig
		und der Weisszucker in den Orangensaft. Der Cake schmeckt ganz passabel aber nicht sensationell. RE.</p>

<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-PHL53P" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

<script>
  // Function to request a wake lock
  async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

  // Function to release the wake lock
  function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

  // Initialize wake lock on page load
  async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
          await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
  }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
    requestWakeLock();
      } else {
    releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
    releaseWakeLock(); // Automatically release wake lock when page is hidden
  wakeLockToggle.checked = false; // Update checkbox state
      }
    });

  // Enable wake lock by default when the page loads
  window.addEventListener('load', initializeWakeLock);
</script>
</body>

</html>