<!DOCTYPE HTML>
<html>

<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title>Quarkkuchen nach russischer Art</title>
	<link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
	<meta name="RCP-Speise-Kategorie" content="Vegetarisch">
	<meta name="RCP-Speise-Kategorie" content="Aus dem Ofen">
	<meta name="RCP-Speise-Kategorie" content="Cakes">
	<meta name="RCP-Region" content="Russisch">
	<meta name="RCP-Zutat" content="Butter">
	<meta name="RCP-Zutat" content="Eier">
	<meta name="RCP-Zutat" content="Zucker">
	<meta name="RCP-Zutat" content="Mehl">
	<meta name="RCP-Zutat" content="Milch">
	<meta name="RCP-Zutat" content="Backpulver">
	<meta name="RCP-Zutat" content="Zitronen">
	<meta name="RCP-Zutat" content="Speisequark">
	<meta name="RCP-Zutat" content="Rahmquark">
	<meta name="RCP-Zutat" content="Halbrahm sauer">
	<meta name="RCP-Zutat" content="Maizena">
	<meta name="RCP-Zutat" content="Sultaninen">
	<meta name="RCP-Kochwerkzeug" content="Springform 26cm">
	<meta name="RCP-Bewertung" content="3 Sterne">
	<meta name="RCP-Quelle" content="Herbert Eigenmann">
</head>

<body>
	<h1>Quarkkuchen nach russischer Art</h1>
	<img src="Rcp302.jpg" alt="Quarkkuchen nach russischer Art" width="400" height="322">

	<table>
		<tbody>
			<tr>
				<td colspan="2"><strong>Zutaten f&uuml;r 4 Personen:</strong></td>
			</tr>
			<tr>
				<td colspan=2><strong>Teig:</strong></td>
			</tr>
			<tr>
				<td class="td-qty">2 EL</td>
				<td><strong>Butter</strong> oder <strong>Margarine</strong></td>
			</tr>
			<tr>
				<td class="td-qty">2</td>
				<td><strong>Eier</strong></td>
			</tr>
			<tr>
				<td class="td-qty">50 g</td>
				<td><strong>Zucker</strong></td>
			</tr>
			<tr>
				<td class="td-qty">200 g</td>
				<td><strong>Mehl</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 EL</td>
				<td><strong>Milch</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 TL</td>
				<td><strong>Backpulver</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 Prise</td>
				<td><strong>Salz</strong></td>
			</tr>
			<tr>
				<td colspan=2><strong>Belag:</strong></td>
			</tr>
			<tr>
				<td class="td-qty">3</td>
				<td><strong>Eier</strong></td>
			</tr>
			<tr>
				<td class="td-qty">50 g</td>
				<td><strong>Zucker</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1/2</td>
				<td><strong>Zitrone</strong></td>
			</tr>
			<tr>
				<td class="td-qty">250 g</td>
				<td><strong>Speisequark</strong></td>
			</tr>
			<tr>
				<td class="td-qty">150 g</td>
				<td><strong>Rahmquark</strong></td>
			</tr>
			<tr>
				<td class="td-qty">150 g</td>
				<td><strong>Halbrahm sauer</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 EL</td>
				<td><strong>Maispuder</strong></td>
			</tr>
			<tr>
				<td class="td-qty">50 g</td>
				<td><strong>Sultaninen</strong></td>
			</tr>
		</tbody>
	</table>

	<h2>Zubereitung:</h2>
	<p>Springform 26 cm</p>
	<p>Butter schmelzen und ausk&uuml;hlen lassen.</p>
	<p>Eier mit dem Zucker und Milch schaumig r&uuml;hren. Mehl, Backpulver und Salz dazu sieben. Mit der Butter zu
		einem glatten Teig verarbeiten. Ca. 1 Stunde k&uuml;hl stellen.</p>
	<p>Ofen auf Mittelhitze (180&deg;C) vorheizen. Teig auswallen; Formboden damit belegen; einen 2.5 cm hohen Rand
		formen; Teigboden mit einer Gabel einige Male gut einstechen.</p>
	<p>Eier teilen. Eigelb mit dem Zucker schaumig r&uuml;hren. Zitrone gut waschen; Schale abreiben. Zitronenschale,
		Quark, Halbrahm, Maispuder und Sultaninen zur Zucker/Eigelbmasse geben. Mischen.</p>
	<p>Das zu Schnee geschlagene Eiweiss darunter ziehen. Belag auf den Teigboden geben.</p>
	<p>Kuchen ca. 30 Minuten backen, dann die Temperatur auf gute Hitze (230&deg;C) erh&ouml;hen. Kuchen weitere 15 - 20
		Minuten fertig backen, so dass er goldbraun ist.</p>

	<h2>Tipps:</h2>
	<p>Bei Zimmertemperatur servieren. </p>
	<p>Es lohnt sich, die Temperatur zum Fertig backen zu erh&ouml;hen, sonst wird der Quarkkuchen zu blass.</p>

	<h2>Quelle:</h2>
	<p>Herbert Eigenmann, Code: QKR</p>

	<h2>Bewertung:</h2>
	<p>Ergibt einen schmackhaften Quarkkuchen. Wird am besten frisch gegessen. Wir haben den irgendwo zwischen 3 und 4
		Punkten angesiedelt. Er ist nicht zu s&uuml;ss sondern angenehm luftig. Der Teig gelang ganz ordentlich.
		Aufpassen mit der zweiten Backzeit. Moderne &Ouml;fen heizen vielleicht schneller, so dass ich den Kuchen
		fr&uuml;her herausnehmen musste damit er nicht ganz verkohlt. Daf&uuml;r war er nicht restlos durch gebacken.
		Also vielleicht eher 210&deg;C statt 230. RE 13.2.2011</p>

<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<script async src="https://www.googletagmanager.com/gtag/js?id=G-XWT8EWS5BN"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-XWT8EWS5BN');
  // Function to request a wake lock
  async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

  // Function to release the wake lock
  function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

  // Initialize wake lock on page load
  async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
          await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
  }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
    requestWakeLock();
      } else {
    releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
    releaseWakeLock(); // Automatically release wake lock when page is hidden
  wakeLockToggle.checked = false; // Update checkbox state
      }
    });

  // Enable wake lock by default when the page loads
  window.addEventListener('load', initializeWakeLock);
</script>
</body>

</html>