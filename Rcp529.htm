<!DOCTYPE HTML>
<html>

<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title>Capuns</title>
	<link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
	<meta name="RCP-Speise-Kategorie" content="Hauptgerichte">
    <meta name="RCP-Region" content="Schweizerisch">
	<meta name="RCP-Zutat" content="Mehl">
	<meta name="RCP-Zutat" content="Milch">
	<meta name="RCP-Zutat" content="Eier">
	<meta name="RCP-Zutat" content="Salsiz">
	<meta name="RCP-Zutat" content="Bergk&auml;se">
	<meta name="RCP-Zutat" content="Petersilie">
	<meta name="RCP-Zutat" content="Pfefferminze">
	<meta name="RCP-Zutat" content="Mangold">
	<meta name="RCP-Zutat" content="Bouillon">
	<meta name="RCP-Zutat" content="Rahm">
	<meta name="RCP-Bewertung" content="3 Sterne">
	<meta name="RCP-Quelle" content="Betty Bossi">
</head>

<body>
	<h1>Capuns</h1>
	<img src="Rcp529.jpg" alt="Capuns" width="397" height="450">

	<table>
		<tbody>
			<tr>
				<td colspan="2"><strong>Zutaten f&uuml;r 4 Personen:</strong></td>
			</tr>
			<tr>
				<td class="td-qty">200g</td>
				<td><strong>Kn&ouml;pflimehl</strong></td>
			</tr>
			<tr>
				<td class="td-qty">100g</td>
				<td><strong>Mehl</strong></td>
			</tr>
			<tr>
				<td class="td-qty">0.75 TL</td>
				<td><strong>Salz</strong></td>
			</tr>
			<tr>
				<td class="td-qty">wenig</td>
				<td><strong>Pfeffer</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1.25 dl</td>
				<td><strong>Milch</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1.25 dl</td>
				<td><strong>Wasser</strong></td>
			</tr>
			<tr>
				<td class="td-qty">2</td>
				<td><strong>Eier</strong></td>
			</tr>
			<tr>
				<td class="td-qty">200g</td>
				<td><strong>Salsiz</strong></td>
			</tr>
            <tr>
                <td class="td-qty">50g</td>
                <td><strong>B&uuml;ndner Bergk&auml;se</strong></td>
            </tr>
			<tr>
				<td class="td-qty">0.5 Bund</td>
				<td><strong>Petersilie</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 Zweiglein</td>
				<td><strong>Pfefferminze</strong></td>
			</tr>
			<tr>
				<td class="td-qty">500g</td>
				<td><strong>Mangold</strong> (20 Bl&auml;tter</td>
			</tr>
            <tr>
				<td class="td-qty">2 dl</td>
				<td><strong>Fleischbouillon</strong></td>
			</tr>
            <tr>
				<td class="td-qty">2 dl</td>
				<td><strong>Vollrahm</strong></td>
			</tr>
		</tbody>
	</table>

	<h2>Zubereitung: 75 Min</h2>
    <p>Kn&ouml;pflimehl, Mehl, Salz und Pfeffer in einer Sch&uuml;ssel mischen. 
        Milchwasser und Eier verr&uuml;hren, dazugiessen, mit einer Kelle mischen, so lange klopfen,
        bis der Teig gl&auml;nzt und Blasen wirft.</p>
    <p>Zugedeckt bei Raumtemperatur ca. 30 Min. quellen lassen.</p>
    <p>Salsiz sch&auml;len, in W&uuml;rfeli schneiden, zum Teig geben. K&auml;se fein dazureiben.
         Petersilie und Pfefferminze fein schneiden, daruntermischen.</p>
    <p>Ofen auf 60 Grad vorheizen.</p>
    <p>Mangoldbl&auml;tter im siedenden Salzwasser portionenweise je ca. 30 Sek. blanchieren, herausnehmen.
        Kurz in kaltes Wasser legen, abtropfen, auf einem Tuch auslegen, trocken tupfen.</p>
    <p>Je 1 - 2 EL Teig auf ein Blatt geben, seitliche Blattr&auml;nder einschlagen, satt aufrollen.</p>
    <p>Bouillon und Rahm in einer weiten Pfanne aufkochen, Hitze reduzieren. 10 Capuns beigeben,
        zugedeckt bei kleiner Hitze ca. 8 Min. k√∂cheln, herausnehmen, abtropfen, warm stellen. Zweite 
        Portion gleich zubereiten, warm gestellte Capuns wieder beigeben.</p>

    <h2>Kalorien:</h2>
    <p>767 kCal pro Person</p>

	<h2>Quelle:</h2>
	<p>Betty Bossi: <a href="https://www.bettybossi.ch/de/Rezept/ShowRezept/BB_WUBE121001_0056A-40-de">Rezept</a> 

	<h2>Bewertung:</h2>
    <p>Hat am 17.12.2023 gut geschmeckt RE</p>

<p CLASS='linkback'>
    <a href='https:\/\/richardeigenmann.github.io\/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    <script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-47341387-3', 'auto');
  ga('send', 'pageview');

    let wakeLock = null; // Variable to hold the wake lock instance
    const statusText = document.getElementById('status');
    const wakeLockToggle = document.getElementById('wakeLockToggle');

    // Function to request a wake lock
    async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
          //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
          wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

    // Function to release the wake lock
    function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

    // Initialize wake lock on page load
    async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
        await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
    }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
        requestWakeLock();
      } else {
        releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
        releaseWakeLock(); // Automatically release wake lock when page is hidden
        wakeLockToggle.checked = false; // Update checkbox state
      }
    });

    // Enable wake lock by default when the page loads
    window.addEventListener('load', initializeWakeLock);
</script>
</body>

</html>