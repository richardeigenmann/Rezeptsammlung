<!DOCTYPE HTML>
<html>

<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title>Gef&uuml;llter Fenchel an Paprikasauce</title>
	<link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
	<meta name="RCP-Speise-Kategorie" content="Hauptgerichte">
	<meta name="RCP-Speise-Kategorie" content="Aus dem Ofen">
	<meta name="RCP-Speise-Kategorie" content="Vegetarisch">
	<meta name="RCP-Speise-Kategorie" content="Aufl&auml;ufe">
	<meta name="RCP-Zutat" content="Schalotten">
	<meta name="RCP-Zutat" content="Paprikapulver">
	<meta name="RCP-Zutat" content="Pelati">
	<meta name="RCP-Zutat" content="Fenchel">
	<meta name="RCP-Zutat" content="Frischk&auml;se">
	<meta name="RCP-Zutat" content="Eigelb">
	<meta name="RCP-Zutat" content="Rahm">
	<meta name="RCP-Zutat" content="Reibk&auml;se">
	<meta name="RCP-Bewertung" content="4 Sterne">
	<meta name="RCP-Quelle" content="Heft Kochen">
</head>

<body>
	<h1>Gef&uuml;llter Fenchel an Paprikasauce</h1>
	<img src="Rcp120.jpg" alt="Gef&uuml;llter Fenchel an Paprikasauce" width="450" height="338">

	<table>
		<tbody>
			<tr>
				<td colspan="2"><strong>Zutaten f&uuml;r 4 Personen:</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1</td>
				<td><strong>Schalotte</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 El</td>
				<td><strong>Butter</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1.5 Tl</td>
				<td><strong>edels&uuml;sser Paprika</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 Dose (400g)</td>
				<td><strong>Pelatitomaten</strong></td>
			</tr>
			<tr>
				<td class="td-qty">4</td>
				<td><strong>Fenchelknollen</strong></td>
			</tr>
			<tr>
				<td class="td-qty">125g</td>
				<td><strong>Frischk&auml;se nature oder mit Kr&auml;utern</strong></td>
			</tr>
			<tr>
				<td class="td-qty">2</td>
				<td><strong>Eigelb</strong></td>
			</tr>
			<tr>
				<td class="td-qty">0.5dl</td>
				<td><strong>Rahm</strong></td>
			</tr>
			<tr>
				<td class="td-qty">75g</td>
				<td><strong>Reibk&auml;se</strong></td>
			</tr>
		</tbody>
	</table>

	<h2>Zubereitung:</h2>
	<p>Schalotte sch&auml;len und fein hacken. In der Butter hellgelb d&uuml;nsten. Mit Paprika 
		best&auml;uben und kurz weiterd&uuml;nsten. Dann die Pelati beif&uuml;gen und die Sauce
		auf grossem Feuer etwa 5 Minuten einkochen lassen. Mit einem Stabmixer oder im Mixer
		fein p&uuml;rieren. Pikant mit Salz, Pfeffer und Paprika w&uuml;rzen. Die Sauce etwa 2cm
		hoch in eine Gratinplatte f&uuml;llen.</p>
	<p>Die Fenchel r&uuml;sten. Die Knollen &uuml;ber Dampf oder in kochendem Salzwasser 5 Minuten
		vorgaren. Herausheben und etwas abk&uuml;hlen lassen. Die Knollen halbieren und den 
		Mittelteil ausl&ouml;sen; der Rand soll jedoch noch etwa 2 Schalen umfassen. Die 
		Fenchelh&auml;lften in die Paprikasauce setzen.</p>
	<p>Etwa die H&auml;lfte des ausgel&ouml;sten Fenchels fein hacken (der Rest kann z.B. 
		f&uuml;r eine Suppe verwendet werden).</p>
	<p>Frischk&auml;se, Eigelb und Rahm glatt r&uuml;hren. Gehackten Fenchel und die H&auml;lfte 
		des Reibk&auml;ses untermischen und mit Salz sowie Pfeffer w&uuml;rzen. Bergartig in die 
		Fenchelschalen f&uuml;llen und mit dem restlichen K&auml;se bestreuen.</p>
	<p>Den gef&uuml;llten Fenchel an Paprikasauce im auf 200&deg;C vorgeheizten Ofen auf der 
		zweituntersten Rille w&auml;hrend 15-20 Minuten &uuml;berbacken.</p>

	<h2>F&uuml;r den Kleinhaushalt</h2>
	<p>2 Personen: Zutaten halbieren, 1 Person: Zutaten vierteln.</p>

	<h2>Kalorien:</h2>
	<p>Pro Portion ca. 14g Eiweiss, 24g Fett, 12g Kohlenhydrate. 326 kKalorien oder 1363 kJoule</p>

	<h2>Quelle:</h2>
	<p>Kochen 1/2 2003 Seite 23</p>

	<h2>Bewertung:</h2>
	<p>Scheckt gut, RE, 23 April 2022</p>


<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<!-- Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
  new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
  j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
  'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
  })(window,document,'script','dataLayer','GTM-PHL53P');</script>
  <!-- End Google Tag Manager -->
<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-PHL53P" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

<script>
  // Function to request a wake lock
  async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

  // Function to release the wake lock
  function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

  // Initialize wake lock on page load
  async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
          await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
  }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
    requestWakeLock();
      } else {
    releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
    releaseWakeLock(); // Automatically release wake lock when page is hidden
  wakeLockToggle.checked = false; // Update checkbox state
      }
    });

  // Enable wake lock by default when the page loads
  window.addEventListener('load', initializeWakeLock);
</script>
</body>

</html>