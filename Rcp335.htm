<!DOCTYPE HTML>
<html>

<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title>Cream Cheese Brownies</title>
	<link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
	<meta name="RCP-Speise-Kategorie" content="Aus dem Ofen">
	<meta name="RCP-Speise-Kategorie" content="Vegetarisch">
	<meta name="RCP-Speise-Kategorie" content="Guetzli">
	<meta name="RCP-Zutat" content="Butter">
	<meta name="RCP-Zutat" content="Schokolade">
	<meta name="RCP-Zutat" content="Zucker">
	<meta name="RCP-Zutat" content="Eier">
	<meta name="RCP-Zutat" content="Mehl">
	<meta name="RCP-Zutat" content="Waln&uuml;sse">
	<meta name="RCP-Zutat" content="Vanille">
	<meta name="RCP-Zutat" content="Quark">
	<meta name="RCP-Bewertung" content="4 Sterne">
	<meta name="RCP-Quelle" content="Konrad Hofstetter">
<!-- Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
  new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
  j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
  'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
  })(window,document,'script','dataLayer','GTM-PHL53P');</script>
<!-- End Google Tag Manager -->
</head>
<body>
	<h1>Cream Cheese Brownies</h1>
	<img src="Rcp335.jpg" alt="Cream Cheese Brownies" width="400" height="275">

	<table>
		<tbody>
			<tr>
				<td colspan="2"><strong>Zutaten:</strong></td>
			</tr>
			<tr>
				<td class="td-qty">220 g</td>
				<td><strong>Butter oder Margarine</strong></td>
			</tr>
			<tr>
				<td class="td-qty">120 g</td>
				<td><strong>unges&uuml;sste Schokolade</strong></td>
			</tr>
			<tr>
				<td class="td-qty">500 g</td>
				<td><strong>Zucker</strong></td>
			</tr>
			<tr>
				<td class="td-qty">4</td>
				<td><strong>Eier</strong></td>
			</tr>
			<tr>
				<td class="td-qty">120 g</td>
				<td><strong>Mehl</strong></td>
			</tr>
			<tr>
				<td class="td-qty">0.5 El</td>
				<td><strong>Salz</strong></td>
			</tr>
			<tr>
				<td class="td-qty">120 g</td>
				<td><strong>gehackte Waln&uuml;sse</strong></td>
			</tr>
			<tr>
				<td class="td-qty">2 El</td>
				<td><strong>Vanille</strong></td>
			</tr>
			<tr>
				<td class="td-qty">225 g</td>
				<td><strong>Frischk&auml;se</strong></td>
			</tr>
		</tbody>
	</table>

	<h2>Zubereitung:</h2>
	<p>Butter und Schokolade im Wasserbad schmelzen. Vom Herd nehmen und beiseite stellen.</p>
	<p>400g Zucker und 3 Eier in eine Sch&uuml;ssel geben und mit dem Mixer vermischen.</p>
	<p>Die Schokolade dazu mischen.</p>
	<p>Mehl, Salz Waln&uuml;sse und 1 El Vanille zugeben und weiter mischen bis alles gut vermischt ist.</p>

	<p>Das verbleibende Ei mit dem restlichen Zucker, der Vanille und dem Frischk&auml;se ein einer frischen
		Sch&uuml;ssel mit dem Mixer gut vermischen.</p>

	<p>Die Schokoladenmischung und die Frischk&auml;sesauce abwechselnd mit dem L&ouml;ffel in eine gebutterte und
		bemehlte Backform geben (9x13x2 Ich). Mit einem Messer Muster durch die Masse ziehen. Bei 180&deg;C 45 bis 50
		Minuten backen.</p>

	<p>Nach dem Ausk&uuml;hlen in W&uuml;rfel schneiden.</p>
	<p>Ergibt: 24 2x2 Inch Brownies.</p>

	<h2>Quelle:</h2>
	<p>Konrad Hofstetter W&amp;A, Dec 1994</p>

	<h2>Bewertung:</h2>
	<p>Excellent brownies. For my brownies pan which is a little smaller than recommended I need to add 10 minutes to
		the baking time. RE, 28 Feb 2010</p>

<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-PHL53P" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

<script>
  // Function to request a wake lock
  async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

  // Function to release the wake lock
  function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

  // Initialize wake lock on page load
  async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
          await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
  }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
    requestWakeLock();
      } else {
    releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
    releaseWakeLock(); // Automatically release wake lock when page is hidden
  wakeLockToggle.checked = false; // Update checkbox state
      }
    });

  // Enable wake lock by default when the page loads
  window.addEventListener('load', initializeWakeLock);
</script>
</body>

</html>