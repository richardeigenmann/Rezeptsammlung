<!DOCTYPE HTML>
<html>

<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title>Tomaten Kardamom Dal</title>
	<link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
	<meta name="RCP-Speise-Kategorie" content="Curries">
	<meta name="RCP-Speise-Kategorie" content="Hauptgerichte">
	<meta name="RCP-Speise-Kategorie" content="Eint&ouml;pfe">
    <meta name="RCP-Speise-Kategorie" content="Vegetarisch">
    <meta name="RCP-Region" content="Indisch">
	<meta name="RCP-Zutat" content="Oliven&ouml;l">
	<meta name="RCP-Zutat" content="Zwiebeln">
	<meta name="RCP-Zutat" content="Knoblauch">
	<meta name="RCP-Zutat" content="Chilipulver">
	<meta name="RCP-Zutat" content="Karadmompulver">
	<meta name="RCP-Zutat" content="Linsen">
	<meta name="RCP-Zutat" content="getrocknete Tomaten">
	<meta name="RCP-Zutat" content="Kokosmilch">
	<meta name="RCP-Zutat" content="Tomaten">
	<meta name="RCP-Zutat" content="Oliven">
    <meta name="RCP-Zutat" content="Granatapfelkerne">
	<meta name="RCP-Bewertung" content="3 Sterne">
	<meta name="RCP-Quelle" content="Veganuary">
</head>

<body>
	<h1>Tomaten Kardamom Dal</h1>
	<img src="Rcp528.jpg" alt="Tomaten Kardamom Dal" width="450" height="327">

	<table>
		<tbody>
			<tr>
				<td colspan="2"><strong>Zutaten f&uuml;r 4 Personen:</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 EL</td>
				<td><strong>Oliven&ouml;l</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1</td>
				<td><strong>Zwiebel</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1</td>
				<td><strong>Knoblauchzehe</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 TL</td>
				<td>scharfer <strong>Paprika</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 TL</td>
				<td><strong>Kardamompulver</strong></td>
			</tr>
			<tr>
				<td class="td-qty">200g</td>
				<td><strong>rote Linsen</strong></td>
			</tr>
			<tr>
				<td class="td-qty">60 g</td>
				<td><strong>getrocknete Tomaten</strong></td>
			</tr>
			<tr>
				<td class="td-qty">4 dl</td>
				<td><strong>Wasser</strong></td>
			</tr>
            <tr>
                <td class="td-qty">2.5 dl</td>
                <td><strong>Kokosmilch</strong></td>
            </tr>
			<tr>
				<td class="td-qty">200g</td>
				<td><strong>Cherry Tomaten</strong></td>
			</tr>
			<tr>
				<td class="td-qty">60g</td>
				<td><strong>schwarze Oliven</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1/2 TL</td>
				<td><strong>Salz</strong></td>
			</tr>
            <tr>
				<td class="td-qty">140g</td>
				<td><strong>Granatapfelkerne</strong></td>
			</tr>
		</tbody>
	</table>

	<h2>Zubereitung: 30 Min</h2>
    <p>Zwiebel fein hacken.</p>
    <p>&Ouml;l in einer Pfanne erw&auml;rmen.</p>
    <p>Zwiebel, gepressten Knoblauch, Paprika- und Karadmompulver beigeben und ca. 3 Minuten and&auml;mpfen.</p>
    <p>Getrocknete Tomaten in Viertel schneiden und mit den Linsen zusammen zugeben. Kurz mitd&auml;mpfen.</p>
    <p>Wasser, Kokosmilch und Cherry Tomaten dazu geben. Aufkochen und dann Hitze reduzieren.</p>
    <p>Unter gelegentlichem R&uml;hren ca. 15 Minuten k&ouml;cheln lassen.</p>
    <p>Oliven beigeben, mischen, salzen.</p>
    <p>Beim Anrichten die Granatapfelkerne dar&uml;berstreuen.</p>

    <h2>Kalorien:</h2>
    <p>416 kCal pro Person</p>

	<h2>Quelle:</h2>
	<p>Veganuary Heft vom Coop</a> 

	<h2>Bewertung:</h2>
    <p>Hat am 10.1.2024 gut geschmeckt RE</p>

<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<script async src="https://www.googletagmanager.com/gtag/js?id=G-XWT8EWS5BN"></script>
<script>
  // Function to request a wake lock
  async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

  // Function to release the wake lock
  function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

  // Initialize wake lock on page load
  async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
          await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
  }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
    requestWakeLock();
      } else {
    releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
    releaseWakeLock(); // Automatically release wake lock when page is hidden
  wakeLockToggle.checked = false; // Update checkbox state
      }
    });

  // Enable wake lock by default when the page loads
  window.addEventListener('load', initializeWakeLock);
</script>
</body>

</html>