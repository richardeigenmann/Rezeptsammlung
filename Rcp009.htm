<!DOCTYPE HTML>
<html>

<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Maissuppe (Bramata)</title>
  <link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
  <meta name="RCP-Speise-Kategorie" content="Suppen">
  <meta name="RCP-Speise-Kategorie" content="Vegetarisch">
  <meta name="RCP-Region" content="Indisch">
  <meta name="RCP-Zutat" content="Polentamehl">
  <meta name="RCP-Zutat" content="Milch">
  <meta name="RCP-Zutat" content="Bouillon">
  <meta name="RCP-Zutat" content="Reibk&auml;se">
  <meta name="RCP-Bewertung" content="3 Sterne">
  <meta name="RCP-Quelle" content="Herbert Eigenmann">
</head>

<body>
  <h1>Maissuppe (Bramata)</h1>
  <img src="Rcp009.jpg" alt="Maissuppe (Bramata)" width="400" height="285">

  <table>
    <tbody>
      <tr>
        <td colspan="2">
          <strong>Zutaten f&uuml;r 4 Personen:</strong>
        </td>
      </tr>
      <tr>
        <td class="td-qty">6 L&ouml;ffel</td>
        <td><strong>Polentamehl</strong></td>
      </tr>
      <tr>
        <td class="td-qty">1 Tasse</td>
        <td><strong>Milch</strong></td>
      </tr>
      <tr>
        <td class="td-qty">2 l</td>
        <td><strong>Fleischbouillon</strong></td>
      </tr>
      <tr>
        <td class="td-qty">1 Pack</td>
        <td><strong>geriebener K&auml;se</strong></td>
      </tr>
    </tbody>
  </table>


  <h2>Zubereitung:</h2>
  <p>6 L&ouml;ffel gutes Polentamehl werden mit einer Tasse kalter Milch zart anger&uuml;hrt und w&auml;hrend mindestens
    30 Minuten auf die Seite
    gestellt.</p>
  <p>Dann bereitet man aus W&uuml;rfeln, oder noch besser mit Knochen und Fleisch, eine kr&auml;ftige Fleischbouillon zu
    und gibt das anger&uuml;hrte Polentamehl unter t&uuml;chtigem Schwingen in die kochende Bouillon. W&auml;hrend 30
    Minuten auf kleinem Feuer kochen lassen.</p>
  <p>Zuletzt geriebenen K&auml;se in die Suppe geben. Vor dem Servieren den Suppentopf noch einige Minuten zugedeckt
    stehen lassen.</p>


  <h2>Quelle:</h2>
  <p>Herbert Eigenmann, Code: PLS</p>

  <h2>Bewertung:</h2>
  <p>Ergab einen erstaunlich schmackhaften Brei. Habe nat&uuml;rlich nur einen Viertel der Menge gemacht. Die braunen
    Flocken im Bild sind der leicht angebrannte Teil vom Pfannenboden. Also runter mit der Temperatur und immer ein
    bisschen R&uuml;hren! RE 9.10.2009</p>

<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<script async src="https://www.googletagmanager.com/gtag/js?id=G-XWT8EWS5BN"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-XWT8EWS5BN');
  // Function to request a wake lock
  async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

  // Function to release the wake lock
  function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

  // Initialize wake lock on page load
  async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
          await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
  }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
    requestWakeLock();
      } else {
    releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
    releaseWakeLock(); // Automatically release wake lock when page is hidden
  wakeLockToggle.checked = false; // Update checkbox state
      }
    });

  // Enable wake lock by default when the page loads
  window.addEventListener('load', initializeWakeLock);
</script>
</body>

</html>