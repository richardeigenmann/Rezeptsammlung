<!DOCTYPE HTML>
<html>

<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title>Lammhuft mit orientalischem Ragout</title>
	<link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
	<meta name="RCP-Speise-Kategorie" content="Aus dem Ofen">
	<meta name="RCP-Speise-Kategorie" content="Fleischgerichte">
	<meta name="RCP-Speise-Kategorie" content="Hauptgerichte">
	<meta name="RCP-Zutat" content="Lammhuft">
	<meta name="RCP-Zutat" content="Auberginen">
	<meta name="RCP-Zutat" content="Kartoffeln">
	<meta name="RCP-Zutat" content="Zwiebeln">
	<meta name="RCP-Zutat" content="Knoblauch">
	<meta name="RCP-Zutat" content="Oliven&ouml;l">
	<meta name="RCP-Zutat" content="Kreuzk&uuml;mmelpulver">
	<meta name="RCP-Zutat" content="Paprikapulver">
	<meta name="RCP-Zutat" content="Kurkuma">
	<meta name="RCP-Zutat" content="Tomaten">
	<meta name="RCP-Zutat" content="Zitronensaft">
	<meta name="RCP-Quelle" content="eBalance">
	<meta name="RCP-Bewertung" content="3 Sterne">
	<meta name="RCP-Kochwerkzeug" content="Gratinform">
<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-XWT8EWS5BN"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-XWT8EWS5BN');
</script>
<body>
	<h1>Lammhuft mit orientalischem Ragout</h1>
	<img src="Rcp343.jpg" alt="Lammhuft mit orientalischem Ragout" width="400" height="258">

	<table>
		<tbody>
			<tr>
				<td colspan="2"><strong>Zutaten f&uuml;r 4 Portionen:</strong></td>
			</tr>
			<tr>
				<td class="td-qty">480 g = 4 St&uuml;ck</td>
				<td><strong>Lammhuft</strong></td>
			</tr>
			<tr>
				<td class="td-qty">500 g = 2 St&uuml;ck</td>
				<td><strong>Auberginen</strong></td>
			</tr>
			<tr>
				<td class="td-qty"></td>
				<td><strong>Meersalz</strong></td>
			</tr>
			<tr>
				<td class="td-qty">800 g</td>
				<td><strong>festkochende Kartoffeln</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 El</td>
				<td><strong>Zwiebeln</strong></td>
			</tr>
			<tr>
				<td class="td-qty">2 Zehen</td>
				<td><strong>Knoblauch</strong></td>
			</tr>
			<tr>
				<td class="td-qty">2 El</td>
				<td><strong>Oliven&ouml;l</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 Kl</td>
				<td><strong>Kreuzk&uuml;mmelpulver</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 Kl</td>
				<td><strong>Paprikapulver</strong></td>
			</tr>
			<tr>
				<td class="td-qty">0.5 Kl</td>
				<td><strong>Kurkumapulver</strong></td>
			</tr>
			<tr>
				<td class="td-qty">2.5 dl</td>
				<td><strong>Gem&uuml;sebouillon</strong></td>
			</tr>
			<tr>
				<td class="td-qty">300 g</td>
				<td><strong>Tomaten</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 Prise</td>
				<td><strong>Pfeffer</strong></td>
			</tr>
			<tr>
				<td class="td-qty">2 El</td>
				<td><strong>Zitronensaft</strong></td>
			</tr>
		</tbody>
	</table>

	<h2>Zubereitung:</h2>
	<p>Die Lammhufte mit Salz und Pfeffer bestreuen und nach Belieben mit Rosmarin, Thymian und Oliven&ouml;l marinieren
	</p>
	<p>Auberginen in 1 cm W&uuml;rfel schneiden. In ein Sieb geben, mit viel Salz bestreuen und 30 Minuten Wasser ziehen
		lassen.</p>
	<p>Die Gratinform ausfetten und mit den in W&uuml;rfel geschnittenen gesch&auml;lten Kartoffeln, dem gehackten
		Zwiebelst&uuml;ck, den gepressten Knoblauchzehen und den gew&uuml;rfelten Tomaten f&uuml;llen.</p>
	<p>Die Auberginen gut abbrausen und abtropfen und ebenfalls zugeben.</p>
	<p>Die Gew&uuml;rze (Kreuzk&uuml;mmelpulver, Paprikapulver, Kurkumapulver, Pfeffer) ebenfalls zugeben, wie auch den
		Zitronensaft.</p>
	<p>Die Gem&uuml;semischung gut durchmischen und mit Gem&uuml;sebouillon &uuml;bergiessen. Oliven&ouml;l dar&uuml;ber
		geben.</p>
	<p>Den Ofen auf 200&deg;C vorheizen und das Gem&uuml;se 50 Minuten backen.</p>
	<p>ca. 15 Minuten vor dem Backende in der Grillpfanne die Lammhufte sch&ouml;n braten.</p>

	<h2>Quelle:</h2>
	<p>eBalance</p>

	<h2>Kalorien:</h2>
	<p>Pro Portion zu 617g = 457 kcal. 27% Protein, 41% Kohlenhydrate, 32% Fett</p>

	<h2>Bewertung:</h2>
	<p>Hat im Februar 2013 ganz gut geschmeckt. Das Gem&uuml;se war etwas al-dente. Deshalb habe ich die Backofen-Zeit
		von 40 auf 50 Minuten erh&ouml;ht.</p>

<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-PHL53P" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

<script>
  // Function to request a wake lock
  async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

  // Function to release the wake lock
  function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

  // Initialize wake lock on page load
  async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
          await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
  }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
    requestWakeLock();
      } else {
    releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
    releaseWakeLock(); // Automatically release wake lock when page is hidden
  wakeLockToggle.checked = false; // Update checkbox state
      }
    });

  // Enable wake lock by default when the page loads
  window.addEventListener('load', initializeWakeLock);
</script>
</body>

</html>