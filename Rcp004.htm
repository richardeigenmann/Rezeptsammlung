<!DOCTYPE HTML>
<html>

<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Pouletbr&uuml;stchen auf Safranrisotto mit Grilltomate</title>
  <link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
  <meta name="RCP-Speise-Kategorie" content="Hauptgerichte">
  <meta name="RCP-Speise-Kategorie" content="Fleischgerichte">
  <meta name="RCP-Zutat" content="Pouletbrust">
  <meta name="RCP-Zutat" content="Tomaten">
  <meta name="RCP-Zutat" content="Zwiebeln">
  <meta name="RCP-Zutat" content="Risotto-Reis">
  <meta name="RCP-Zutat" content="Safran">
  <meta name="RCP-Zutat" content="Parmesan">
  <meta name="RCP-Zutat" content="Bouillon">
  <meta name="RCP-Bewertung" content="4 Sterne">
  <meta name="RCP-Quelle" content="eBalance">
<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-XWT8EWS5BN"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-XWT8EWS5BN');
</script>
<body>
  <h1>Pouletbr&uuml;stchen auf Safranrisotto mit Grilltomate</h1>
  <img src="Rcp004.jpg" alt="Pouletbr&uuml;stchen auf Safranrisotto mit Grilltomate" width="400" height="287">

  <table>
    <tbody>
      <tr>
        <td colspan="2">
          <strong>Zutaten f&uuml;r 2 Personen:</strong>
        </td>
      </tr>
      <tr>
        <td class="td-qty">240 g</td>
        <td><strong>Pouletbrust</strong></td>
      </tr>
      <tr>
        <td class="td-qty">wenig</td>
        <td><strong>Gew&uuml;rzmischung f&uuml;r Gefl&uuml;gel</strong></td>
      </tr>
      <tr>
        <td class="td-qty"></td>
        <td><strong>Pfeffer</strong></td>
      </tr>
      <tr>
        <td class="td-qty">2</td>
        <td><strong>Tomaten</strong></td>
      </tr>
      <tr>
        <td class="td-qty">10 g</td>
        <td><strong>Italienische Kr&auml;uter</strong>, frisch, gehackt</td>
      </tr>
      <tr>
        <td class="td-qty">1</td>
        <td><strong>Eschalotte</strong> oder <strong>Zwiebel</strong></td>
      </tr>
      <tr>
        <td class="td-qty">125 g</td>
        <td><strong>Risotto-Reis</strong></td>
      </tr>
      <tr>
        <td class="td-qty">1/4 dl</td>
        <td><strong>Weisswein</strong></td>
      </tr>
      <tr>
        <td class="td-qty">2 dl</td>
        <td><strong>Gem&uuml;sebouillon</strong></td>
      </tr>
      <tr>
        <td class="td-qty">1 Brief</td>
        <td><strong>Safranpulver</strong></td>
      </tr>
      <tr>
        <td class="td-qty">10 g</td>
        <td><strong>Parmesan</strong>, gerieben</td>
      </tr>
      <tr>
        <td class="td-qty"></td>
        <td><strong>Meersalz</strong></td>
      </tr>
    </tbody>
  </table>



  <h2>Zubereitung:</h2>
  <p>Zubereitungszeit: 60 Minuten (wenn man herum tr&ouml;delt und nicht viel Hunger hat....)</p>

  <p>Die Tomaten haben am l&auml;ngsten. Folglich die Grillpfanne einheizen, den Strunk herausschneiden und die Tomaten
    halbieren. Tomatenh&auml;lften salzen und mit der Schnittfl&auml;che nach unten in der Grillpfanne braten.</p>

  <p>Die Eschalotte (oder Zwiebel) fein hacken und mit dem Risotto-Reis and&uuml;nsten.</p>
  <p>Mit Weisswein abl&ouml;schen und immer wieder Gem&uuml;sebouillon zugeben, bis der Reis die gew&uuml;nschte
    Garstufe erreicht hat.</p>
  <p>Safran beigeben.</p>

  <p>Die Pouletbr&uuml;stchen mit Gefl&uuml;gelw&uuml;rzmischung, Pfeffer und Salz w&uuml;rzen und in der Grillpfanne
    braten.</p>

  <p>Die Tomatenh&auml;lften mit Italienischen Kr&auml;utern bestreuen.</p>
  <p>Den Risotto kurz vor Schluss mit Parmesan verfeinern.</p>

  <h2>Kalorien:</h2>
  <p>Pro Person: 442 Kalorien (464g)</p>

  <h2>Quelle:</h2>
  <p>eBalance</p>

  <h2>Bewertung:</h2>
  <p>Schmeckt hervorragend! RE Jan 2013</p>

<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-PHL53P" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

<script>
  // Function to request a wake lock
  async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

  // Function to release the wake lock
  function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

  // Initialize wake lock on page load
  async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
          await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
  }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
    requestWakeLock();
      } else {
    releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
    releaseWakeLock(); // Automatically release wake lock when page is hidden
  wakeLockToggle.checked = false; // Update checkbox state
      }
    });

  // Enable wake lock by default when the page loads
  window.addEventListener('load', initializeWakeLock);
</script>
</body>

</html>