<!DOCTYPE HTML>
<html>

<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Zitronenpoulet</title>
    <link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
    <meta name="RCP-Speise-Kategorie" content="Hauptgerichte">
    <meta name="RCP-Speise-Kategorie" content="Fleischgerichte">
    <meta name="RCP-Speise-Kategorie" content="Leichtes Nachtessen">
    <meta name="RCP-Zutat" content="Mandelstifte">
    <meta name="RCP-Zutat" content="Peperoni">
    <meta name="RCP-Zutat" content="Zitronen">
    <meta name="RCP-Zutat" content="Oliven">
    <meta name="RCP-Zutat" content="Petersilie">
    <meta name="RCP-Zutat" content="Pouletbrust">
    <meta name="RCP-Zutat" content="Paprika">
    <meta name="RCP-Zutat" content="Weisswein">
    <meta name="RCP-Zutat" content="Bouillon">
    <meta name="RCP-Bewertung" content="4 Sterne">
    <meta name="RCP-Quelle" content="Blick am Abend">
</head>

<body>
    <h1>Zitronenpoulet</h1>
    <img src="Rcp516.jpg" alt="Zitronenpoulet" width="450" height="287" align="left" border="0">

    <table>
        <tbody>
            <tr>
                <td colspan="2"><strong>Zutaten f&uuml;r 4 Personen:</strong></td>
            </tr>
            <tr>
                <td class="td-qty">50g</td>
                <td><strong>Mandelstifte</strong></td>
            </tr>
            <tr>
                <td class="td-qty">1</td>
                <td><strong>rote Peperoncini</strong></td>
            </tr>
            <tr>
                <td class="td-qty">0.5</td>
                <td><strong>Zitrone, Schale von</strong></td>
            </tr>
            <tr>
                <td class="td-qty">100g</td>
                <td><strong>gr&uuml;ne, gef&uuml;llte Oliven</strong></td>
            </tr>
            <tr>
                <td class="td-qty"></td>
                <td><strong>Bratbutter oder Bratreme</strong></td>
            </tr>
            <tr>
                <td class="td-qty">2 El</td>
                <td><strong>glattbl&auml;ttrige Petersilie</strong></td>
            </tr>
            <tr>
                <td class="td-qty">4</td>
                <td><strong>Pouletbr&uuml;stchen, ca 500g</strong></td>
            </tr>
            <tr>
                <td class="td-qty">1 Tl</td>
                <td><strong>Salz</strong></td>
            </tr>
            <tr>
                <td class="td-qty">0.5 Tl</td>
                <td><strong>Paprika</strong></td>
            </tr>
            <tr>
                <td class="td-qty"></td>
                <td><strong>Pfeffer aus der M&uuml;hle</strong></td>
            </tr>
            <tr>
                <td class="td-qty">1 dl</td>
                <td><strong>Weisswein oder</strong></td>
            </tr>
            <tr>
                <td class="td-qty">1.5 dl</td>
                <td><strong>H&uuml;hnerbouillon</strong></td>
            </tr>
        </tbody>
    </table>

    <h2>Zubereitung f&uuml;r 4 Personen</h2>
    <p>Zubereiten: 30 Minuten</p>

    <p>Peperoncini in Ringe schneiden. Zitronenschale d&uuml;nn absch&auml;len und in feine Streifen schneiden. Oliven
        in Ringe schneiden.</p>

    <p>Garnitur: Mandelstifte in der Bratpfanne unter h&auml;ufigem R&uuml;hren hellbraun r&ouml;sten, herausnehmen.</p>

    <p>Peperoncini, Zitronenschale und Oliven in der Bratbutter anbraten. Mandeln und Petersile daruntermischen. Warm
        stellen.</p>

    <p>Poulet: Pouletbr&uuml;stchen w&uuml;rzen, in derselben Pfanne in der heissen Bratbutter 12 bis 15 Minuten braten,
        herausnehmen, warm stellen.</p>

    <p>Sauce: Bratsatz mit Weisswein und/oder Bouillon abl&ouml;schen, kurz einkochen, w&uuml;rzen. Poulet in die Sauce
        geben, kurz erhitzen, auf vorgew&auml;rmte Teller geben. Garnitur dar&uuml;ber verteilen.</p>

    <p>Dazu passen gekochte Tiefk&uuml;hlerbsen und Reis oder Kartoffelgratin.</p>

    <h2>Quelle:</h2>
    <p>Blick am Abend</p>

    <h2>Bewertung:</h2>
    <p>Gelang ganz ausgezeichnet! RE, 16.7.2018</p>

<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<script async src="https://www.googletagmanager.com/gtag/js?id=G-XWT8EWS5BN"></script>
<script>
  // Function to request a wake lock
  async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

  // Function to release the wake lock
  function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

  // Initialize wake lock on page load
  async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
          await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
  }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
    requestWakeLock();
      } else {
    releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
    releaseWakeLock(); // Automatically release wake lock when page is hidden
  wakeLockToggle.checked = false; // Update checkbox state
      }
    });

  // Enable wake lock by default when the page loads
  window.addEventListener('load', initializeWakeLock);
</script></body>

</html>