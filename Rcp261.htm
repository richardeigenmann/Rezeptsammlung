<!DOCTYPE HTML>
<html>

<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title>Birnen in Ingwerwein</title>
	<link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
	<meta name="RCP-Speise-Kategorie" content="Desserts">
	<meta name="RCP-Speise-Kategorie" content="Vegetarisch">
	<meta name="RCP-Zutat" content="Birnen">
	<meta name="RCP-Zutat" content="Rotwein">
	<meta name="RCP-Zutat" content="Zimtstangen">
	<meta name="RCP-Zutat" content="Assugrin">
	<meta name="RCP-Zutat" content="Ingwer, kandiert">
	<meta name="RCP-Zutat" content="Maizena">
	<meta name="RCP-Zutat" content="Pistazien">
	<meta name="RCP-Bewertung" content="3 Sterne">
	<meta name="RCP-Quelle" content="Herbert Eigenmann">
<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-XWT8EWS5BN"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-XWT8EWS5BN');
</script>
<body>
	<h1>Birnen in Ingwerwein</h1>
	<img src="Rcp261.jpg" alt="Birnen in Ingwerwein" width="400" height="301">

	<table>
		<tbody>
			<tr>
				<td colspan="2"><strong>Zutaten f&uuml;r 4 Personen:</strong></td>
			</tr>
			<tr>
				<td class="td-qty">500 g = 4</td>
				<td><strong>Birnen</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1/4 l</td>
				<td><strong>Rotwein</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1/2</td>
				<td><strong>Zimtstengel</strong></td>
			</tr>
			<tr>
				<td class="td-qty">2 TL</td>
				<td><strong>Assugrin</strong></td>
			</tr>
			<tr>
				<td class="td-qty">3</td>
				<td><strong>St&uuml;ckchen Ingwer, kandiert</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 TL</td>
				<td><strong>Maispuder</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 EL</td>
				<td><strong>Pistazien</strong></td>
			</tr>
		</tbody>
	</table>

	<h2>Zubereitung:</h2>
	<p>Zubereitungszeit: 10 Minuten
		<br>Kochzeit: 10 Minuten
		<br>K&uuml;hlzeit: 10 Minuten</p>

	<p>Birnen sch&auml;len, halbieren, entkernen.</p>
	<p>Mit Rotwein, Zimtstengel und Assugrin knapp weiter kochen.</p>
	<p>Ingwer hacken und zuf&uuml;gen. Die Birnen im Wein abk&uuml;hlen lassen.</p>
	<p>Die Birnen mit der W&ouml;lbung nach oben in sch&ouml;ne Schalen legen.</p>
	<p>Maispuder im erkalteten Wein gut verr&uuml;hren. Nochmals aufkochen, bis der Wein leicht s&auml;mig ist. Nochmals
		etwas abk&uuml;hlen lassen und &uuml;ber die Birnen giessen.</p>
	<p>Nach Belieben mit gehackten Pistazien bestreuen. Die Pistazien zum Sch&auml;len kurz mit kochendem Wasser
		&uuml;berbr&uuml;hen, dann die braunen H&auml;utchen entfernen.</p>

	<h2>Kalorien:</h2>
	<p>Pro Person: 97 Kalorien, 406 Joules</p>

	<h2>Quelle:</h2>
	<p>Herbert Eigenmann, Code: BII</p>
	<p><a href="Rcp259.htm">Birnen nach Beaujolais-Art</a></p>

	<h2>Bewertung:</h2>
	<p>Ergibt eine sehr schmackhaftes Dessert. Besonders sch&ouml;ne Zimt und Ingwernote. Mit dem Assugrin ist das
		vermutlich auch sehr leicht. RE 20.4.2009</p>

<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-PHL53P" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

<script>
  // Function to request a wake lock
  async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

  // Function to release the wake lock
  function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

  // Initialize wake lock on page load
  async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
          await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
  }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
    requestWakeLock();
      } else {
    releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
    releaseWakeLock(); // Automatically release wake lock when page is hidden
  wakeLockToggle.checked = false; // Update checkbox state
      }
    });

  // Enable wake lock by default when the page loads
  window.addEventListener('load', initializeWakeLock);
</script>
</body>

</html>