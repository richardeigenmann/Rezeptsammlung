<!DOCTYPE HTML>
<html>

<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title>&Uuml;berbackene Lauch Schinkenrollen</title>
	<link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
	<meta name="RCP-Speise-Kategorie" content="All time favorite">
	<meta name="RCP-Speise-Kategorie" content="Aus dem Ofen">
	<meta name="RCP-Speise-Kategorie" content="Gratins">
	<meta name="RCP-Speise-Kategorie" content="Hauptgerichte">
	<meta name="RCP-Zutat" content="Lauch">
	<meta name="RCP-Zutat" content="Butter">
	<meta name="RCP-Zutat" content="Schinkenscheiben">
	<meta name="RCP-Zutat" content="Mehl">
	<meta name="RCP-Zutat" content="Rahm">
	<meta name="RCP-Zutat" content="Reibk&auml;se">
	<meta name="RCP-Bewertung" content="4 Sterne">
	<meta name="RCP-Quelle" content="Betty Bossi">
</head>

<body>
	<h1>&Uuml;berbackene Lauch Schinkenrollen</h1>
	<img src="Rcp358.jpg" alt="&Uuml;berbackene Lauch Schinkenrollen" width="400" height="304">

	<table>
		<tbody>
			<tr>
				<td colspan="2"><strong>Zutaten f&uuml;r 2 Personen:</strong></td>
			</tr>
			<tr>
				<td class="td-qty">4 St&uuml;ck = 400g</td>
				<td><strong>Lauchstengel</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1/2 l</td>
				<td><strong>Salzwasser</strong></td>
			</tr>
			<tr>
				<td class="td-qty">20 g</td>
				<td><strong>Butter</strong></td>
			</tr>
			<tr>
				<td class="td-qty">20 g</td>
				<td><strong>Mehl</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1/2 dl</td>
				<td><strong>Kaffeerahm</strong></td>
			</tr>
			<tr>
				<td class="td-qty">30 g</td>
				<td><strong>geriebener Sbrinz</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 Prise</td>
				<td><strong>Muskat</strong></td>
			</tr>
			<tr>
				<td class="td-qty">wenig</td>
				<td><strong>Pfeffer</strong></td>
			</tr>
			<tr>
				<td class="td-qty">4 Tranchen = 150 g</td>
				<td><strong>Modelschinken</strong></td>
			</tr>
		</tbody>
	</table>

	<h2>Zubereitung:</h2>
	<p>Die Lauchstengel r&uuml;sten: die z&auml;hen Bl&auml;tter entfernen, gut waschen und in 10 cm lange St&uuml;cke
		scheiden.</p>
	<p>Im Salzwasser 20 Minuten kochen (Dampfkochtopf, 2. Ring 5 Minuten). 2dl Kochwasser zur&uuml;ckbehalten.</p>
	<p>Eine Gratinform mit Butter gut ausschmieren.</p>
	<p>Die Butter schmelzen und Mehl dazu r&uuml;hren. Die 2dl Gem&uuml;sekochwasser hineingiessen.</p>
	<p>Den Kaffeerahm dazugiessen, aufkochen und 15 Minuten kochen lassen. Gelegentlich r&uuml;hren.</p>
	<p>Mit dem Bamix durchquirlen um sicher zu sein, dass es keine Kl&uuml;mpchen hat.</p>
	<p>Sbrinz darunter mischen, mit Pfeffer und Muskat abschmecken.</p>
	<p>Die Lauchstangen einzeln oder zu zweit in die Schinkenscheiben wickeln und in die Gratinform legen.</p>
	<p>Mit der Sauce &uuml;berziehen und im Ofen bei 220&deg;C ca. 20 Minuten &uuml;berbacken.</p>


	<h2>Quelle:</h2>
	<p>Betty Bossi, Schlank, Fit und Gesund, Seite 86</p>

	<h2>Bewertung:</h2>
	<p>Ganz tolles Rezept. RE 21.10.2010</p>

<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<script async src="https://www.googletagmanager.com/gtag/js?id=G-XWT8EWS5BN"></script>
<script>
  // Function to request a wake lock
  async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

  // Function to release the wake lock
  function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

  // Initialize wake lock on page load
  async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
          await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
  }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
    requestWakeLock();
      } else {
    releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
    releaseWakeLock(); // Automatically release wake lock when page is hidden
  wakeLockToggle.checked = false; // Update checkbox state
      }
    });

  // Enable wake lock by default when the page loads
  window.addEventListener('load', initializeWakeLock);
</script>
</body>

</html>