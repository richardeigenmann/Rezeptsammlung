<!DOCTYPE HTML>
<html>

<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Nussauflauf</title>
  <link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
  <meta name="RCP-Speise-Kategorie" content="Aus dem Ofen">
  <meta name="RCP-Speise-Kategorie" content="Aufl&auml;ufe">
  <meta name="RCP-Speise-Kategorie" content="Vegetarisch">
  <meta name="RCP-Zutat" content="Zwiebeln">
  <meta name="RCP-Zutat" content="Peperoni">
  <meta name="RCP-Zutat" content="N&uuml;sse">
  <meta name="RCP-Zutat" content="Brot">
  <meta name="RCP-Zutat" content="Knoblauch">
  <meta name="RCP-Zutat" content="Gew&uuml;rzmischung">
  <meta name="RCP-Zutat" content="Currypulver">
  <meta name="RCP-Zutat" content="Pelati">
  <meta name="RCP-Zutat" content="Eier">
  <meta name="RCP-Bewertung" content="4 Sterne">
  <meta name="RCP-Quelle" content="Bath Calendar">
<!-- Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
  new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
  j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
  'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
  })(window,document,'script','dataLayer','GTM-PHL53P');</script>
<!-- End Google Tag Manager -->
</head>
<body>
  <h1>Nussauflauf</h1>
  <img src="Rcp153.jpg" alt="Nussauflauf" width="450" height="341">

  <table>
    <tbody>
      <tr>
        <td colspan="2">
          <strong>Zutaten:</strong>
        </td>
      </tr>
      <tr>
        <td class="td-qty">2</td>
        <td>mittlere <strong>Zwiebeln</strong></td>
      </tr>
      <tr>
        <td class="td-qty">1</td>
        <td><strong>Peperoni</strong></td>
      </tr>
      <tr>
        <td class="td-qty"></td>
        <td><strong>Bratfett</strong></td>
      </tr>
      <tr>
        <td class="td-qty">225 g</td>
        <td><strong>gemischte N&uuml;sse</strong></td>
      </tr>
      <tr>
        <td class="td-qty">85 g</td>
        <td><strong>Brotkrumen</strong></td>
      </tr>
      <tr>
        <td class="td-qty">2</td>
        <td><strong>Knoblauchzehen</strong></td>
      </tr>
      <tr>
        <td class="td-qty">1 El</td>
        <td><strong>gehackte Kr&auml;uter</strong></td>
      </tr>
      <tr>
        <td class="td-qty">1 Tl</td>
        <td><strong>Currypulver</strong></td>
      </tr>
      <tr>
        <td class="td-qty">425 g</td>
        <td><strong>Pelati</strong></td>
      </tr>
      <tr>
        <td class="td-qty"></td>
        <td><strong>Salz und Pfeffer</strong></td>
      </tr>
      <tr>
        <td class="td-qty">1</td>
        <td><strong>Ei</strong></td>
      </tr>
    </tbody>
  </table>



  <h2>Mise en place:</h2>
  <p>Zwiebeln fein schneiden</p>
  <p>Peperoni w&uuml;rfeln</p>
  <p>N&uuml;sse zerkleinern</p>
  <p>Brot zerkleinern</p>
  <p>Knoblauch sch&auml;len</p>
  <p>Falls frische Tomaten zur Anwendung kommen: sch&auml;len und in kleine W&uuml;rfel schneiden</p>
  <p>Ei verquirlen</p>
  <p>Ofenform fetten</p>
  <p>Ofen auf 220&deg;C vorheizen</p>


  <h2>Zubereitung:</h2>

  <p>Vorbereiten: 20 Minuten, Backzeit: 40 Minuten</p>

  <p>Die Zwiebeln weich d&uuml;nsten.</p>
  <p>Peperoni zugeben und ein paar Minuten mitd&auml;mpfen</p>
  <p>N&uuml;sse dazu geben sowie die Brotkrumen, den gepressten Knoblauch, das Currypulver und die Kr&auml;uter. Tomaten
    beigeben und mit Salz und Pfeffer abschmecken.</p>
  <p>Das Ei dazu mischen und das ganze in der Ofenform bei 220&deg;C backen bis es eine goldige Farbe annimmt.</p>

  <h2>Heinweis:</h2>
  <p>Heiss opder Kalt servieren</p>
  <p>Ein Salat passt gut dazu.</p>
  <p>Kann auch eingefroren werden.</p>

  <h2>Quelle:</h2>
  <p>Bath Calendar</p>

  <h2>Bewertung:</h2>
  <p>Very nice but quite filling, RE 12.3.2000. Done again on 9.3.2004 Turned out very nicely. I exaggerated the
    ingredients a little because we had 5 people. It could have done with some more Tomatoes and more egg to bind.</p>

<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-PHL53P" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

<script>
  // Function to request a wake lock
  async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

  // Function to release the wake lock
  function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

  // Initialize wake lock on page load
  async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
          await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
  }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
    requestWakeLock();
      } else {
    releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
    releaseWakeLock(); // Automatically release wake lock when page is hidden
  wakeLockToggle.checked = false; // Update checkbox state
      }
    });

  // Enable wake lock by default when the page loads
  window.addEventListener('load', initializeWakeLock);
</script>
</body>

</html>