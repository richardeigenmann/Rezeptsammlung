<!DOCTYPE HTML>
<html>

<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title>Kiwi Jubilee</title>
	<link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
	<meta name="RCP-Speise-Kategorie" content="Desserts">
	<meta name="RCP-Speise-Kategorie" content="Vegetarisch">
	<meta name="RCP-Zutat" content="Orangen">
	<meta name="RCP-Zutat" content="Kiwis">
	<meta name="RCP-Zutat" content="Zucker">
	<meta name="RCP-Zutat" content="Rum">
	<meta name="RCP-Zutat" content="Vanilleglace">
	<meta name="RCP-Bewertung" content="4 Sterne">
	<meta name="RCP-Quelle" content="Herbert Eigenmann">
<!-- Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
  new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
  j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
  'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
  })(window,document,'script','dataLayer','GTM-PHL53P');</script>
<!-- End Google Tag Manager -->
</head>
<body>
	<h1>Kiwi Jubilee</h1>
	<img src="Rcp361.jpg" alt="Kiwi Jubilee" width="400" height="285">

	<table>
		<tbody>
			<tr>
				<td colspan="2"><strong>Zutaten:</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1</td>
				<td><strong>Orange (Saft und Schale)</strong></td>
			</tr>
			<tr>
				<td class="td-qty">4</td>
				<td><strong>Kiwis</strong></td>
			</tr>
			<tr>
				<td class="td-qty">4 EL</td>
				<td><strong>Zucker</strong></td>
			</tr>
			<tr>
				<td class="td-qty">3 EL</td>
				<td><strong>Rum</strong></td>
			</tr>
			<tr>
				<td class="td-qty">400 g</td>
				<td><strong>Vanille Rahmglace</strong></td>
			</tr>
		</tbody>
	</table>

	<h2>Zubereitung:</h2>
	<p>Orange gut waschen. Schale abreiben. 4 EL Saft auspressen.</p>
	<p>Kiwis kurz in kochendes Wasser tauchen, sch&auml;len und in 3 mm dicke Scheiben schneiden.</p>
	<p>Orangenschale, -saft, und Zucker aufkochen; Kiwis darin erhitzen.</p>
	<p>Rum separat erhitzen und zu den Kiwis giessen. Anz&uuml;nden. &Uuml;ber Vanille-Eis servieren.</p>
	<p>Wichtig: die Kiwis sollten nur kurz aufgekocht werden, damit sie ihre sch&ouml;ne gr&uuml;ne Farbe nicht
		verlieren.</p>

	<h2>Quelle:</h2>
	<p>Herbert Eigenmann, Code: KWJ</p>

	<h2>Bewertung:</h2>
	<p>Ergab am 18.5.2009 ein tolles Dessert. Was das mit dem aufkochen der Kiwis f&uuml;r das sch&auml;len soll ist mir
		nicht klar. M&uuml;ssen da Enzyme abgekillt werden? Warum? Wird das Glace sonst sauer? Hat jedenfalls toll
		geschmeckt. Flambieren ist halt eine Kunst. Vielleicht habe ich meinen Rum in der Mikrowelle schon so heiss
		aufgeheizt, dass kein Alkohol mehr drin war? Meine Empfehlung: mit Mampour aus S&uuml;dafrika gibt es keine so
		peinlichen Szenen. RE</p>

<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-PHL53P" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

<script>
  // Function to request a wake lock
  async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

  // Function to release the wake lock
  function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

  // Initialize wake lock on page load
  async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
          await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
  }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
    requestWakeLock();
      } else {
    releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
    releaseWakeLock(); // Automatically release wake lock when page is hidden
  wakeLockToggle.checked = false; // Update checkbox state
      }
    });

  // Enable wake lock by default when the page loads
  window.addEventListener('load', initializeWakeLock);
</script></body>

</html>