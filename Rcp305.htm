<!DOCTYPE HTML>
<html>

<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title>Gugelhopf mit Nussf&uuml;llung</title>
	<link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
	<meta name="RCP-Speise-Kategorie" content="Cakes">
	<meta name="RCP-Speise-Kategorie" content="Vegetarisch">
	<meta name="RCP-Zutat" content="Mehl">
	<meta name="RCP-Zutat" content="Hefe">
	<meta name="RCP-Zutat" content="Zucker">
	<meta name="RCP-Zutat" content="Milch">
	<meta name="RCP-Zutat" content="Butter">
	<meta name="RCP-Zutat" content="Eier">
	<meta name="RCP-Zutat" content="Zitronen">
	<meta name="RCP-Zutat" content="Gemahlene Haseln&uuml;sse">
	<meta name="RCP-Zutat" content="Puderzucker">
	<meta name="RCP-Bewertung" content="3 Sterne">
	<meta name="RCP-Kochwerkzeug" content="Gugelhopfform">
	<meta name="RCP-Quelle" content="Herbert Eigenmann">
<!-- Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
  new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
  j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
  'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
  })(window,document,'script','dataLayer','GTM-PHL53P');</script>
<!-- End Google Tag Manager -->
</head>
<body>
	<h1>Gugelhopf mit Nussf&uuml;llung</h1>
	<img src="Rcp305.jpg" alt="Gugelhopf mit Nussf&uuml;llung" width="400" height="346">

	<table>
		<tbody>
			<tr>
				<td colspan="2"><strong>Zutaten:</strong></td>
			</tr>
			<tr>
				<td colspan=2><strong>Teig:</strong></td>
			</tr>
			<tr>
				<td class="td-qty">500 g</td>
				<td><strong>Mehl</strong></td>
			</tr>
			<tr>
				<td class="td-qty">20 g</td>
				<td><strong>Hefe</strong></td>
			</tr>
			<tr>
				<td class="td-qty">100 g</td>
				<td><strong>Zucker</strong></td>
			</tr>
			<tr>
				<td class="td-qty">3 dl</td>
				<td><strong>Milch</strong></td>
			</tr>
			<tr>
				<td class="td-qty">150 g</td>
				<td><strong>Butter</strong></td>
			</tr>
			<tr>
				<td class="td-qty">2</td>
				<td><strong>Eier</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1</td>
				<td><strong>Eigelb</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1/2</td>
				<td><strong>Zitronenschale</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1/4 TL</td>
				<td><strong>Salz</strong></td>
			</tr>
			<tr>
				<td colspan=2><strong>F&uuml;llung:</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1</td>
				<td><strong>Eiweiss</strong></td>
			</tr>
			<tr>
				<td class="td-qty">150 g</td>
				<td><strong>gemahlene Haseln&uuml;sse (od. Baumn&uuml;sse od. Mandlen)</strong></td>
			</tr>
			<tr>
				<td class="td-qty">100 g</td>
				<td><strong>Zucker</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 EL</td>
				<td><strong>Zitronensaft</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 dl</td>
				<td><strong>Milch</strong></td>
			</tr>
			<tr>
				<td colspan=2><strong>Zum Besieben:</strong></td>
			</tr>
			<tr>
				<td class="td-qty"></td>
				<td><strong>Puderzucker</strong></td>
			</tr>
		</tbody>
	</table>

	<h2>Zubereitung:</h2>
	<p>Gugelhopfform 22 cm &Oslash;, 2,5 l Inhalt</p>
	<p>Teig:</p>
	<p>Hefe mit 1 EL Zucker fl&uuml;ssig r&uuml;hren. Milch erw&auml;rmen; Butter darin schmelzen. Eier und das einzelne
		Eigelb zerquirlen. Zitronenschale abreiben. Mehl, Salz und den restliche Zucker sieben. Dann alles zu einem
		glatten Teig verarbeiten und diesen klopfen, bis er Blasen zeigt. Teig an einem warmen Ort ums Doppelte aufgehen
		lassen.</p>
	<p>F&uuml;llung:</p>
	<p>Eiweiss zerquirlen, mit den &uuml;brigen Zutaten zur F&uuml;llung vermischen. Ofen auf gute Mittelhitze
		(200&deg;C) vorheizen. Form sorgf&auml;ltig befetten und mit Paniermehl ausstreuen. Die H&auml;lfte des Teigs in
		die Form geben. F&uuml;llung dar&uuml;ber verteilen. Mit dem restlichen Teig bedecken. Teig mit einer Gabel
		S-f&ouml;rmig mischen, bis alles leicht vermischt ist.</p>
	<p>Gugelhopf 20 Minuten backen. Dann die Temperatur auf Mittelhitze (180&deg;C) reduzieren und den Gugelhopf weitere
		45 - 50 Minuten fertig backen. Den ausgek&uuml;hlten Gugelhopf vor dem Servieren mit Puderzucker besieben. Statt
		Frischhefe kann 1 Beutel Trockenhefe verwendet werden.</p>

	<h2>Quelle:</h2>
	<p>Herbert Eigenmann, Code: GGN</p>

	<h2>Bewertung:</h2>
	<p>13.8.2008 RE: Das mit dem mischen muss ich wohl noch etwas &uuml;ben. Es gab auch etwas mehr als in meine
		Gugelhopfform passte. Schmeckte OK. Die Nussf&uuml;llung hatte einen starke Zitronennote die ich gut fand. Der
		Hefeteig war aber etwas "hefig". Beim N&auml;chsten mal die Backanleitung genauer beachten.</p>
	<p>Jacob Berg: "I would buy this cake in a bakery". - 4 Sterne</p>

<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-PHL53P" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

<script>
  // Function to request a wake lock
  async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

  // Function to release the wake lock
  function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

  // Initialize wake lock on page load
  async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
          await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
  }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
    requestWakeLock();
      } else {
    releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
    releaseWakeLock(); // Automatically release wake lock when page is hidden
  wakeLockToggle.checked = false; // Update checkbox state
      }
    });

  // Enable wake lock by default when the page loads
  window.addEventListener('load', initializeWakeLock);
</script>
</body>

</html>