<!DOCTYPE HTML>
<html>

<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title>Schweinebraten Provencale</title>
	<link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
	<meta name="RCP-Speise-Kategorie" content="Fleischgerichte">
	<meta name="RCP-Speise-Kategorie" content="Hauptgerichte">
	<meta name="RCP-Speise-Kategorie" content="Aus dem Ofen">
	<meta name="RCP-Kochwerkzeug" content="Bratenthermometer">
	<meta name="RCP-Zutat" content="Knoblauch">
	<meta name="RCP-Zutat" content="Schinken">
	<meta name="RCP-Zutat" content="Weisswein">
	<meta name="RCP-Zutat" content="Zitronen">
	<meta name="RCP-Zutat" content="Oliven&ouml;l">
	<meta name="RCP-Zutat" content="Zwiebeln">
	<meta name="RCP-Zutat" content="Fr&uuml;hlingszwiebeln">
	<meta name="RCP-Zutat" content="Lorbeerbl&auml;tter">
	<meta name="RCP-Zutat" content="Thymian">
	<meta name="RCP-Zutat" content="Kresse">
	<meta name="RCP-Bewertung" content="4 Sterne">
	<meta name="RCP-Quelle" content="Herbert Eigenmann">
</head>

<body>
	<h1>Schweinebraten Provencale</h1>
	<img src="Rcp133.jpg" alt="Schweinebraten Provencale" width="400" height="261">

	<table>
		<tbody>
			<tr>
				<td colspan="2"><strong>Zutaten:</strong></td>
			</tr>
			<tr>
				<td class="td-qty">3</td>
				<td><strong>Knoblauchzehen</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 kg</td>
				<td><strong>Schweinebraten</strong></td>
			</tr>
			<tr>
				<td class="td-qty">2 dl</td>
				<td>trockener <strong>Weisswein</strong></td>
			</tr>
			<tr>
				<td class="td-qty">2</td>
				<td><strong>Zitronen</strong></td>
			</tr>
			<tr>
				<td class="td-qty">60 g</td>
				<td><strong>Oliven&ouml;l</strong></td>
			</tr>
			<tr>
				<td class="td-qty">3</td>
				<td><strong>Zwiebeln</strong></td>
			</tr>
			<tr>
				<td class="td-qty">oder 8</td>
				<td><strong>Fr&uuml;hlingszwiebeln</strong></td>
			</tr>
			<tr>
				<td class="td-qty">2</td>
				<td><strong>Lorbeerbl&auml;tter</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 EL</td>
				<td>getrockneter <strong>Thymian</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 TL</td>
				<td><strong>Salz</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1/2 TL</td>
				<td><strong>Pfeffer</strong></td>
			</tr>
			<tr>
				<td class="td-qty"></td>
				<td><strong>Kresse</strong>(optional)</td>
			</tr>
		</tbody>
	</table>

	<h2>Zubereitung:</h2>
	<p><strong>Marinieren:</strong> Knoblauch in Scheiben schneiden und unter das Fett des Bratens einf&uuml;gen. Den
		Braten in einen (dichten) Beutel geben und Wein, Zitronensaft, Oliven&ouml;l, Zwiebeln, Lorbeerbl&auml;tter,
		Thymian, Salz und Pfeffer dazugeben. Den Beutel gut verschliessen und 24h in den K&uuml;hlschrank geben.
		Zwischendurch kehren.</p>
	<br>
	<p>Den Braten aus dem Beutel entfernen und in einen Br&auml;ter geben. 1 Stunde bei Zimmertemperatur ruhen lassen.
		Die Marinade durch ein Sieb geben und beiseite stellen.</p>
	<br>
	<p>Im auf 180&deg;C vorgeheizten Ofen 80 Minuten garen. Dabei 2 mal mit Marinade betr&auml;ufeln. Vorzugsweise mit
		einem Bratenthermometer die Kerntemperatur messen.</p>
	<p>Den Braten auf dem Tranchierbrett ruhen lassen w&auml;hrend die Sauce zubereitet wird.</p>
	<p>Die Marinade mit dem Bratensatz aufk&ouml;cheln und in die Sauciere geben.</p>
	<p>Fleisch tranchieren und anrichten.</p>

	<h2>Quelle:</h2>
	<p>Herbert Eigenmann, Code: SWP</p>

	<h2>Bewertung:</h2>
	<p>Since I was only cooking for two I got a tiny litte rolled roast. This did not produce a lot of sauce. So I
		reduced the marinate that tasted strongly of lemon and added a good measure of port wine. (Obviously not the
		vintage stuff; I got the Sandeman from the top shelf of my local discounter.) This turned out absolutely divine!
		Sandra took the picture. RE 31.12.2009</p>


<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<script async src="https://www.googletagmanager.com/gtag/js?id=G-XWT8EWS5BN"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-XWT8EWS5BN');
  // Function to request a wake lock
  async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

  // Function to release the wake lock
  function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

  // Initialize wake lock on page load
  async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
          await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
  }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
    requestWakeLock();
      } else {
    releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
    releaseWakeLock(); // Automatically release wake lock when page is hidden
  wakeLockToggle.checked = false; // Update checkbox state
      }
    });

  // Enable wake lock by default when the page loads
  window.addEventListener('load', initializeWakeLock);
</script>
</body>

</html>