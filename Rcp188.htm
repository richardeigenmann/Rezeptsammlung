<!DOCTYPE HTML>
<html>

<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Kandierter Ingwer</title>
    <link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
    <meta name="RCP-Speise-Kategorie" content="Vegetarisch">
    <meta name="RCP-Zutat" content="Ingwer">
    <meta name="RCP-Zutat" content="Zucker">
    <meta name="RCP-Bewertung" content="4 Sterne">
    <meta name="RCP-Quelle" content="Sandra Keller">
</head>

<body>
    <h1>Kandierter Ingwer</h1>
    <img src="Rcp188.jpg" alt="Kandierter Ingwer" width="400" height="319">

    <table>
        <tbody>
            <tr>
                <td colspan="2"><strong>Zutaten:</strong></td>
            </tr>
            <tr>
                <td class="td-qty">mehrere</td>
                <td><strong>Ingwerknollen</strong></td>
            </tr>
            <tr>
                <td class="td-qty"></td>
                <td><strong>Zucker</strong></td>
            </tr>
        </tbody>
    </table>

    <h2>Zubereitung:</h2>
    <p>Ingwerknollen sch&auml;len und in W&uuml;rfel von 1cm Kantenl&auml;nge schneiden.</p>
    <p>W&uuml;rfel in eine Feuerfeste Form geben und mit Wasser knapp bedecken.</p>
    <p>Einige L&ouml;ffel Zucker dar&uuml;ber geben.</p>
    <p>Aufkochen und 10-20 Minuten k&ouml;cheln.</p>
    <p>Abk&uuml;hlen lassen und zugedeckt 24 Stunden stehen lassen.</p>
    <p>Mehr Zucker dar&uuml;ber streuen.</p>
    <p>Aufw&auml;rmen, bis sich der Zucker aufl&ouml;st.</p>
    <p>Erneut abk&uuml;hlen und 24 Stunden in Zuckersirup stehen lassen.</p>
    <p>Mindestens 3 Zyklen durchf&uuml;hren. Immer genug Zucker beigeben, bis an die S&auml;ttigungsgrenze.</p>
    <p>Wiederholen bis die W&uuml;rfel dunkel und glasig werden.</p>
    <p>Sirup ableeren und W&uuml;rfel abtrocknen lassen.</p>
    <p>Auf einem mit Backtrennpapier belegten Backblech ausbreiten und bei 60Â°C mit Umluft 30 Minuten bis 2 Stunden
        trocknen. Die Oberfl&auml;che soll weitgehend trocken sein.</p>
    <p>In einer Schale mit Zucker wenden und in eine Vorratsdose f&uuml;llen.</p>

    <h2>Tipps:</h2>
    <p>Sandra macht das jeweils in der Mikrowelle. Dabei muss man beachten, dass man das Geschirr nicht zu fest
        f&uuml;llt sonst kocht es &uuml;ber. Obwohl das Rezept aufwendig erscheint braucht man doch nicht jeden Tag viel
        Zeit. Und das Ergebnis lohnt sich.</p>
    <p>Der Sirup mit kohlens&auml;urehaltigem Mineralwasser schmeckt am Schluss auch fein.</p>

    <h2>Quelle:</h2>
    <p>Sandra Keller</p>

    <h2>Bewertung:</h2>
    <p>Schmeckt ganz toll. RE Nov 2012</p>

<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-47341387-3', 'auto');
  ga('send', 'pageview');

    let wakeLock = null; // Variable to hold the wake lock instance
    const statusText = document.getElementById('status');
    const wakeLockToggle = document.getElementById('wakeLockToggle');

    // Function to request a wake lock
    async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
          //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
          wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

    // Function to release the wake lock
    function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

    // Initialize wake lock on page load
    async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
        await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
    }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
        requestWakeLock();
      } else {
        releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
        releaseWakeLock(); // Automatically release wake lock when page is hidden
        wakeLockToggle.checked = false; // Update checkbox state
      }
    });

    // Enable wake lock by default when the page loads
    window.addEventListener('load', initializeWakeLock);
</script>
</body>

</html>