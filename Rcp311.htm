<!DOCTYPE HTML>
<html>

<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title>Schokoladentorte</title>
	<link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
	<meta name="RCP-Speise-Kategorie" content="Cakes">
	<meta name="RCP-Speise-Kategorie" content="Vegetarisch">
	<meta name="RCP-Zutat" content="Mehl">
	<meta name="RCP-Zutat" content="Schokolade">
	<meta name="RCP-Zutat" content="Margarine">
	<meta name="RCP-Zutat" content="Butter">
	<meta name="RCP-Zutat" content="Puderzucker">
	<meta name="RCP-Zutat" content="Eier">
	<meta name="RCP-Zutat" content="Rum">
	<meta name="RCP-Zutat" content="Kakaopulver">
	<meta name="RCP-Zutat" content="Kaffeepulver">
	<meta name="RCP-Zutat" content="Schokoladenraspel">
	<meta name="RCP-Kochwerkzeug" content="Springform 26cm">
	<meta name="RCP-Bewertung" content="4 Sterne">
	<meta name="RCP-Quelle" content="Herbert Eigenmann">
<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-XWT8EWS5BN"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-XWT8EWS5BN');
</script>
<body>
	<h1>Schokoladentorte</h1>
	<img src="Rcp311.jpg" alt="Schokoladentorte" width="400" height="235">

	<table>
		<tbody>
			<tr>
				<td colspan="2"><strong>Zutaten:</strong></td>
			</tr>
			<tr>
				<td class="td-qty">90 g</td>
				<td><strong>Mehl</strong></td>
			</tr>
			<tr>
				<td class="td-qty">5</td>
				<td><strong>Eier</strong></td>
			</tr>
			<tr>
				<td class="td-qty">90 g</td>
				<td><strong>Zucker</strong></td>
			</tr>
			<tr>
				<td class="td-qty">30 g</td>
				<td><strong>Butter</strong></td>
			</tr>
			<tr>
				<td class="td-qty">100 g</td>
				<td><strong>Edelbitter-Schokolade</strong></td>
			</tr>
			<tr>
				<td class="td-qty">100 g</td>
				<td><strong>Mokkaschokolade</strong></td>
			</tr>
			<tr>
				<td class="td-qty">50 g</td>
				<td><strong>Pflanzenfett</strong></td>
			</tr>
			<tr>
				<td class="td-qty">250 g</td>
				<td><strong>Butter</strong></td>
			</tr>
			<tr>
				<td class="td-qty">150 g</td>
				<td><strong>Puderzucker</strong></td>
			</tr>
			<tr>
				<td class="td-qty">3 EL</td>
				<td><strong>Rum</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 EL</td>
				<td><strong>Kakao</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 EL</td>
				<td><strong>Kaffeepulver</strong></td>
			</tr>
			<tr>
				<td class="td-qty">150 g</td>
				<td><strong>Schokoladenraspel</strong></td>
			</tr>
		</tbody>
	</table>

	<h2>Zubereitung:</h2>
	<p>Biskuitteig herstellen:
		<ol>
			<LI>Den Ofen auf 180&deg;C vorheizen.</LI>
			<LI>3 Eier trennen und die Eiweiss mit einer Prise Salz steif schlagen.</LI>
			<LI>90g Zucker darunter schlagen, bis die Masse gl&auml;nzt.</LI>
			<LI>3 Eigelb mitr&uuml;hren.</LI>
			<LI>Mehl dazugeben.</LI>
			<LI>30g Butter schmelzen und darunter ziehen.</LI>
			<LI>Masse in die Springform f&uuml;llen.</LI>
			<LI>Bei 180&deg;C 15 Minuten backen.</LI>
		</ol>
	</p>

	<p>Belag:
		<ol>
			<LI>Die Schokoladen mit dem Pflanzenfett im Wasserbad auf kleiner Flamme schmelzen lasen und anschliessend
				abk&uuml;hlen.</LI>
			<LI>Butter schaumig r&uuml;hren</LI>
			<LI>Puderzucker Essl&ouml;ffelweise zugeben und solange r&uuml;hren, bis die Creme glatt ist.</LI>
			<LI>2 Eigelb, Rum, Kakao nach und nach zugeben.</LI>
			<LI>Kaffeepulver in 2 TL heissem Wasser aufl&ouml;sen und unter die Masse r&uuml;hren.</LI>
			<LI>Die Schokoladenmasse nun in kleinen Mengen unter die Buttercreme r&uuml;hren.</LI>
		</ol>
	</p>

	<p>Den Biskuit in 3 B&ouml;den schneiden und darauf die H&auml;lfte der Schokoladencreme verstreichen. Die 3
		B&ouml;den aufeinander setzen.</p>
	<p>Schokoladenraspel auf den senkrechten Rand streuen.</p>
	<p>Den Rest der Masse in einen Spritzbeutel f&uuml;llen und die Torte nach Wunsch verzieren.</p>


	<h2>Quelle:</h2>
	<p>Herbert Eigenmann, Code: SKT</p>

	<h2>Bewertung:</h2>
	<p>Dieses Rezept war wohl von Anfang an nicht so toll geschrieben und es hat in der Transformation massiv gelitten.
		Habe es am 16.2.2008 wieder aufgepeppt kann aber nicht sagen ob es im Sinn des Erfinders war. F&uuml;r den
		Biskuitteig habe ich mit Google etwas gefunden. Der Tortenboden schmeckt ganz gut nur wie man das m&uuml;de 1 cm
		Ding 2 mal schneiden soll leuchtet mir nicht ein. Und, &uuml;berhaupt wie soll so was aufgehen? Vielleicht wenn
		man ein Pack Backpulver noch hinein sch&uuml;ttet? Nun, der Schokoladen&uuml;berzug macht das dann sehr
		reichhaltig und geschmacklich kommt das gut. Einzig beim Auftragen des Gusses muss man sich genau &uuml;berlegen
		wie man die Schicht auf der Torte abk&uuml;hlt ohne dass der Inhalt der Pfanne fest wird. Das bitterkalte Wetter
		auf dem Balkon kam da gerade hilfreich zur Hand. RE 17.2.2008</p>


<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-PHL53P" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

<script>
  // Function to request a wake lock
  async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

  // Function to release the wake lock
  function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

  // Initialize wake lock on page load
  async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
          await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
  }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
    requestWakeLock();
      } else {
    releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
    releaseWakeLock(); // Automatically release wake lock when page is hidden
  wakeLockToggle.checked = false; // Update checkbox state
      }
    });

  // Enable wake lock by default when the page loads
  window.addEventListener('load', initializeWakeLock);
</script>
</body>

</html>