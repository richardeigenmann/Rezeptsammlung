<!DOCTYPE HTML>
<html>

<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title>Els&auml;ssiche Zwetschgen Tarte</title>
	<link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
	<meta name="RCP-Speise-Kategorie" content="Desserts">
	<meta name="RCP-Speise-Kategorie" content="Vegetarisch">
	<meta name="RCP-Speise-Kategorie" content="Aus dem Ofen">
	<meta name="RCP-Region" content="Els&auml;ssisch">
	<meta name="RCP-Zutat" content="M&uuml;rbeteig">
	<meta name="RCP-Zutat" content="Zwetschgen">
	<meta name="RCP-Zutat" content="Rosinen">
	<meta name="RCP-Zutat" content="Zucker">
	<meta name="RCP-Zutat" content="Rum">
	<meta name="RCP-Zutat" content="Zitornenschale">
	<meta name="RCP-Zutat" content="Rotwein">
	<meta name="RCP-Bewertung" content="3 Sterne">
	<meta name="RCP-Quelle" content="Herbert Eigenmann">
</head>

<body>
	<h1>Els&auml;ssiche Zwetschgen Tarte</h1>
	<img src="Rcp275.jpg" alt="Els&auml;ssiche Zwetschgen Tarte" width="400" height="333">

	<table>
		<tbody>
			<tr>
				<td colspan="2"><strong>Zutaten f&uuml;r 6 Personen:</strong></td>
			</tr>
			<tr>
				<td class="td-qty">250g</td>
				<td><strong>Kuchenteig</strong></td>
			</tr>
			<tr>
				<td class="td-qty">350 g</td>
				<td><strong>Zwetschgen</strong></td>
			</tr>
			<tr>
				<td class="td-qty">50 g</td>
				<td><strong>Rosinen</strong></td>
			</tr>
			<tr>
				<td class="td-qty">100 g</td>
				<td><strong>Zucker</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1/2 Tasse</td>
				<td><strong>Rum</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1</td>
				<td><strong>Zitronenschale</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1/2 Tasse</td>
				<td><strong>Rotwein</strong></td>
			</tr>
		</tbody>
	</table>

	<h2>Vorbereiten:</h2>
	<p>Die Rosinen am Vortag im Rum einweichen.</p>

	<h2>Zubereitung:</h2>
	<p>Die entsteinten Zwetschgen in einer Pfanne mit den Rosinen, dem Wein, dem Wasser, dem Zucker und der
		Zitronenschale aufkochen und 15 Minuten auf kleiner Flamme k&ouml;cheln lassen.</p>
	<p>Bebuttern Sie eine Springform (22 cm) und kleiden sie diese mit dem Kuchenteig aus. Sie ben&ouml;tigen noch ein
		paar streifen Kuchenteig f&uuml;r die Dekoration.</p>
	<p>Geben Sie das Pflaumenkompott in die Form und formen sie aus den Teigstreifen ein Gitter.</p>
	<p>Im Ofen bei hoher Hitze (220 &deg;?) 10 Minuten backen.</p>
	<p>Anschliessend Hitze reduzieren und weitere 10 Minuten backen (150&deg;?)</p>

	<h2>Quelle:</h2>
	<p>Herbert Eigenmann, Code: ZWA</p>

	<h2>Bewertung:</h2>
	<p>Ist mir nicht optimal gelungen schmeckt aber vielversprechend (und s&uuml;ss). Das Rezept war noch auf
		Franz&ouml;sisch und etwas unklar. Ich denke das Pack Kuchenteig sollte eher ein 250g Pack sein denn ein 500g
		Pack. Dann scheint mir es h&auml;tte auch mehr Zwetschgen vertragen also eher 300-400g. Bei den
		Fl&uuml;ssigkeiten habe ich aus dem Handgelenk gemessen und entsprechend ist der Sirup beim fertigen Produkt
		auch sehr fl&uuml;ssig raus gekommen. Vielleicht wird es beim n&auml;chsten mal besser. RE 18.10.2009</p>

<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<script async src="https://www.googletagmanager.com/gtag/js?id=G-XWT8EWS5BN"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-XWT8EWS5BN');
  // Function to request a wake lock
  async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

  // Function to release the wake lock
  function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

  // Initialize wake lock on page load
  async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
          await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
  }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
    requestWakeLock();
      } else {
    releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
    releaseWakeLock(); // Automatically release wake lock when page is hidden
  wakeLockToggle.checked = false; // Update checkbox state
      }
    });

  // Enable wake lock by default when the page loads
  window.addEventListener('load', initializeWakeLock);
</script>
</body>

</html>