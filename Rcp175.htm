<!DOCTYPE HTML>
<html>

<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title>Panang Hackfleischb&auml;llchen</title>
	<link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
	<meta name="RCP-Speise-Kategorie" content="Fleischgerichte">
	<meta name="RCP-Speise-Kategorie" content="Hauptgerichte">
	<meta name="RCP-Region" content="Thail&auml;ndisch">
	<meta name="RCP-Region" content="Asiatisch">
	<meta name="RCP-Zutat" content="Hackfleisch">
	<meta name="RCP-Zutat" content="Mehl">
	<meta name="RCP-Zutat" content="Pflanzen&ouml;l">
	<meta name="RCP-Zutat" content="Rote Currypaste">
	<meta name="RCP-Zutat" content="Erdn&uuml;sse">
	<meta name="RCP-Zutat" content="Kokosmilch">
	<meta name="RCP-Zutat" content="Zucker">
	<meta name="RCP-Zutat" content="Nampla Sauce">
	<meta name="RCP-Bewertung" content="3 Sterne">
	<meta name="RCP-Quelle" content="Unbekannt">
</head>

<body>
	<h1>Panang Hackfleischb&auml;llchen</h1>
	<img src="Rcp175.jpg" alt="Panang Hackfleischb&auml;llchen" width="400" height="302">

	<table>
		<tbody>
			<tr>
				<td colspan="2"><strong>Zutaten f&uuml;r 4 Personen:</strong></td>
			</tr>
			<tr>
				<td class="td-qty">500 g</td>
				<td><strong>gehacktes Rindfleisch</strong></td>
			</tr>
			<tr>
				<td class="td-qty"></td>
				<td><strong>Salz</strong></td>
			</tr>
			<tr>
				<td class="td-qty"></td>
				<td><strong>Pfeffer aus der M&uuml;hle</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1/2 Tasse</td>
				<td><strong>Mehl</strong></td>
			</tr>
			<tr>
				<td class="td-qty">2 El</td>
				<td><strong>Pflanzen&ouml;l</strong></td>
			</tr>
			<tr>
				<td class="td-qty">2 El</td>
				<td><strong>rote Currypaste</strong></td>
			</tr>
			<tr>
				<td class="td-qty">12</td>
				<td><strong>Erdn&uuml;sse</strong></td>
			</tr>
			<tr>
				<td class="td-qty"></td>
				<td><strong>Kokosmilch (Dose)</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 Tl</td>
				<td><strong>Zucker</strong></td>
			</tr>
			<tr>
				<td class="td-qty">einige Tropfen</td>
				<td><strong>Nampla Sauce</strong> (thail&auml;ndische Gew&uuml;rzsauce aus fermentierten Fischen)</td>
			</tr>
		</tbody>
	</table>

	<h2>Zubereitung:</h2>
	<p>Hackfleisch mit Salz und Pfeffer w&uuml;rzen und zu kleinen Kugeln formen. Im Mehl wenden und im heissen &Ouml;l,
		unter rotierendem Bewegen der Bratpfanne rundum anbr&auml;unen. Aus der Pfanne nehmen und zugedeckt warm
		stellen.</p>
	<p>F&uuml;r die Sauce Erdn&uuml;sse, 2 El Kokosmilch und Zucker im M&ouml;rser zu einer Paste verarbeiten.
		Currypaste im restlichen &Ouml;l der Bratpfanne w&auml;hrend rund 2 Minuten unter R&uuml;hren anbraten;
		Erdnusspaste zuf&uuml;gen und zusammen mit etwas Kokosmilch zu einer s&auml;migen Sauce vermischen, mit Nampla
		abschmecken.</p>
	<p>Hackfleischb&auml;llchen in die Sauce geben uund unter st&auml;ndigem Wenden fertig garen. In einer Sch&uuml;ssel
		anrichten, mit Basilikumbl&auml;ttchen garnieren und zusammen mit Duftreis (Parf&uuml;mreis) servieren.</p>

	<h2>Quelle:</h2>
	<p>Unbekannt.</p>

	<h2>Bewertung:</h2>
	<p>Getestet am 3.3.96 von RE: Statt m&uuml;hsam Erdn&uuml;sse zu zerstampfen habe ich Erdnussbutter verwendet. Was
		roter Currypaste ist, bleibt mir ein Geheimnis; ich verwendete ein Chili Salsa Zeug. Viel Sauce gab das Rezept
		nicht her. Aber es war nicht schlecht. Nampla hatte ich auch keins; das wird man wohl in einem
		Spezialit&auml;tenladen kriegen...</p>
	<p>11 Jahre sp&auml;ter weiss ich sehr wohl was roter Currypaste ist. Die Fleischb&auml;llchen k&ouml;nnte man
		vielleicht mit Zwiebeln machen und etwas Brot. Ganz OK, das Rezept. RE, 9.10.2007</p>


<p CLASS='linkback'>
    <a href='https:\/\/richardeigenmann.github.io\/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    <script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-47341387-3', 'auto');
  ga('send', 'pageview');

    let wakeLock = null; // Variable to hold the wake lock instance
    const statusText = document.getElementById('status');
    const wakeLockToggle = document.getElementById('wakeLockToggle');

    // Function to request a wake lock
    async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
          //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
          wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

    // Function to release the wake lock
    function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

    // Initialize wake lock on page load
    async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
        await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
    }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
        requestWakeLock();
      } else {
        releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
        releaseWakeLock(); // Automatically release wake lock when page is hidden
        wakeLockToggle.checked = false; // Update checkbox state
      }
    });

    // Enable wake lock by default when the page loads
    window.addEventListener('load', initializeWakeLock);
</script>
</body>

</html>