<!DOCTYPE HTML>
<html>

<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Sauerrahm-Glace</title>
    <link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
    <meta name="RCP-Speise-Kategorie" content="Desserts">
    <meta name="RCP-Speise-Kategorie" content="Glace">
    <meta name="RCP-Zutat" content="Rahm">
    <meta name="RCP-Zutat" content="Puderzucker">
    <meta name="RCP-Zutat" content="Saurer Halbrahm">
    <meta name="RCP-Zutat" content="Schmand">
    <meta name="RCP-Bewertung" content="4 Sterne">
    <meta name="RCP-Quelle" content="Sandra Keller">
    <meta name="RCP-Quelle" content="Internet">
</head>

<body>
    <h1>Sauerrahm-Glace</h1>
    <img src="Rcp515.jpg" alt="Sauerrahm-Glace" width="450" height="292" align="left" border="0">

    <table>
        <tbody>
            <tr>
                <td colspan="2"><strong>Zutaten f&uuml;r 4 Personen:</strong></td>
            </tr>
            <tr>
                <td class="td-qty">1dl</td>
                <td><strong>Rahm</strong> (30% Fett)</td>
            </tr>
            <tr>
                <td class="td-qty">80g</td>
                <td><strong>Puderzucker</strong></td>
            </tr>
            <tr>
                <td class="td-qty">1 Becher</td>
                <td><strong>saurer Halbrahm</strong> (10% Fett)</td>
            </tr>
            <tr>
                <td class="td-qty">1 Becher</td>
                <td><strong>Schmand</strong> (24% Fett)</td>
            </tr>
        </tbody>
    </table>

    <h2>Zubereitung f&uuml;r 4 Personen (7-8 Kugeln)</h2>

    <p>1dl Rahm (30% Fett) - Halbrahm oder Vollrahm steif schlagen und nach und nach</p>

    <p>80g Puderzucker beigeben</p>

    <p>1 Becher saurer Halbrahm (10% Fett) darunter r&uuml;hren</p>

    <p>1 Becher Schmand (24% Fett) mit der Masse vorsichtig vermischen</p>

    <p>In eine Form geben, die im Tiefk&uuml;hler Platz hat und ca. alle 30 Minuten umr&uuml;hren damit das Glace geschmeidig
        wird und sich keine grossen Eiskristalle bilden.</p>

    <p>Wenn das Glace mehr als 4h im Voraus zubereitet wurde (z.B. am Vortag), 10 Minuten vor dem Portionieren aus dem
        Gefrierfach nehmen und in den K&uuml;hlschrank stellen.</p>



    <h3>Bemerkung:</h3>

    <p>Eine hervorragende Beilage f&uuml;r Rotweinbirnen, <a href="Rcp184.htm">Schokoladenk&uuml;chlein</a> oder Fruchtsalat. Vorher 4 Stunden
        gefrieren lassen.</p>

    <h2>Quelle:</h2>
    <p>Sandra Keller vom Internet: <a
            href="https://www.bettybossi.ch/de/Rezept/ShowRezept/BB_WEKL101101_0089A-40-de">Betty Bossi</a></p>

    <h2>Bewertung:</h2>
    <p>Ausgezeichnet! RE Dez 2017</p>

<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<!-- Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
  new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
  j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
  'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
  })(window,document,'script','dataLayer','GTM-PHL53P');</script>
  <!-- End Google Tag Manager -->
<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-PHL53P" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

<script>
  // Function to request a wake lock
  async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

  // Function to release the wake lock
  function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

  // Initialize wake lock on page load
  async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
          await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
  }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
    requestWakeLock();
      } else {
    releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
    releaseWakeLock(); // Automatically release wake lock when page is hidden
  wakeLockToggle.checked = false; // Update checkbox state
      }
    });

  // Enable wake lock by default when the page loads
  window.addEventListener('load', initializeWakeLock);
</script></body>

</html>