<!DOCTYPE HTML>
<html>

<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>H&auml;nchenbrust in Zitrone</title>
  <link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
  <meta name="RCP-Speise-Kategorie" content="Fleischgerichte">
  <meta name="RCP-Speise-Kategorie" content="Hauptgerichte">
  <meta name="RCP-Zutat" content="Zitronen">
  <meta name="RCP-Zutat" content="Knoblauch">
  <meta name="RCP-Zutat" content="Butter">
  <meta name="RCP-Zutat" content="Pouletbrust">
  <meta name="RCP-Zutat" content="Petersilie">
  <meta name="RCP-Bewertung" content="2 Sterne">
  <meta name="RCP-Quelle" content="Werbebrosch&uuml;re">
<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-XWT8EWS5BN"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-XWT8EWS5BN');
</script>
<body>
  <h1>H&auml;nchenbrust in Zitrone</h1>
  <img src="Rcp386.jpg" alt="H&auml;nchenbrust in Zitrone" width="400" height="281">

  <table>
    <tbody>
      <tr>
        <td colspan="2"><strong>Zutaten f&uuml;r 4 Portionen:</strong></td>
      </tr>
      <tr>
        <td class="td-qty">1</td>
        <td><strong>Zitrone</strong></td>
      </tr>
      <tr>
        <td class="td-qty">2 - 3</td>
        <td><strong>Knoblauchzehen</strong></td>
      </tr>
      <tr>
        <td class="td-qty">2 EL</td>
        <td><strong>Pflanzen&ouml;l</strong>
        </td>
      </tr>
      <tr>
        <td class="td-qty">40 g</td>
        <td><strong>Butter</strong></td>
      </tr>
      <tr>
        <td class="td-qty">4</td>
        <td> <strong>H&auml;nchenbrustfilets</strong> ohne Haut<br>
        </td>
      </tr>
      <tr>
        <td class="td-qty">3-4 EL</td>
        <td>gehackte, frische <strong>glatte Petersilie</strong> oder <strong>Estragon</strong></td>
      </tr>
      <tr>
        <td class="td-qty"></td>
        <td><strong>Salz, Pfeffer</strong>)
        </td>
      </tr>
    </tbody>
  </table>

  <h2>Zubereitung:</h2>
  <p>Vorbereitung: 10 Minuten<br>
    Garen: 20 Minuten</p>

  <p>Den Knoblauch sch&auml;len und in d&uuml;nne Scheiben schneiden. Die Zitronenschale mit einem Zestenreisser in
    feinen Streifen abziehen. Den Saft einer Zitronenh&auml;lfte auspressen.</p>
  <p>Das &Ouml;l und die Butter bei niedriger Temperatur in der Pfanne erhitzen. Das H&auml;nchenfleisch hinzugeben und
    auf jeder Seite etwa 10 Minuten braten. Dann herausnehmen, auf einen Teller legen und warm halten.</p>
  <p>Knoblauch 30 Sekunden braten. 2 EL Wasser, Schale und Saft der Zitrone sowie Petersilie hinzuf&uuml;gen,
    w&uuml;rzen und 1 Minute erhitzen. Mit einem L&ouml;ffel auf dem Fleisch verteilen.</p>

  <h2>Kommentar:</h2>
  <p>Mit Kartoffelstock oder ged&auml;mpftem gr&uuml;nen Gem&uuml;se servieren.</p>

  <h2>Kalorien:</h2>
  <p>pro Portion: 15g Fett, 34g Eiweiss, 2g Kohlenhydrate, 0.5g Ballaststoffe, 0.3g Natrium, 1185 kJ, 280 kcal </p>

  <h2>Quelle:</h2>
  <p>Irgend so ein Junk Mail Rezeptsammelding, 2001</p>

  <h2>Bewertung:</h2>
  <p>31.10.2004 Ist OK. Zitronenschale will niemand essen also muss das weg. Die Zitronensauce schmeckt gut. Genug davon
    machen.</p>

<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-PHL53P" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

<script>
  // Function to request a wake lock
  async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

  // Function to release the wake lock
  function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

  // Initialize wake lock on page load
  async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
          await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
  }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
    requestWakeLock();
      } else {
    releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
    releaseWakeLock(); // Automatically release wake lock when page is hidden
  wakeLockToggle.checked = false; // Update checkbox state
      }
    });

  // Enable wake lock by default when the page loads
  window.addEventListener('load', initializeWakeLock);
</script>
</body>

</html>