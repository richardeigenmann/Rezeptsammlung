<!DOCTYPE HTML>
<html>

<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Tandoori-Chicken</title>
  <link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
  <meta name="RCP-Speise-Kategorie" content="Fleischgerichte">
  <meta name="RCP-Speise-Kategorie" content="Aus dem Ofen">
  <meta name="RCP-Region" content="Indisch">
  <meta name="RCP-Zutat" content="Pouletschenkel">
  <meta name="RCP-Zutat" content="Apfelessig">
  <meta name="RCP-Zutat" content="Joghurt Nature">
  <meta name="RCP-Zutat" content="Tandoori Paste">
  <meta name="RCP-Bewertung" content="4 Sterne">
  <meta name="RCP-Quelle" content="Betty Bossi">
<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-XWT8EWS5BN"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-XWT8EWS5BN');
</script>
<body>
  <h1>Tandoori-Chicken</h1>
  <img src="Rcp024.jpg" alt="Tandoori-Chicken" width="400" height="296">

  <table>
    <tbody>
      <tr>
        <td colspan="2">
          <strong>Zutaten f&uuml;r 4 Personen:</strong>
        </td>
      </tr>
      <tr>
        <td class="td-qty">1 kg</td>
        <td><strong>Pouletschenkel</strong>, ohne Haut, halbiert</td>
      </tr>
      <tr>
        <td class="td-qty">1 El</td>
        <td><strong>Apfelessig</strong></td>
      </tr>
      <tr>
        <td class="td-qty">1.5 Tl</td>
        <td><strong>Salz</strong></td>
      </tr>
      <tr>
        <td class="td-qty">360 g</td>
        <td><strong>Joghurt Nature</strong></td>
      </tr>
      <tr>
        <td class="td-qty">4 El</td>
        <td><strong>Tandoori Paste</strong></td>
      </tr>
    </tbody>
  </table>

  <h2>Zubereitung:</h2>
  <p>Vor- und zubereiten: 25 Minuten</p>
  <p>Marinieren: 12 Stunden. Braten 40 Minuten</p>
  <p>Poulet mehrmals ca. 2mm tief einschneiden. Essig und Salz verr&uuml;hren, Poulet damit einreiben, zugedeckt im
    K&uuml;hlschrank 1 Stunde marinieren.</p>
  <p>Joghurt und Tandoori-Paste verr&uuml;hren, Poulet damit bestreichen, zugedeckt im K&uuml;hlschrank ca. 11 Stunden
    marinieren.</p>
  <p>Poulet auf ein mit Backpapier belegtes Blech legen.</p>
  <p><strong>Braten:</strong> ca. 40 Minuten in der Mitte des auf 180&deg;C vorgeheizten Ofens.</p>
  <p><strong>Dazu passen:</strong> <a href="Rcp025.htm">Masoor Daal</a>, Basmatireis, Pappadams.</p>

  <h2>Kalorien:</h2>
  <p>Pro Person: 20g Fett, 32g Eiweiss, 8g Kohlenhydrate, 1420 kJ, 339 kcal</p>


  <h2>Quelle:</h2>
  <p>Betty Bossi Zeitung 01/2005 S.10</p>

  <h2>Bewertung:</h2>
  <p>Schmeckte am 22.4.2007 ausgezeichnet.</p>

<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-PHL53P" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

<script>
  // Function to request a wake lock
  async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

  // Function to release the wake lock
  function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

  // Initialize wake lock on page load
  async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
          await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
  }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
    requestWakeLock();
      } else {
    releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
    releaseWakeLock(); // Automatically release wake lock when page is hidden
  wakeLockToggle.checked = false; // Update checkbox state
      }
    });

  // Enable wake lock by default when the page loads
  window.addEventListener('load', initializeWakeLock);
</script>
</body>

</html>