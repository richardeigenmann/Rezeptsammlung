<!DOCTYPE HTML>
<html>

<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Pouletspiesschen mit Cantadou Dip</title>
  <link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
  <meta name="RCP-Speise-Kategorie" content="Ap&eacute;roh&auml;ppchen">
  <meta name="RCP-Speise-Kategorie" content="Fleischgerichte">
  <meta name="RCP-Speise-Kategorie" content="Vorspeisen">
  <meta name="RCP-Zutat" content="Pouletbrust">
  <meta name="RCP-Zutat" content="Trauben">
  <meta name="RCP-Zutat" content="Basilikum">
  <meta name="RCP-Zutat" content="Cantadou mit gr&uuml;nem Pfeffer">
  <meta name="RCP-Zutat" content="Oliven">
  <meta name="RCP-Bewertung" content="3 Sterne">
  <meta name="RCP-Quelle" content="Werbebrosch&uuml;re">
</head>

<body>
  <h1>Pouletspiesschen mit Cantadou Dip</h1>
  <img src="Rcp449.jpg" alt="Pouletspiesschen mit Cantadou Dip" width="400" height="259">

  <table>
    <tbody>
      <tr>
        <td colspan="2"><strong>Zutaten:</strong></td>
      </tr>
      <tr>
        <td class="td-qty"></td>
        <td><strong>Pouletbrust</strong></td>
      </tr>
      <tr>
        <td class="td-qty"></td>
        <td><strong>Trauben</strong></td>
      </tr>
      <tr>
        <td class="td-qty"></td>
        <td><strong>Basilikum-Bl&auml;tter</strong></td>
      </tr>
      <tr>
        <td class="td-qty"></td>
        <td><strong>Cantadou mit gr&uuml;nem Pfeffer</strong></td>
      </tr>
      <tr>
        <td class="td-qty">1 El</td>
        <td><strong>gr&uuml;ne Oliven</strong></td>
      </tr>
    </tbody>
  </table>

  <h2>Zubereitung</h2>
  <p>Pouletbrust braten und erkalten lassen.</p>
  <p>Gebratene Pouletbrust in W&uuml;rfel schneiden. Auf Spiess mit Trauben und Basilikum
    spiessen. Dabei darauf achten, dass das Poulet wirklich nicht mehr warm ist da sich die Basilikumbl&auml;tter sonst
    verf&auml;rben.</p>
  <p>Den Cantadou mit den Oliven vermischen und als Dip servieren.</p>

  <h2>Quelle:</h2>
  <p>Werbebrosch&uuml;re von Cantadou</p>

  <h2>Bewertung:</h2>
  <p>Gibt sicher einen tollen Snack f&uuml;r den Ausflug in die Badi oder an den Strand ab. Der Cantadou ist nicht
    wirklich fl&uuml;ssig genug um als Dip durchgehen zu k&ouml;nnen. Vielleicht m&uuml;sste man ihn etwas mit Rahm oder
    Milch strecken? Hat zu Hause auch toll geschmeckt. RE, 26.8.2007</p>
  <p>Am 25.3.2009 neu zubereitet f&uuml;r das Foto. War etwas langweilig. Der Dip wird halt nicht fl&uuml;ssig. Ich habe
    Rahm beigegeben aber so der Wahn ist das nicht. RE</p>

<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-47341387-3', 'auto');
  ga('send', 'pageview');

    let wakeLock = null; // Variable to hold the wake lock instance
    const statusText = document.getElementById('status');
    const wakeLockToggle = document.getElementById('wakeLockToggle');

    // Function to request a wake lock
    async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
          //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
          wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

    // Function to release the wake lock
    function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

    // Initialize wake lock on page load
    async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
        await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
    }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
        requestWakeLock();
      } else {
        releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
        releaseWakeLock(); // Automatically release wake lock when page is hidden
        wakeLockToggle.checked = false; // Update checkbox state
      }
    });

    // Enable wake lock by default when the page loads
    window.addEventListener('load', initializeWakeLock);
</script></body>

</html>