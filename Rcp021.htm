<!DOCTYPE HTML>
<html>

<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Fenchel-Schinken-Gratin &quot;alla Parmigiana&quot;</title>
  <link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
  <meta name="RCP-Speise-Kategorie" content="Gratins">
  <meta name="RCP-Speise-Kategorie" content="Hauptgerichte">
  <meta name="RCP-Speise-Kategorie" content="Aus dem Ofen">
  <meta name="RCP-Region" content="Italienisch">
  <meta name="RCP-Zutat" content="Fenchel">
  <meta name="RCP-Zutat" content="Schinken">
  <meta name="RCP-Zutat" content="Mehl">
  <meta name="RCP-Zutat" content="Butter">
  <meta name="RCP-Zutat" content="Milch">
  <meta name="RCP-Zutat" content="Greyerzer">
  <meta name="RCP-Bewertung" content="3 Sterne">
  <meta name="RCP-Quelle" content="Herbert Eigenmann">
<!-- Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
  new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
  j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
  'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
  })(window,document,'script','dataLayer','GTM-PHL53P');</script>
<!-- End Google Tag Manager -->
</head>
<body>
  <h1>Fenchel-Schinken-Gratin &quot;alla Parmigiana&quot;</h1>
  <img src="Rcp021.jpg" alt="Fenchel-Schinken-Gratin &quot;alla Parmigiana&quot;" width="400" height="271">

  <table>
    <tbody>
      <tr>
        <td colspan="2">
          <strong>Zutaten f&uuml;r 4 Personen:</strong>
        </td>
      </tr>
      <tr>
        <td class="td-qty">750 g</td>
        <td><strong>Fenchel</strong></td>
      </tr>
      <tr>
        <td class="td-qty">200 g</td>
        <td><strong>Schinken am St&uuml;ck</strong></td>
      </tr>
      <tr>
        <td colspan=2><strong>Sauce:</strong></td>
      </tr>
      <tr>
        <td class="td-qty">20 g</td>
        <td><strong>Mehl</strong></td>
      </tr>
      <tr>
        <td class="td-qty">30 g</td>
        <td><strong>Butter oder Margarine</strong></td>
      </tr>
      <tr>
        <td class="td-qty">2 dl</td>
        <td><strong>Gem&uuml;sewasser</strong></td>
      </tr>
      <tr>
        <td class="td-qty">1 dl</td>
        <td><strong>Milch</strong></td>
      </tr>
      <tr>
        <td class="td-qty">1/4 TL</td>
        <td><strong>Salz</strong></td>
      </tr>
      <tr>
        <td class="td-qty">1Prise</td>
        <td><strong>Muskat</strong></td>
      </tr>

      <tr>
        <td colspan=2>Oder</td>
      </tr>
      <tr>
        <td class="td-qty">1 Pack</td>
        <td><strong>Weisse Sauce</strong></td>
      </tr>

      <tr>
        <td colspan=2><strong>Zum Bestreuen:</strong></td>
      </tr>
      <tr>
        <td class="td-qty">100 g</td>
        <td><strong>Greyerzer</strong></td>
      </tr>
      <tr>
        <td class="td-qty">20 g</td>
        <td><strong>Butter oder Margarine</strong></td>
      </tr>
    </tbody>
  </table>


  <h2>Zubereitung:</h2>
  <p>Ofen auf gute Hitze (230&deg;C) vorheizen.</p>
  <p>Gratinform befetten.</p>
  <p>Fenchel waschen, r&uuml;sten und halbieren.</p>
  <p>In kochendem Wasser 10 - 15 Minuten knapp garkochen.</p>
  <p>Wasser in ein Gef&auml;ss abgiessen und beiseite stellen.</p>
  <p>Schinken in 1 cm grosse W&uuml;rfelchen schneiden.</p>

  <p><strong>Sauce:</strong></p>
  <p>Mehl in der Butter d&auml;mpfen.</p>
  <p>Abl&ouml;schen. Sauce glatt r&uuml;hren und w&uuml;rzen.</p>
  <p>Fenchel in die Form legen. Schinkenw&uuml;rfelchen dar&uuml;ber streuen. Sauce &uuml;ber den Schinken verteilen.
  </p>
  <p>Mit geriebenem K&auml;se bestreuen und mit Butterfl&ouml;ckchen bereichern.</p>
  <p>Gericht 20 - 30 Minuten gratinieren,</p>

  <h2>Quelle:</h2>
  <p>Herbert Eigenmann, Code: FNG, FNP</p>

  <h2>Bewertung:</h2>
  <p>Ich habe mir am 5.11.2007 einen Gr&uuml;nzeug-Verwertungs-Gratin zubereitet. Der ist auch abgebildet. Das
    Gem&uuml;se war vielleicht etwas auf der knackigen Seite. War Recht.</p>


<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-PHL53P" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

<script>
  // Function to request a wake lock
  async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

  // Function to release the wake lock
  function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

  // Initialize wake lock on page load
  async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
          await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
  }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
    requestWakeLock();
      } else {
    releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
    releaseWakeLock(); // Automatically release wake lock when page is hidden
  wakeLockToggle.checked = false; // Update checkbox state
      }
    });

  // Enable wake lock by default when the page loads
  window.addEventListener('load', initializeWakeLock);
</script>
</body>

</html>