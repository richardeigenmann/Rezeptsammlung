<!DOCTYPE HTML>
<html>

<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Milchreis-K&ouml;pfli</title>
  <link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
  <meta name="RCP-Speise-Kategorie" content="Desserts">
  <meta name="RCP-Speise-Kategorie" content="Reisgerichte">
  <meta name="RCP-Speise-Kategorie" content="Vegetarisch">
  <meta name="RCP-Zutat" content="Butter">
  <meta name="RCP-Zutat" content="Milch">
  <meta name="RCP-Zutat" content="Zucker">
  <meta name="RCP-Zutat" content="Rosinen">
  <meta name="RCP-Zutat" content="Milchreis">
  <meta name="RCP-Zutat" content="Pflaumen">
  <meta name="RCP-Zutat" content="Zimt">
  <meta name="RCP-Quelle" content="Sandra Keller">
  <meta name="RCP-Bewertung" content="4 Sterne">
</head>

<body>
  <h1>Milchreis-K&ouml;pfli</h1>
  <img src="Rcp498.jpg" alt="Milchreis-K&ouml;pfli" width="400" height="266">

  <table>
    <tbody>
      <tr>
        <td colspan="2">
          <strong>Zutaten f&uuml;r 6 Portionen:</strong>
        </td>
      </tr>
      <tr>
        <td class="td-qty">0.6 l</td>
        <td><strong>Milch</strong></td>
      </tr>
      <tr>
        <td class="td-qty">1-2 Msp</td>
        <td><strong>Salz</strong></td>
      </tr>
      <tr>
        <td class="td-qty">1-2 EL</td>
        <td><strong>Zucker</strong></td>
      </tr>
      <tr>
        <td class="td-qty">20g</td>
        <td><strong>Butter</strong></td>
      </tr>
      <tr>
        <td class="td-qty">180g</td>
        <td><strong>Milchreis</strong></td>
      </tr>
      <tr>
        <td class="td-qty">1-2 EL</td>
        <td><strong>Rosinen</strong></td>
      </tr>

      <tr>
        <td class="td-qty">6 St&uuml;ck</td>
        <td><strong>Pflaumen</strong></td>
      </tr>
      <tr>
        <td class="td-qty">1 El</td>
        <td><strong>Zucker</strong></td>
      </tr>
      <tr>
        <td class="td-qty">1-2 Msp</td>
        <td><strong>Zimt</strong></td>
      </tr>
      <tr>
        <td class="td-qty">2 EL</td>
        <td><strong>Wasser</strong></td>
      </tr>
    </tbody>
  </table>



  <h2>Zubereitung:</h2>
  <p>Milch mit Salz, Zucker, Butter, Milchreis und Rosinen aufkochen und auf kleiner
    Flamme 20 Minuten bei gelegentlichem R&uuml;hren k&ouml;cheln. K&ouml;cheln,
    bis alle Fl&uuml;ssigkeit aufgesogen ist. Dabei darauf achten, dass der Reis
    am Pfannenboden nicht anbr&auml;unt. </p>
  <p>Pfanne vom Herd nehmen. 6 Formen oder Tassen bereitstellen. F&ouml;rmchen am
    Boden mit Zimtzucker bestreuen (ergibt eine braune Oberfl&auml;che beim
    St&uuml;rzen) oder mit kaltem Wasser aussp&uuml;len (damit sie leichter aus
    der Form kommen beim St&uuml;rzen). Dann Reis auf die Formen verteilen. Oben
    glatt streichen und abk&uuml;hlen lassen. Danach kalt stellen. Zum Anrichten
    auf Teller St&uuml;rzen.</p>
  <p><strong>Steinfrucht Kompott (Aprikosen, Zwetschgen, Pflaumen)</strong></p>
  <p>Fr&uuml;chte vierteln und entsteinen, dann in feine Scheiben (2-3mm) schneiden.
    Mit allen anderen Zutaten kurz aufkochen und 3 Minuten k&ouml;cheln lassen. Vom
    Herd nehmen, etwas abk&uuml;hlen lassen bis es nicht mehr dampft. Dann anrichten.</p>

  <h2>Tipp:</h2>
  <p>Milchreis noch warm als Brei essen.</p>

  <h2>Quelle:</h2>
  <p>Sandra Keller Feb 2012</p>

  <h2>Bewertung:</h2>
  <p>Hat gut geschmeckt. RE Feb 2012</p>

<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<script async src="https://www.googletagmanager.com/gtag/js?id=G-XWT8EWS5BN"></script>
<script>
  // Function to request a wake lock
  async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

  // Function to release the wake lock
  function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

  // Initialize wake lock on page load
  async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
          await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
  }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
    requestWakeLock();
      } else {
    releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
    releaseWakeLock(); // Automatically release wake lock when page is hidden
  wakeLockToggle.checked = false; // Update checkbox state
      }
    });

  // Enable wake lock by default when the page loads
  window.addEventListener('load', initializeWakeLock);
</script>
</body>

</html>