<!DOCTYPE HTML>
<html>

<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Poulet-Satay</title>
    <link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
    <meta name="RCP-Speise-Kategorie" content="Fleischgerichte">
    <meta name="RCP-Region" content="Thail&auml;ndisch">
    <meta name="RCP-Region" content="Asiatisch">
    <meta name="RCP-Zutat" content="Limettensaft">
    <meta name="RCP-Zutat" content="&Ouml;l">
    <meta name="RCP-Zutat" content="Sojasauce">
    <meta name="RCP-Zutat" content="Pouletbrust">
    <meta name="RCP-Kochwerkzeug" content="Holzspiesschen">
    <meta name="RCP-Bewertung" content="4 Sterne">
    <meta name="RCP-Quelle" content="Betty Bossi">
</head>

<body>
    <h1>Poulet-Satay</h1>
    <img src="Rcp463.jpg" alt="Poulet-Satay" width="400" height="324">

    <table>
        <tbody>
            <tr>
                <td colspan="2"><strong>Zutaten f&uuml;r 12 Spiessli:</strong></td>
            </tr>
            <tr>
                <td class="td-qty">3 Tl</td>
                <td><strong>Limettensaft</strong></td>
            </tr>
            <tr>
                <td class="td-qty">3 Tl</td>
                <td><strong>Sesam- oder Erdnuss&ouml;l</strong></td>
            </tr>
            <tr>
                <td class="td-qty">3 El</td>
                <td><strong>helle (light Sojasauce)</strong></td>
            </tr>
            <tr>
                <td class="td-qty">600 g</td>
                <td><strong>Pouletbr&uuml;stli</strong></td>
            </tr>
            <tr>
                <td class="td-qty">12</td>
                <td><strong>Holzspiesschen</strong></td>
            </tr>
            <tr>
                <td class="td-qty"></td>
                <td><strong>Erdnuss&ouml;l</strong> zum Braten</td>
            </tr>
        </tbody>
    </table>

    <h2>Zubereitung:</h2>
    <p>Zubereitungszeit ca. 25 Minuten, Marinieren: ca. 2 Stunden</p>
    <p>Limettensaft, &Ouml;l und Sojasauce in einer Sch&uuml;ssel gut verr&uuml;hren.</p>
    <p>Fleisch l&auml;ngs in ca. 5 mm breite Streifen schneiden.</p>
    <p>Fleisch wellenf&ouml;rmig an Spiesschen stecken, mit der Marinade bestreichen,
        zugedeckt im K&uuml;hlschrank ca. 2 Stunden marinieren, restliche Marinade beiseite stellen.</p>
    <p>Ofen auf 60&deg;C vorheizen, Platte und Teller vorw&auml;rmen. Marinade abstreifen.
        &Ouml;l in einer Bratpfanne heiss werden lassen. Spiessli portionenweise bei
        mittlerer Hitze ca. 4 Minuten braten, 1-2 mal mit der beiseite gestellten
        Marinade bestreichen, warm stellen.</p>

    <p>Dazu passt unbedingt: <a href="Rcp462.htm">Erdnusssauce</a></p>

    <h2>Quelle:</h2>
    <p>Betty Bossi Zeitung, 02, 2005 Seite 11</p>

    <h2>Bewertung:</h2>
    <p>Gelang Anfang August 2008 hervorragend. RE</p>

<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<script async src="https://www.googletagmanager.com/gtag/js?id=G-XWT8EWS5BN"></script>
<script>
  // Function to request a wake lock
  async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

  // Function to release the wake lock
  function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

  // Initialize wake lock on page load
  async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
          await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
  }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
    requestWakeLock();
      } else {
    releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
    releaseWakeLock(); // Automatically release wake lock when page is hidden
  wakeLockToggle.checked = false; // Update checkbox state
      }
    });

  // Enable wake lock by default when the page loads
  window.addEventListener('load', initializeWakeLock);
</script>
</body>

</html>