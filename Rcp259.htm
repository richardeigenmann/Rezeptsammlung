<!DOCTYPE HTML>
<html>

<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title>Birnen nach Beaujolais-Art</title>
	<link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
	<meta name="RCP-Speise-Kategorie" content="Desserts">
	<meta name="RCP-Speise-Kategorie" content="Vegetarisch">
	<meta name="RCP-Zutat" content="Birnen">
	<meta name="RCP-Zutat" content="Rotwein">
	<meta name="RCP-Zutat" content="Zucker">
	<meta name="RCP-Zutat" content="Zimtstangen">
	<meta name="RCP-Zutat" content="Gew&uuml;rznelken">
	<meta name="RCP-Zutat" content="Pfefferk&ouml;rner">
	<meta name="RCP-Zutat" content="Orangen">
	<meta name="RCP-Zutat" content="Zitronen">
	<meta name="RCP-Bewertung" content="3 Sterne">
	<meta name="RCP-Quelle" content="Herbert Eigenmann">
</head>

<body>
	<h1>Birnen nach Beaujolais-Art</h1>
	<img src="Rcp259.jpg" alt="Birnen nach Beaujolais-Art" width="400" height="357">

	<table>
		<tbody>
			<tr>
				<td colspan="2"><strong>Zutaten f&uuml;r 4 Personen:</strong></td>
			</tr>
			<tr>
				<td class="td-qty">4</td>
				<td><strong>Williamsbirnen gross</strong></td>
			</tr>
			<tr>
				<td class="td-qty">5 dl</td>
				<td><strong>Beaujolais</strong></td>
			</tr>
			<tr>
				<td class="td-qty">100 g</td>
				<td><strong>Zucker</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1/2</td>
				<td><strong>Zimtstangen</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1</td>
				<td><strong>Gew&uuml;rznelke</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1/2 TL</td>
				<td><strong>Pfefferk&ouml;rner</strong></td>
			</tr>
			<tr>
				<td class="td-qty">2</td>
				<td><strong>Orangenscheiben</strong></td>
			</tr>
			<tr>
				<td class="td-qty">2</td>
				<td><strong>Zitronenscheiben</strong></td>
			</tr>
		</tbody>
	</table>

	<h2>Zubereitung:</h2>
	<p>Williamsbirnen sch&auml;len, ohne den Stil zu entfernen.</p>
	<p>Aus Zutaten einen Sirup kochen. Die ganzen Birnen hineingeben und sie auf ganz kleinem Feuer 15 Minuten ziehen
		lassen. Zusammen mit dem gesiebten Saft in eine Glasschale geben und nach dem ersten Abk&uuml;hlen in den
		K&uuml;hlschrank stellen.</p>

	<h2>Quelle:</h2>
	<p>Herbert Eigenmann, Code: BIB</p>
	<p><a href="Rcp261.htm">Birnen in Ingwerwein</a></p>

	<h2>Bewertung:</h2>
	<p>Sandra hat schon mal echte Beaujolais Birnen gehabt und die waren sensationell. Entsprechend war die Vorgabe
		nicht zu erf&uuml;llen. Dennoch fand sie das nicht &uuml;bel daf&uuml;r, dass ich es mit Dosenbirnen zubereitet
		habe. RE 13.7.2009</p>

<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<!-- Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
  new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
  j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
  'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
  })(window,document,'script','dataLayer','GTM-PHL53P');</script>
  <!-- End Google Tag Manager -->
<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-PHL53P" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

<script>
  // Function to request a wake lock
  async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

  // Function to release the wake lock
  function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

  // Initialize wake lock on page load
  async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
          await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
  }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
    requestWakeLock();
      } else {
    releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
    releaseWakeLock(); // Automatically release wake lock when page is hidden
  wakeLockToggle.checked = false; // Update checkbox state
      }
    });

  // Enable wake lock by default when the page loads
  window.addEventListener('load', initializeWakeLock);
</script>
</body>

</html>