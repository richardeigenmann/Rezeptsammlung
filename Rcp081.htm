<!DOCTYPE HTML>
<html>

<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Kabeljau au gratin</title>
  <link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
  <meta name="RCP-Speise-Kategorie" content="Fischgerichte">
  <meta name="RCP-Speise-Kategorie" content="Gratins">
  <meta name="RCP-Speise-Kategorie" content="Aus dem Ofen">
  <meta name="RCP-Zutat" content="Kabeljau">
  <meta name="RCP-Zutat" content="Butter">
  <meta name="RCP-Zutat" content="Kartoffeln">
  <meta name="RCP-Zutat" content="Tomaten">
  <meta name="RCP-Zutat" content="Zwiebeln">
  <meta name="RCP-Zutat" content="Zitronen">
  <meta name="RCP-Zutat" content="Petersilie">
  <meta name="RCP-Bewertung" content="3 Sterne">
  <meta name="RCP-Quelle" content="Herbert Eigenmann">
</head>

<body>
  <h1>Kabeljau au gratin</h1>
  <img src="Rcp081.jpg" alt="Kabeljau au gratin" width="400" height="246">

  <table>
    <tbody>
      <tr>
        <td colspan="2"><strong>Zutaten f&uuml;r 4 Personen:</strong></td>
      </tr>
      <tr>
        <td class="td-qty">4</td>
        <td><strong>Tranchen Kabeljau</strong></td>
      </tr>
      <tr>
        <td class="td-qty">2 EL</td>
        <td><strong>Butter</strong> oder <strong>Margarine</strong></td>
      </tr>
      <tr>
        <td class="td-qty">500 g</td>
        <td><strong>Kartoffeln</strong></td>
      </tr>
      <tr>
        <td class="td-qty">500 g</td>
        <td><strong>Tomaten</strong></td>
      </tr>
      <tr>
        <td class="td-qty">1</td>
        <td><strong>Zwiebel</strong>, gross</td>
      </tr>
      <tr>
        <td class="td-qty">1/2</td>
        <td><strong>Zitrone</strong></td>
      </tr>
      <tr>
        <td class="td-qty">2 EL</td>
        <td><strong>Petersilie</strong></td>
      </tr>
      <tr>
        <td class="td-qty"></td>
        <td><strong>Salz, Pfeffer</strong></td>
      </tr>
      <tr>
        <td class="td-qty">ev. 2 dl</td>
        <td><strong>Sherry, trocken</strong></td>
      </tr>

    </tbody>
  </table>



  <h2>Zubereitung:</h2>
  <P>Kartoffeln sch&auml;len und in 3 mm dicke Scheiben schneiden. In wenig Salzwasser halbgar kochen.</P>

  <p>Die Zwiebel in Scheiben schneiden und in 1 Essl&ouml;ffel Butter goldgelb d&uuml;nsten</p>

  <p>Eine flache Gratinform ausbuttern, und die Kartoffeln hineinlegen. Die Fischtranchen dar&uuml;ber anordnen. Die
    Tomaten halbieren, w&uuml;rzen und ebenfalls in die Gratinform geben. Die Zwiebelringe auf die Tomaten verteilen;
    ebenso die Zitronenscheiben. Die restliche Butter leicht erw&auml;rmen, &uuml;ber den Fisch giessen und Sherry
    dar&uuml;ber tr&auml;ufeln. Im gut vorgeheizten Ofen (190&deg;C) ca. 30 Minuten &uuml;berbacken. Zuletzt mit
    Petersilie bestreuen.</p>

  <h2>Quelle:</h2>
  <p>Herbert Eigenmann, Code: KBG</p>

  <h2>Bewertung:</h2>
  <p>Am 4.1.2004 gelang das Rezept recht gut. Als Schwierigkeit stellte sich eine ung&uuml;nstige Gratinform heraus und
    das Fehlen von Kabeljau-Tranchen. Ich bereitete das Rezept mit 250g Kingklip Filet zu, der wenn nicht der gleiche,
    so doch ein sehr &auml;hnlicher Fisch ist. Am 17.5.2007 habe ich das nochmals gemacht um es zu fotografieren. Der
    tiefgefrorene Kabeljau war sehr gr&auml;tig und irgendwie bl&ouml;d geschnitten den die Gr&auml;ten waren sehr kurz.
  </p>


<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<script async src="https://www.googletagmanager.com/gtag/js?id=G-XWT8EWS5BN"></script>
<script>
  // Function to request a wake lock
  async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

  // Function to release the wake lock
  function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

  // Initialize wake lock on page load
  async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
          await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
  }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
    requestWakeLock();
      } else {
    releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
    releaseWakeLock(); // Automatically release wake lock when page is hidden
  wakeLockToggle.checked = false; // Update checkbox state
      }
    });

  // Enable wake lock by default when the page loads
  window.addEventListener('load', initializeWakeLock);
</script></body>

</html>