<!DOCTYPE HTML>
<html>

<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Fruchtw&auml;hen</title>
  <link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
  <meta name="RCP-Speise-Kategorie" content="Vegetarisch">
  <meta name="RCP-Speise-Kategorie" content="Aus dem Ofen">
  <meta name="RCP-Speise-Kategorie" content="W&auml;hen">
  <meta name="RCP-Region" content="Schweizerisch">
  <meta name="RCP-Zutat" content="Kuchenteig">
  <meta name="RCP-Zutat" content="Fr&uuml;chte">
  <meta name="RCP-Zutat" content="Paniermehl">
  <meta name="RCP-Zutat" content="Quark">
  <meta name="RCP-Zutat" content="Zucker">
  <meta name="RCP-Zutat" content="Mehl">
  <meta name="RCP-Zutat" content="Eier">
  <meta name="RCP-Zutat" content="Kaffeerahm">
  <meta name="RCP-Zutat" content="Milch">
  <meta name="RCP-Bewertung" content="4 Sterne">
  <meta name="RCP-Quelle" content="Claudia Knecht">
</head>

<body>
  <h1>Fruchtw&auml;hen</h1>
  <img src="Rcp299.jpg" alt="Fruchtw&auml;hen" width="400" height="266">

  <table>
    <tbody>
      <tr>
        <td colspan="2"><strong>Zutaten f&uuml;r 4 Personen:</strong></td>
      </tr>
      <tr>
        <td class="td-qty">250 g</td>
        <td><strong>Kuchenteig</strong></td>
      </tr>
      <tr>
        <td class="td-qty"></td>
        <td><strong>Fr&uuml;chte, z.B. Zwetschgen, Aprikosen, Kirschen</strong></td>
      </tr>
      <tr>
        <td class="td-qty"></td>
        <td><strong>Paniermehl</strong></td>
      </tr>
      <tr>
        <td class="td-qty">250 g</td>
        <td><strong>Quark (Rahmquark oder Magerquark)</strong></td>
      </tr>
      <tr>
        <td class="td-qty">2 geh&auml;ufte El</td>
        <td><strong>Zucker</strong></td>
      </tr>
      <tr>
        <td class="td-qty">2 geh&auml;ufte El</td>
        <td><strong>Mehl</strong></td>
      </tr>
      <tr>
        <td class="td-qty">1</td>
        <td><strong>Ei</strong></td>
      </tr>
      <tr>
        <td class="td-qty">1 Prise</td>
        <td><strong>Salz</strong></td>
      </tr>
      <tr>
        <td class="td-qty"></td>
        <td><strong>Kaffeerahm oder Milch</strong></td>
      </tr>
    </tbody>
  </table>


  <h2>Zubereitung:</h2>
  <p>Rundes Blech, ca. 28 cm Durchmesser fetten</p>

  <p><strong>Guss:</strong> Alle Zutaten bis zum Ei zusammen mischen. Kaffeerahm oder Milch unter R&uuml;hren zugeben,
    bis die Masse dickfl&uuml;ssig wird.</p>

  <p>Teig auswallen, und auf das Blech geben. Den Teig mit einer Gabel einstechen, damit er sich beim Backen nicht
    aufw&ouml;lbt. Den Teig mit Paniermehl bestreuen. Den Teig mit den entsteinten Fr&uuml;chten belegen und den Guss
    dar&uuml;ber giessen. Eventuell zuerst den Guss zugeben und dann die Fr&uuml;chte zugeben; sie sehen nach dem Backen
    besser aus.</p>

  <p>Die W&auml;he bei 180&deg;C-200&deg;C ca. 40-60 Minuten backen. Eventuell die letzten 10 Minuten nur Unterhitze
    zugeben.</p>

  <p>Eine Apfelw&auml;he am Schluss mit Zimt bestreuen.</p>


  <h2>Quelle:</h2>
  <p>Claudia Knecht</p>

  <h2>Bewertung:</h2>
  <p>Super! RE im Jan 2005</p>
  <p>Sandra findet das katastrophal. Schade um die Zutaten meint sie. Grossmutters W&auml;he sei tausendmal besser.
    Grossmutters W&auml;he hat Haseln&uuml;sse statt Paniermehl und wird mit Zimt bestreut. Auch hat es kein Mehl im
    Guss. Ich fand dieses Rezept weiterhin gut. RE Sep 2011</p>


<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-47341387-3', 'auto');
  ga('send', 'pageview');

    let wakeLock = null; // Variable to hold the wake lock instance
    const statusText = document.getElementById('status');
    const wakeLockToggle = document.getElementById('wakeLockToggle');

    // Function to request a wake lock
    async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
          //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
          wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

    // Function to release the wake lock
    function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

    // Initialize wake lock on page load
    async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
        await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
    }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
        requestWakeLock();
      } else {
        releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
        releaseWakeLock(); // Automatically release wake lock when page is hidden
        wakeLockToggle.checked = false; // Update checkbox state
      }
    });

    // Enable wake lock by default when the page loads
    window.addEventListener('load', initializeWakeLock);
</script>
</body>

</html>