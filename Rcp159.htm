<!DOCTYPE HTML>
<html>

<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Gurken in Rahmsauce</title>
  <link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
  <meta name="RCP-Speise-Kategorie" content="Beilagen">
  <meta name="RCP-Speise-Kategorie" content="Vegetarisch">
  <meta name="RCP-Region" content="Indisch">
  <meta name="RCP-Zutat" content="Salatgurken">
  <meta name="RCP-Zutat" content="Butter">
  <meta name="RCP-Zutat" content="Dill">
  <meta name="RCP-Zutat" content="Currypulver">
  <meta name="RCP-Zutat" content="Saurer Halbrahm">
  <meta name="RCP-Zutat" content="Maizena">
  <meta name="RCP-Bewertung" content="2 Sterne">
  <meta name="RCP-Quelle" content="Herbert Eigenmann">
<!-- Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
  new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
  j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
  'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
  })(window,document,'script','dataLayer','GTM-PHL53P');</script>
<!-- End Google Tag Manager -->
</head>
<body>
  <h1>Gurken in Rahmsauce</h1>
  <img src="Rcp159.jpg" alt="Gurken in Rahmsauce" width="399" height="305">

  <table>
    <tbody>
      <tr>
        <td colspan="2">
          <strong>Zutaten f&uuml;r 4 Personen:</strong>
      </tr>
      <tr>
        <td class="td-qty">2</td>
        <td><strong>Salatgurken</strong></td>
      </tr>
      <tr>
        <td class="td-qty">30 g</td>
        <td><strong>Butter</strong> oder <strong>Margarine</strong></td>
      </tr>
      <tr>
        <td class="td-qty">3/4 TL</td>
        <td><strong>Salz</strong></td>
      </tr>
      <tr>
        <td class="td-qty">1/2 TL</td>
        <td><strong>Dill</strong></td>
      </tr>
      <tr>
        <td class="td-qty">1/4 TL</td>
        <td><strong>Currypulver</strong></td>
      </tr>
      <tr>
        <td class="td-qty">75 g</td>
        <td><strong>Saurer Halbrahm</strong></td>
      </tr>
      <tr>
        <td class="td-qty">1 TL</td>
        <td><strong>Maispuder</strong></td>
      </tr>
    </tbody>
  </table>


  <h2>Mise en place:</h2>
  <p>Zutaten bereitstellen.</p>
  <p>Salz, Dill und Curry in einer Schale verr&uuml;hren und bereitstellen.</p>
  <p>Rahm und Maizena verr&uuml;hren und bereitstellen</p>

  <h2>Zubereitung:</h2>
  <p>Gurken waschen, ungesch&auml;lt in 2 cm grosse W&uuml;rfel schneiden. In der Butter 5 Minuten d&auml;mpfen.</p>
  <p>W&uuml;rzen und zugedeckt (ohne Fl&uuml;ssigkeit) auf kleiner Hitze 15 - 20 Minuten d&uuml;nsten.</p>
  <p>Den sauren Halbrahm mit Maispuder zuf&uuml;gen. Nochmals kurz aufkochen, servieren.</p>

  <h2>Quelle:</h2>
  <p>Herbert Eigenmann, Code: GRR</p>

  <h2>Bewertung:</h2>
  <p>Schmeckt indisch mit dem Curry. Dauert ein wenig zu lange in der Zubereitung ist aber ganz OK. RE 1.3.2004</p>

<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-PHL53P" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

<script>
  // Function to request a wake lock
  async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

  // Function to release the wake lock
  function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

  // Initialize wake lock on page load
  async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
          await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
  }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
    requestWakeLock();
      } else {
    releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
    releaseWakeLock(); // Automatically release wake lock when page is hidden
  wakeLockToggle.checked = false; // Update checkbox state
      }
    });

  // Enable wake lock by default when the page loads
  window.addEventListener('load', initializeWakeLock);
</script>
</body>

</html>