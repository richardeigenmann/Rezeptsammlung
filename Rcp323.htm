<!DOCTYPE HTML>
<html>

<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title>Schrotbrot</title>
	<link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
	<meta name="RCP-Speise-Kategorie" content="Brote">
	<meta name="RCP-Speise-Kategorie" content="Aus dem Ofen">
	<meta name="RCP-Speise-Kategorie" content="Vegetarisch">
	<meta name="RCP-Zutat" content="Weizenk&ouml;rner">
	<meta name="RCP-Zutat" content="Roggenschrot">
	<meta name="RCP-Zutat" content="Vollkornmehl">
	<meta name="RCP-Zutat" content="Hefe">
	<meta name="RCP-Zutat" content="Zucker">
	<meta name="RCP-Zutat" content="Roggenschrot">
	<meta name="RCP-Bewertung" content="3 Sterne">
	<meta name="RCP-Quelle" content="Werbebrosch&uuml;re">
</head>

<body>
	<h1>Schrotbrot</h1>
	<img src="Rcp323.jpg" alt="Schrotbrot" width="400" height="302">

	<table>
		<tbody>
			<tr>
				<td colspan="2"><strong>Zutaten:</strong></td>
			</tr>
			<tr>
				<td class="td-qty">100 g</td>
				<td><strong>Weizenk&ouml;rner (gewaschen)</strong></td>
			</tr>
			<tr>
				<td class="td-qty">100 g</td>
				<td><strong>Roggenschrot</strong></td>
			</tr>
			<tr>
				<td class="td-qty">300 g</td>
				<td><strong>Vollkornmehl</strong></td>
			</tr>
			<tr>
				<td class="td-qty">2 Tl</td>
				<td><strong>Salz</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1/2</td>
				<td><strong>Hefew&uuml;rfel (ca. 25 g)</strong></td>
			</tr>
			<tr>
				<td class="td-qty">1 El</td>
				<td><strong>Zucker</strong></td>
			</tr>
			<tr>
				<td class="td-qty">2,5-3,5 dl</td>
				<td><strong>Wasser</strong></td>
			</tr>
			<tr>
				<td class="td-qty">2 El</td>
				<td><strong>Roggenschrot (zum Aufstreuen)</strong></td>
			</tr>
		</tbody>
	</table>

	<h2>Zubereitung:</h2>
	<p>Die Weizenk&ouml;rner einen Tag in kaltem Wasser quellen lassen. Das Wasser abgiessen und die K&ouml;rner
		abtropfen lassen.</p>
	<p>Roggenschrot, Vollkornmehl und Salz dazu geben und die mit Zucker anger&uuml;hrte Hefe mit dem Wasser dazu
		kneten. Den Teig um das Doppelte aufgehen lassen</p>
	<p>Teig zusammenschlagen und zu einem Brotlaib formen. Nochmals kurz gehen lassen.</p>
	<p>Vor dem Backen mit Wasser bepinseln. die Teigoberfl&auml;che mit Roggenschrot bestreuen und bei 220&#176;C ca. 40
		Minuten backen.</p>

	<h2>Quelle:</h2>
	<p>Krankenkassen- Heftli</p>

	<h2>Bewertung:</h2>
	<p>Schmeckt wie die richtigen K&ouml;rnchen-Brote halt so schmecken. OK aber nichts um danach fanatisch zu werden.
		RE 19.7.2009</p>

<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<script async src="https://www.googletagmanager.com/gtag/js?id=G-XWT8EWS5BN"></script>
<script>
  // Function to request a wake lock
  async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

  // Function to release the wake lock
  function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

  // Initialize wake lock on page load
  async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
          await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
  }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
    requestWakeLock();
      } else {
    releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
    releaseWakeLock(); // Automatically release wake lock when page is hidden
  wakeLockToggle.checked = false; // Update checkbox state
      }
    });

  // Enable wake lock by default when the page loads
  window.addEventListener('load', initializeWakeLock);
</script>
</body>

</html>