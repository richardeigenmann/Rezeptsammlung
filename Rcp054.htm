<!DOCTYPE HTML>
<html>

<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Guacamole</title>
  <link rel="StyleSheet" href="rcp.css" type="text/css" media="screen">
  <meta name="RCP-Speise-Kategorie" content="Ap&eacute;roh&auml;ppchen">
  <meta name="RCP-Speise-Kategorie" content="Vegetarisch">
  <meta name="RCP-Speise-Kategorie" content="All time favorite">
  <meta name="RCP-Region" content="Mexikanisch">
  <meta name="RCP-Zutat" content="Zitronen">
  <meta name="RCP-Zutat" content="Tomaten">
  <meta name="RCP-Zutat" content="Zwiebeln">
  <meta name="RCP-Zutat" content="Knoblauch">
  <meta name="RCP-Zutat" content="Avocados">
  <meta name="RCP-Zutat" content="Tabasco">
  <meta name="RCP-Bewertung" content="4 Sterne">
  <meta name="RCP-Quelle" content="Shirley Eigenmann">
</head>

<body>
  <h1>Guacamole</h1>
  <img src="Rcp054.jpg" alt="Guacamole" width="400" height="286">

  <table>
    <tbody>
      <tr>
        <td colspan="2">
          <strong>Zutaten</strong>
        </td>
      </tr>
      <tr>
        <td class="td-qty">1</td>
        <td><strong>Zitrone</strong></td>
      </tr>
      <tr>
        <td class="td-qty">250 g</td>
        <td><strong>Tomaten</strong></td>
      </tr>
      <tr>
        <td class="td-qty">1</td>
        <td><strong>Zwiebel</strong></td>
      </tr>
      <tr>
        <td class="td-qty">1</td>
        <td><strong>Knoblauchzehe</strong></td>
      </tr>
      <tr>
        <td class="td-qty">2</td>
        <td><strong>Avocados</strong></td>
      </tr>
      <tr>
        <td class="td-qty">2 El</td>
        <td><strong>Oliven&ouml;l</strong></td>
      </tr>
      <tr>
        <td class="td-qty">1/2 Tl</td>
        <td><strong>Salz</strong></td>
      </tr>
      <tr>
        <td class="td-qty">1 Spritzer</td>
        <td><strong>Tabasco</strong></td>
      </tr>
    </tbody>
  </table>


  <h2>Mise en place:</h2>
  <p>Mixer mit Hackmessern zusammenbauen.</p>
  <p>Zitrone auspressen</p>
  <p>Tomaten sch&auml;len und in St&uuml;cke schneiden</p>
  <p>Avocadofleisch aus der Schale herausl&ouml;sen und in den Mixer geben</p>
  <p>Zwiebel sch&auml;len und fein hacken. In den Mixer geben.</p>
  <p>Knoblauch sch&auml;len und fein hacken. In den Mixer geben.</p>
  <p>Avocadofleisch herausl&ouml;sen und zugeben.</p>

  <h2>Zubereitung:</h2>
  <p>Oliven&ouml;l, Salz und Tabasco zugeben und im Mixer je nach gew&uuml;nschter Konsistenz kurz oder l&auml;nger
    laufen lassen.</p>

  <p>Mit Nacho Chips oder Nature Pommes Chips servieren.</p>

  <h2>Quelle:</h2>
  <p>Aus einem Sylva Buch von Shirley Eigenmann</p>

  <h2>Bewertung:</h2>
  <p>Hervorragend! RE</p>
  <p>Am 2.1.2009 wurde die Menge fast etwas viel f&uuml;r den Mixbecher auf der Maschine. Entsprechend wurde das nicht
    sehr homogen gemischt. Die Zwiebel und der Knoblauch waren sehr dominant. Also eher 1/2 Zwiebel. Und 250g Tomate
    scheint auch fast etwas viel. RE</p>

<p CLASS='linkback'>
    <a href='https://richardeigenmann.github.io/RezeptsammlungNg' target='_parent'>
    Richi's Rezeptsammlung
    </a>
</p>
<label>
    <input type="checkbox" id="wakeLockToggle" checked>
    Wake Lock to prevent screen timeout
</label>
    
<script async src="https://www.googletagmanager.com/gtag/js?id=G-XWT8EWS5BN"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-XWT8EWS5BN');
  // Function to request a wake lock
  async function requestWakeLock() {
      try {
        wakeLock = await navigator.wakeLock.request('screen');
        //statusText.innerHTML = 'Wake Lock is currently <strong>active</strong>.';

        // Listen for wake lock being released
        wakeLock.addEventListener('release', () => {
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        wakeLockToggle.checked = false; // Update checkbox state
        });

        console.log('Wake Lock activated.');
      } catch (err) {
        console.error(`Failed to acquire wake lock: ${err.message}`);
      }
    }

  // Function to release the wake lock
  function releaseWakeLock() {
      if (wakeLock) {
        wakeLock.release();
        wakeLock = null;
        //statusText.innerHTML = 'Wake Lock is currently <strong>inactive</strong>.';
        console.log('Wake Lock released.');
      }
    }

  // Initialize wake lock on page load
  async function initializeWakeLock() {
      if ('wakeLock' in navigator) {
          await requestWakeLock(); // Enable wake lock by default
      } else {
        //statusText.innerHTML = 'Wake Lock is <strong>not supported</strong> by your browser.';
      }
  }

    // Event listener for the checkbox
    wakeLockToggle.addEventListener('change', () => {
      if (wakeLockToggle.checked) {
    requestWakeLock();
      } else {
    releaseWakeLock();
      }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', () => {
      if (wakeLock && document.visibilityState === 'hidden') {
    releaseWakeLock(); // Automatically release wake lock when page is hidden
  wakeLockToggle.checked = false; // Update checkbox state
      }
    });

  // Enable wake lock by default when the page loads
  window.addEventListener('load', initializeWakeLock);
</script>
</body>

</html>